DCMTK FAQ - Frequently Asked Questions

----
1997.09.16

Q: The INSTALL file says that DCMTK can be compiled using the Cygnus 
   GNU-Win32 development environment for Windows95/NT.  However, Step 2 
   of the install instructions does not work because the configure script 
   fails completely (it reports "permission denied" problems and generates
   strange files in all the sub-directories).

A: You need to make sure that your PATH environment variable is set up
   so that the GNU-Win32 tools directory will be searched before the 
   standard windows locations (e.g. \WINNT\..) when when executing a 
   program.  The main problem is that the DCMTK configure scripts use
   the Unix-like "find" program whereas Windows has its own, incompatible,
   "find" program.  Unless you arrange otherwise, the wrong "find" program
   will be used.

----
1997.09.16

Q: I've compiled DCMTK using the Cygnus GNU-Win32 development environment
   for Windows95/NT but some of the programs behave strangely.

A: At the time of writing the Cygnus GNU-Win32 development environment is
   beta code and may not correctly emulate all Unix features.  In particular,
   we know that the imagectn application does not currently work because
   of problems with file locking.  We have not done any extensive testing in
   this environment but thought that it might be very useful to easily and
   cheaply use the storescu and storescp program on Windows95/NT.
   If this version is interesting for you or if you find any other problems 
   please let us know.  

----
1997.09.12

Q: All of the programs print the message 
   "Warning: no data dictionary loaded, check environment variable: 
   DCMDICTPATH" then seem to produce strange results.  

A: The DICOM data dictionary could not be loaded.  It has probably
   not been properly installed.  The default location for this file 
   (under Unix) is /usr/local/dicom/lib/dicom.dic but an
   alternive location can be specified by using the DCMDICTPATH
   environment variable.  
   See the documentation file dcmtk/dcmdata/doc/datadict.txt for more
   details about using DICOM data dictionaries.

----
1997.09.12

Q: All of the programs load a data dictionary from the text file
   /usr/local/dicom/lib/dicom.dic before they can do anything.  The 
   overhead for this flexibility is very high.  I want my programs
   to start much faster.

A: You can use a built-in in data dictionary instead.
   The code for this already exists (dcmtk/dcmdata/libsrc/dcdictzz.cc)
   and can be regenerated at any time by (see the dcmdata library Makefile:
   dcmtk/dcmdata/libsrc/Makefile.in).  You can even have the best of both
   worlds and have the main data dictionary built-in with additions loaded
   from text files (via the DCMDICTPATH environment variable).  

   See the documentation file dcmtk/dcmdata/doc/datadict.txt for more
   details about using DICOM data dictionaries.

   The example Visual C++ project makefiles for the Windows95/NT 
   platform already use the built-in data dictionary code.  

----
1997.08.26

Q: Does DCMTK compile on Microsoft Windows NT/95 ?

A: Yes.  We have added support for Win32 environments.
   Look at the README file and the Microsoft Visual C++ makefile
   in the dcmtk/config/systems/win32 directory for instructions on
   how to compile under Windows NT/95.

   Please note, there are no normal Windows applications in DCMTK.  The
   apps programs only run in a Windows DOS box.

----
1997.05.30

Q: I'm using a Nextstep system.  I run the configure script but it claims
   that my compiler is a cross-compiler (produces the message: 'checking 
   whether cross-compiling... yes') and produces nonsense results.

A: Your compiler seems to be producing code which cannot always be executed.
   There seems to be a problem with the C++ name demangler causing the 
   linker to occasionally generate bad code.  This problem occurs most 
   frequently when the using NFS file-systems.  A workaround (at least for 
   Nextstep 3.3 Developer) is to modify the shell script /bin/ld++ and remove 
   the pipe to the c++filt program.  /bin/ld++ then just contains a call to 
   the linker (i.e. ld $*).  

----
1997.05.22

Q: I'm using a unix system.  I run the configure script and then make but
   the build stops because the file 'config/Makefile.def' could not be found.

A: This means that the configure script has failed to create the
   necessary makefile definitions.  There could be several reasons for this.
   Look at the output of the configure program.  If you see a line like:

	checking whether cross-compiling... yes

   then your compiler seems to be producing code which cannot be executed.
   You could be using a very old compiler or some (shared) libraries could
   not be located.  It has been reported that some GNU C++ installations
   install shared libraries in non-standard places (e.g. /opt/gnu/lib)
   and that environment variables must be set before the compiler can be
   used (e.g. the LD_LIBRARY_PATH environment variable).  


----
1996.09.24

Q: Does DCMTK compile on Apple Macintosh ?

A: Yes.  Parts (dcmdata and dcmnet) compile using the Metrowerks
   CodeWarrior C++ compiler.  

   No real testing has yet been done.

   You will also need an appropriate version of GUSI (Grand Unified 
   Socket Interface) which is a socket implementation for Macintosh.
   This is can be obtained via 
        http://www.iis.ee.ethz.ch/~neeri/macintosh/gusi-qa.html

   You need to set appropriate include paths (e.g. dcmtk/dcmnet/include, 
   dcmtk/dcmdata/include, dcmtk/config/include, .../GUSI/include)

   If you need an example project file, please ask.

   Please note, there are no normal Macintosh applications in DCMTK.  You
   have to use a simulated Unix command line interface (via the
   CodeWarrior SIOUX library).

----
1996.09.24

Q: Where is rest of the documentation?

A: All of the available DCMTK documentation is distributed in
   the DCMTK package.  There is documentation about how to configure
   and run the programs.  What is missing is documentation about
   how to use the libraries.  Currently, the only way to learn how
   to use the libraries is to look at the example programs and
   do things the same way.  Hopefully, some documentation will be
   written in the future and financial contributions would certainly 
   reduce the waiting considerably.

----
1996.09.24

Q: None of the programs do anything, they all crash as soon
   as they get started!

A: We have received reports of configuration problems relating
   to a GNU C++ library libiostream.a.  This library was part
   of older (pre 2.7 ??) releases and is incompatible with newer
   versions of the GNU C++ library.  It seems that when installing
   a newer version of the GNU C++ library the old libiostream.a
   library does not get removed.  If our configuration scripts
   find this library then it will be used.  

   The problem manifests itself by causing any compiled program
   to immediately crash as soon as it tries to do any C++ streams
   based I/O.

   A workaround is to remove or rename the libiostream.a library.  
   Alternatively, you can edit the file dcmtk/config/Makefile.def 
   after install Step 2 (running the configure script) and remove 
   any reference to -liostream.a

----
