DCMTK FAQ - Frequently Asked Questions

----
1997.05.22

Q: I'm using a unix system.  I run the configure script and then make but
   the build stops because the file 'config/Makefile.def' could not be found.

A: This means that the configure script has failed to create the
   necessary makefile definitions.  There could be several reasons for this.
   Look at the output of the configure program.  If you see a line like:

	checking whether cross-compiling... yes

   then your compiler seems to be producing code which cannot be executed.
   You could be using a very old compiler or some (shared) libraries could
   not be located.  It has been reported that some GNU C++ installations
   install shared libraries in non-standard places (e.g. /opt/gnu/lib)
   and that environment variables must be set before the compiler can be
   used (e.g. the LD_LIBRARY_PATH environment variable).  

----
1996.09.27

Q: Does DCMTK compile on Microsoft Windows NT/95 ?

A: Yes.  We have added preliminary support for Win32 environments.
   We have compiled the dcmdata and dcmnet library and apps (as console 
   programs) using the Microsoft Visual C++ 2.0 compiler on Windows NT 4.0.  
   The dcmnet apps need to link against the WINSOCK library.  The current
   version of DCMTK (3.1.2) compiles using Microsoft Visual C++ 4.2

   No real testing has yet been done.

   To compile, you need to rename every file with a .cc suffix to
   have a .cxx suffix.  

   You need to set appropriate include paths (e.g. dcmtk/dcmnet/include, 
   dcmtk/dcmdata/include, dcmtk/config/include)

   If you need an example project file, please ask.

   Please note, there are no normal Windows applications in DCMTK.  The
   apps programs only run in a Windows console.

----
1996.09.24

Q: Does DCMTK compile on Apple Macintosh ?

A: Yes.  Parts (dcmdata and dcmnet) compile using the Metrowerks
   CodeWarrior 6.0 C++ compiler.  The current version of DCMTK (3.1.2)
   compiles using the CodeWarrior 11 compiler.

   No real testing has yet been done.

   You will also need an appropriate version of GUSI (Grand Unified 
   Socket Interface) which is a socket implementation for Macintosh.
   This is can be obtained via 
        http://www.iis.ee.ethz.ch/~neeri/macintosh/gusi-qa.html

   You need to set appropriate include paths (e.g. dcmtk/dcmnet/include, 
   dcmtk/dcmdata/include, dcmtk/config/include, .../GUSI/include)

   If you need an example project file, please ask.

   Please note, there are no normal Macintosh applications in DCMTK.  You
   have to use a simulated Unix command line interface (via the
   CodeWarrior SIOUX library).

---
1996.09.24

Q: Where is rest of the documentation?

A: All of the available DCMTK documentation is distributed in
   the DCMTK package.  There is documentation about how to configure
   and run the programs.  What is missing is documentation about
   how to use the libraries.  Currently, the only way to learn how
   to use the libraries is to look at the example programs and
   do things the same way.  Hopefully, some documentation will be
   written in the future and financial contributions would certainly 
   reduce the waiting considerably.

---
1996.09.24

Q: None of the programs do anything, they all crash as soon
   as they get started!

A: We have received reports of configuration problems relating
   to a GNU C++ library libiostream.a.  This library was part
   of older (pre 2.7 ??) releases and is incompatible with newer
   versions of the GNU C++ library.  It seems that when installing
   a newer version of the GNU C++ library the old libiostream.a
   library does not get removed.  If our configuration scripts
   find this library then it will be used.  

   The problem manifests itself by causing any compiled program
   to immediately crash as soon as it tries to do any C++ streams
   based I/O.

   A workaround is to remove or rename the libiostream.a library.  
   Alternatively, you can edit the file dcmtk/config/Makefile.def 
   after install Step 2 (running the configure script) and remove 
   any reference to -liostream.a

---
