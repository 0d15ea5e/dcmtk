/*
 *
 *  Copyright (C) 2022, OFFIS e.V.
 *  All rights reserved.  See COPYRIGHT file for details.
 *
 *  This software and supporting documentation were developed by
 *
 *    OFFIS e.V.
 *    R&D Division Health
 *    Escherweg 2
 *    D-26121 Oldenburg, Germany
 *
 *
 *  Module:  ofstd
 *
 *  Author:  Marco Eichelberg
 *
 *  Purpose: test program for oficonv functions
 *
 */

#include "dcmtk/config/osconfig.h"    /* make sure OS specific configuration is included first */

#define OFTEST_OFSTD_ONLY
#include "dcmtk/ofstd/oftest.h"
#include "dcmtk/ofstd/ofcast.h"
#include "dcmtk/oficonv/iconv.h"

/*
TO DO:
- test case for converting ASCII to EUC-KR and back
- test cases for conversion between Latin alphabets
- test cases for conversion from UTF-8 (including unsupported chars) to Latin alphabets
- test cases for "GB18030" // GB18030, variable-width encoding with one (ASCII), two (extended GBK), or four-bytes (UTF) per character
- test cases for "GB2312"  // ISO 2022 IR 58, variable-width encoding for Chinese, each letter is either 1 byte < 128 or 2 bytes, where the first is [0x81..0xFE]
- test cases for "GBK"     // GBK, an extension of GB2312. Variable-width encoding for Chinese, each letter is either 1 byte < 128 or 2 bytes, where the first is [0x81..0xFE]
- test cases for "ISO-IR-87" // JIS X 0208 Kanji. Each letter is either 1 byte (only control chars and space) or 2 bytes. https://en.wikipedia.org/wiki/JIS_X_0208
- test cases for other oficonv functions
  - OF__iconv_get_list()
  - OF__iconv_free_list()
  - OF__iconv()
  - OFiconv_open_into()
  - OFiconvlist()
  - OFiconv_canonicalize()
  - OFiconvctl()
  - OFlocale_charset()
*/

static unsigned char char_20_to_7e[] = {
  0x20, 0x21, 0x22, 0x23, 0x24, 0x25, 0x26, 0x27, 0x28, 0x29, 0x2a, 0x2b, 0x2c, 0x2d, 0x2e, 0x2f,
  0x30, 0x31, 0x32, 0x33, 0x34, 0x35, 0x36, 0x37, 0x38, 0x39, 0x3a, 0x3b, 0x3c, 0x3d, 0x3e, 0x3f,
  0x40, 0x41, 0x42, 0x43, 0x44, 0x45, 0x46, 0x47, 0x48, 0x49, 0x4a, 0x4b, 0x4c, 0x4d, 0x4e, 0x4f,
  0x50, 0x51, 0x52, 0x53, 0x54, 0x55, 0x56, 0x57, 0x58, 0x59, 0x5a, 0x5b, 0x5c, 0x5d, 0x5e, 0x5f,
  0x60, 0x61, 0x62, 0x63, 0x64, 0x65, 0x66, 0x67, 0x68, 0x69, 0x6a, 0x6b, 0x6c, 0x6d, 0x6e, 0x6f,
  0x70, 0x71, 0x72, 0x73, 0x74, 0x75, 0x76, 0x77, 0x78, 0x79, 0x7a, 0x7b, 0x7c, 0x7d, 0x7e
};

static unsigned char char_a0_to_ff[] = {
  0xa0, 0xa1, 0xa2, 0xa3, 0xa4, 0xa5, 0xa6, 0xa7, 0xa8, 0xa9, 0xaa, 0xab, 0xac, 0xad, 0xae, 0xaf,
  0xb0, 0xb1, 0xb2, 0xb3, 0xb4, 0xb5, 0xb6, 0xb7, 0xb8, 0xb9, 0xba, 0xbb, 0xbc, 0xbd, 0xbe, 0xbf,
  0xc0, 0xc1, 0xc2, 0xc3, 0xc4, 0xc5, 0xc6, 0xc7, 0xc8, 0xc9, 0xca, 0xcb, 0xcc, 0xcd, 0xce, 0xcf,
  0xd0, 0xd1, 0xd2, 0xd3, 0xd4, 0xd5, 0xd6, 0xd7, 0xd8, 0xd9, 0xda, 0xdb, 0xdc, 0xdd, 0xde, 0xdf,
  0xe0, 0xe1, 0xe2, 0xe3, 0xe4, 0xe5, 0xe6, 0xe7, 0xe8, 0xe9, 0xea, 0xeb, 0xec, 0xed, 0xee, 0xef,
  0xf0, 0xf1, 0xf2, 0xf3, 0xf4, 0xf5, 0xf6, 0xf7, 0xf8, 0xf9, 0xfa, 0xfb, 0xfc, 0xfd, 0xfe, 0xff
};

// ISO 8859-3 has a few gaps in the A0-FF range
static unsigned char iso8859_3_char_a0_to_ff[] = {
  0xa0, 0xa1, 0xa2, 0xa3, 0xa4,       0xa6, 0xa7, 0xa8, 0xa9, 0xaa, 0xab, 0xac, 0xad,       0xaf,
  0xb0, 0xb1, 0xb2, 0xb3, 0xb4, 0xb5, 0xb6, 0xb7, 0xb8, 0xb9, 0xba, 0xbb, 0xbc, 0xbd,       0xbf,
  0xc0, 0xc1, 0xc2,       0xc4, 0xc5, 0xc6, 0xc7, 0xc8, 0xc9, 0xca, 0xcb, 0xcc, 0xcd, 0xce, 0xcf,
        0xd1, 0xd2, 0xd3, 0xd4, 0xd5, 0xd6, 0xd7, 0xd8, 0xd9, 0xda, 0xdb, 0xdc, 0xdd, 0xde, 0xdf,
  0xe0, 0xe1, 0xe2,       0xe4, 0xe5, 0xe6, 0xe7, 0xe8, 0xe9, 0xea, 0xeb, 0xec, 0xed, 0xee, 0xef,
        0xf1, 0xf2, 0xf3, 0xf4, 0xf5, 0xf6, 0xf7, 0xf8, 0xf9, 0xfa, 0xfb, 0xfc, 0xfd, 0xfe, 0xff
};

// ISO 8859-6 has a few gaps in the A0-FF range
static unsigned char iso8859_6_char_a0_to_ff[] = {
  0xa0,                   0xa4,                                           0xac, 0xad,
                                                                    0xbb,                   0xbf,
        0xc1, 0xc2, 0xc3, 0xc4, 0xc5, 0xc6, 0xc7, 0xc8, 0xc9, 0xca, 0xcb, 0xcc, 0xcd, 0xce, 0xcf,
  0xd0, 0xd1, 0xd2, 0xd3, 0xd4, 0xd5, 0xd6, 0xd7, 0xd8, 0xd9, 0xda,
  0xe0, 0xe1, 0xe2, 0xe3, 0xe4, 0xe5, 0xe6, 0xe7, 0xe8, 0xe9, 0xea, 0xeb, 0xec, 0xed, 0xee, 0xef,
  0xf0, 0xf1, 0xf2
};

// ISO 8859-7 has a few gaps in the A0-FF range
static unsigned char iso8859_7_char_a0_to_ff[] = {
  0xa0, 0xa1, 0xa2, 0xa3, 0xa4, 0xa5, 0xa6, 0xa7, 0xa8, 0xa9, 0xaa, 0xab, 0xac, 0xad,       0xaf,
  0xb0, 0xb1, 0xb2, 0xb3, 0xb4, 0xb5, 0xb6, 0xb7, 0xb8, 0xb9, 0xba, 0xbb, 0xbc, 0xbd, 0xbe, 0xbf,
  0xc0, 0xc1, 0xc2, 0xc3, 0xc4, 0xc5, 0xc6, 0xc7, 0xc8, 0xc9, 0xca, 0xcb, 0xcc, 0xcd, 0xce, 0xcf,
  0xd0, 0xd1,       0xd3, 0xd4, 0xd5, 0xd6, 0xd7, 0xd8, 0xd9, 0xda, 0xdb, 0xdc, 0xdd, 0xde, 0xdf,
  0xe0, 0xe1, 0xe2, 0xe3, 0xe4, 0xe5, 0xe6, 0xe7, 0xe8, 0xe9, 0xea, 0xeb, 0xec, 0xed, 0xee, 0xef,
  0xf0, 0xf1, 0xf2, 0xf3, 0xf4, 0xf5, 0xf6, 0xf7, 0xf8, 0xf9, 0xfa, 0xfb, 0xfc, 0xfd, 0xfe
};

// ISO 8859-8 has a few gaps in the A0-FF range
static unsigned char iso8859_8_char_a0_to_ff[] = {
  0xa0,       0xa2, 0xa3, 0xa4, 0xa5, 0xa6, 0xa7, 0xa8, 0xa9, 0xaa, 0xab, 0xac, 0xad, 0xae, 0xaf,
  0xb0, 0xb1, 0xb2, 0xb3, 0xb4, 0xb5, 0xb6, 0xb7, 0xb8, 0xb9, 0xba, 0xbb, 0xbc, 0xbd, 0xbe,
                                                                                            0xdf,
  0xe0, 0xe1, 0xe2, 0xe3, 0xe4, 0xe5, 0xe6, 0xe7, 0xe8, 0xe9, 0xea, 0xeb, 0xec, 0xed, 0xee, 0xef,
  0xf0, 0xf1, 0xf2, 0xf3, 0xf4, 0xf5, 0xf6, 0xf7, 0xf8, 0xf9, 0xfa,             0xfd, 0xfe
};

// ISO 8859-11 has a few gaps in the A0-FF range
static unsigned char iso8859_11_char_a0_to_ff[] = {
  0xa0, 0xa1, 0xa2, 0xa3, 0xa4, 0xa5, 0xa6, 0xa7, 0xa8, 0xa9, 0xaa, 0xab, 0xac, 0xad, 0xae, 0xaf,
  0xb0, 0xb1, 0xb2, 0xb3, 0xb4, 0xb5, 0xb6, 0xb7, 0xb8, 0xb9, 0xba, 0xbb, 0xbc, 0xbd, 0xbe, 0xbf,
  0xc0, 0xc1, 0xc2, 0xc3, 0xc4, 0xc5, 0xc6, 0xc7, 0xc8, 0xc9, 0xca, 0xcb, 0xcc, 0xcd, 0xce, 0xcf,
  0xd0, 0xd1, 0xd2, 0xd3, 0xd4, 0xd5, 0xd6, 0xd7, 0xd8, 0xd9, 0xda,                         0xdf,
  0xe0, 0xe1, 0xe2, 0xe3, 0xe4, 0xe5, 0xe6, 0xe7, 0xe8, 0xe9, 0xea, 0xeb, 0xec, 0xed, 0xee, 0xef,
  0xf0, 0xf1, 0xf2, 0xf3, 0xf4, 0xf5, 0xf6, 0xf7, 0xf8, 0xf9, 0xfa, 0xfb
};

static unsigned char jis_x0201_characters[] = {
  0x20, 0x21, 0x22, 0x23, 0x24, 0x25, 0x26, 0x27, 0x28, 0x29, 0x2a, 0x2b, 0x2c, 0x2d, 0x2e, 0x2f,
  0x30, 0x31, 0x32, 0x33, 0x34, 0x35, 0x36, 0x37, 0x38, 0x39, 0x3a, 0x3b, 0x3c, 0x3d, 0x3e, 0x3f,
  0x40, 0x41, 0x42, 0x43, 0x44, 0x45, 0x46, 0x47, 0x48, 0x49, 0x4a, 0x4b, 0x4c, 0x4d, 0x4e, 0x4f,
  0x50, 0x51, 0x52, 0x53, 0x54, 0x55, 0x56, 0x57, 0x58, 0x59, 0x5a, 0x5b, 0x5c, 0x5d, 0x5e, 0x5f,
  0x60, 0x61, 0x62, 0x63, 0x64, 0x65, 0x66, 0x67, 0x68, 0x69, 0x6a, 0x6b, 0x6c, 0x6d, 0x6e, 0x6f,
  0x70, 0x71, 0x72, 0x73, 0x74, 0x75, 0x76, 0x77, 0x78, 0x79, 0x7a, 0x7b, 0x7c, 0x7d, 0x7e,
        0xa1, 0xa2, 0xa3, 0xa4, 0xa5, 0xa6, 0xa7, 0xa8, 0xa9, 0xaa, 0xab, 0xac, 0xad, 0xae, 0xaf,
  0xb0, 0xb1, 0xb2, 0xb3, 0xb4, 0xb5, 0xb6, 0xb7, 0xb8, 0xb9, 0xba, 0xbb, 0xbc, 0xbd, 0xbe, 0xbf,
  0xc0, 0xc1, 0xc2, 0xc3, 0xc4, 0xc5, 0xc6, 0xc7, 0xc8, 0xc9, 0xca, 0xcb, 0xcc, 0xcd, 0xce, 0xcf,
  0xd0, 0xd1, 0xd2, 0xd3, 0xd4, 0xd5, 0xd6, 0xd7, 0xd8, 0xd9, 0xda, 0xdb, 0xdc, 0xdd, 0xde, 0xdf
};

static unsigned char iso8859_1_to_utf8_a0_to_ff[] = {
  0xc2, 0xa0, 0xc2, 0xa1, 0xc2, 0xa2, 0xc2, 0xa3, 0xc2,
  0xa4, 0xc2, 0xa5, 0xc2, 0xa6, 0xc2, 0xa7, 0xc2, 0xa8, 0xc2, 0xa9, 0xc2,
  0xaa, 0xc2, 0xab, 0xc2, 0xac, 0xc2, 0xad, 0xc2, 0xae, 0xc2, 0xaf, 0xc2,
  0xb0, 0xc2, 0xb1, 0xc2, 0xb2, 0xc2, 0xb3, 0xc2, 0xb4, 0xc2, 0xb5, 0xc2,
  0xb6, 0xc2, 0xb7, 0xc2, 0xb8, 0xc2, 0xb9, 0xc2, 0xba, 0xc2, 0xbb, 0xc2,
  0xbc, 0xc2, 0xbd, 0xc2, 0xbe, 0xc2, 0xbf, 0xc3, 0x80, 0xc3, 0x81, 0xc3,
  0x82, 0xc3, 0x83, 0xc3, 0x84, 0xc3, 0x85, 0xc3, 0x86, 0xc3, 0x87, 0xc3,
  0x88, 0xc3, 0x89, 0xc3, 0x8a, 0xc3, 0x8b, 0xc3, 0x8c, 0xc3, 0x8d, 0xc3,
  0x8e, 0xc3, 0x8f, 0xc3, 0x90, 0xc3, 0x91, 0xc3, 0x92, 0xc3, 0x93, 0xc3,
  0x94, 0xc3, 0x95, 0xc3, 0x96, 0xc3, 0x97, 0xc3, 0x98, 0xc3, 0x99, 0xc3,
  0x9a, 0xc3, 0x9b, 0xc3, 0x9c, 0xc3, 0x9d, 0xc3, 0x9e, 0xc3, 0x9f, 0xc3,
  0xa0, 0xc3, 0xa1, 0xc3, 0xa2, 0xc3, 0xa3, 0xc3, 0xa4, 0xc3, 0xa5, 0xc3,
  0xa6, 0xc3, 0xa7, 0xc3, 0xa8, 0xc3, 0xa9, 0xc3, 0xaa, 0xc3, 0xab, 0xc3,
  0xac, 0xc3, 0xad, 0xc3, 0xae, 0xc3, 0xaf, 0xc3, 0xb0, 0xc3, 0xb1, 0xc3,
  0xb2, 0xc3, 0xb3, 0xc3, 0xb4, 0xc3, 0xb5, 0xc3, 0xb6, 0xc3, 0xb7, 0xc3,
  0xb8, 0xc3, 0xb9, 0xc3, 0xba, 0xc3, 0xbb, 0xc3, 0xbc, 0xc3, 0xbd, 0xc3,
  0xbe, 0xc3, 0xbf
};

static unsigned char iso8859_2_to_utf8_a0_to_ff[] = {
  0xc2, 0xa0, 0xc4, 0x84, 0xcb, 0x98, 0xc5, 0x81, 0xc2, 0xa4, 0xc4, 0xbd,
  0xc5, 0x9a, 0xc2, 0xa7, 0xc2, 0xa8, 0xc5, 0xa0, 0xc5, 0x9e, 0xc5, 0xa4,
  0xc5, 0xb9, 0xc2, 0xad, 0xc5, 0xbd, 0xc5, 0xbb, 0xc2, 0xb0, 0xc4, 0x85,
  0xcb, 0x9b, 0xc5, 0x82, 0xc2, 0xb4, 0xc4, 0xbe, 0xc5, 0x9b, 0xcb, 0x87,
  0xc2, 0xb8, 0xc5, 0xa1, 0xc5, 0x9f, 0xc5, 0xa5, 0xc5, 0xba, 0xcb, 0x9d,
  0xc5, 0xbe, 0xc5, 0xbc, 0xc5, 0x94, 0xc3, 0x81, 0xc3, 0x82, 0xc4, 0x82,
  0xc3, 0x84, 0xc4, 0xb9, 0xc4, 0x86, 0xc3, 0x87, 0xc4, 0x8c, 0xc3, 0x89,
  0xc4, 0x98, 0xc3, 0x8b, 0xc4, 0x9a, 0xc3, 0x8d, 0xc3, 0x8e, 0xc4, 0x8e,
  0xc4, 0x90, 0xc5, 0x83, 0xc5, 0x87, 0xc3, 0x93, 0xc3, 0x94, 0xc5, 0x90,
  0xc3, 0x96, 0xc3, 0x97, 0xc5, 0x98, 0xc5, 0xae, 0xc3, 0x9a, 0xc5, 0xb0,
  0xc3, 0x9c, 0xc3, 0x9d, 0xc5, 0xa2, 0xc3, 0x9f, 0xc5, 0x95, 0xc3, 0xa1,
  0xc3, 0xa2, 0xc4, 0x83, 0xc3, 0xa4, 0xc4, 0xba, 0xc4, 0x87, 0xc3, 0xa7,
  0xc4, 0x8d, 0xc3, 0xa9, 0xc4, 0x99, 0xc3, 0xab, 0xc4, 0x9b, 0xc3, 0xad,
  0xc3, 0xae, 0xc4, 0x8f, 0xc4, 0x91, 0xc5, 0x84, 0xc5, 0x88, 0xc3, 0xb3,
  0xc3, 0xb4, 0xc5, 0x91, 0xc3, 0xb6, 0xc3, 0xb7, 0xc5, 0x99, 0xc5, 0xaf,
  0xc3, 0xba, 0xc5, 0xb1, 0xc3, 0xbc, 0xc3, 0xbd, 0xc5, 0xa3, 0xcb, 0x99
};

static unsigned char iso8859_3_to_utf8_a0_to_ff[] = {
  0xc2, 0xa0, 0xc4, 0xa6, 0xcb, 0x98, 0xc2, 0xa3, 0xc2, 0xa4, 0xc4, 0xa4,
  0xc2, 0xa7, 0xc2, 0xa8, 0xc4, 0xb0, 0xc5, 0x9e, 0xc4, 0x9e, 0xc4, 0xb4,
  0xc2, 0xad, 0xc5, 0xbb, 0xc2, 0xb0, 0xc4, 0xa7, 0xc2, 0xb2, 0xc2, 0xb3,
  0xc2, 0xb4, 0xc2, 0xb5, 0xc4, 0xa5, 0xc2, 0xb7, 0xc2, 0xb8, 0xc4, 0xb1,
  0xc5, 0x9f, 0xc4, 0x9f, 0xc4, 0xb5, 0xc2, 0xbd, 0xc5, 0xbc, 0xc3, 0x80,
  0xc3, 0x81, 0xc3, 0x82, 0xc3, 0x84, 0xc4, 0x8a, 0xc4, 0x88, 0xc3, 0x87,
  0xc3, 0x88, 0xc3, 0x89, 0xc3, 0x8a, 0xc3, 0x8b, 0xc3, 0x8c, 0xc3, 0x8d,
  0xc3, 0x8e, 0xc3, 0x8f, 0xc3, 0x91, 0xc3, 0x92, 0xc3, 0x93, 0xc3, 0x94,
  0xc4, 0xa0, 0xc3, 0x96, 0xc3, 0x97, 0xc4, 0x9c, 0xc3, 0x99, 0xc3, 0x9a,
  0xc3, 0x9b, 0xc3, 0x9c, 0xc5, 0xac, 0xc5, 0x9c, 0xc3, 0x9f, 0xc3, 0xa0,
  0xc3, 0xa1, 0xc3, 0xa2, 0xc3, 0xa4, 0xc4, 0x8b, 0xc4, 0x89, 0xc3, 0xa7,
  0xc3, 0xa8, 0xc3, 0xa9, 0xc3, 0xaa, 0xc3, 0xab, 0xc3, 0xac, 0xc3, 0xad,
  0xc3, 0xae, 0xc3, 0xaf, 0xc3, 0xb1, 0xc3, 0xb2, 0xc3, 0xb3, 0xc3, 0xb4,
  0xc4, 0xa1, 0xc3, 0xb6, 0xc3, 0xb7, 0xc4, 0x9d, 0xc3, 0xb9, 0xc3, 0xba,
  0xc3, 0xbb, 0xc3, 0xbc, 0xc5, 0xad, 0xc5, 0x9d, 0xcb, 0x99
};

static unsigned char iso8859_4_to_utf8_a0_to_ff[] = {
  0xc2, 0xa0, 0xc4, 0x84, 0xc4, 0xb8, 0xc5, 0x96, 0xc2, 0xa4, 0xc4, 0xa8,
  0xc4, 0xbb, 0xc2, 0xa7, 0xc2, 0xa8, 0xc5, 0xa0, 0xc4, 0x92, 0xc4, 0xa2,
  0xc5, 0xa6, 0xc2, 0xad, 0xc5, 0xbd, 0xc2, 0xaf, 0xc2, 0xb0, 0xc4, 0x85,
  0xcb, 0x9b, 0xc5, 0x97, 0xc2, 0xb4, 0xc4, 0xa9, 0xc4, 0xbc, 0xcb, 0x87,
  0xc2, 0xb8, 0xc5, 0xa1, 0xc4, 0x93, 0xc4, 0xa3, 0xc5, 0xa7, 0xc5, 0x8a,
  0xc5, 0xbe, 0xc5, 0x8b, 0xc4, 0x80, 0xc3, 0x81, 0xc3, 0x82, 0xc3, 0x83,
  0xc3, 0x84, 0xc3, 0x85, 0xc3, 0x86, 0xc4, 0xae, 0xc4, 0x8c, 0xc3, 0x89,
  0xc4, 0x98, 0xc3, 0x8b, 0xc4, 0x96, 0xc3, 0x8d, 0xc3, 0x8e, 0xc4, 0xaa,
  0xc4, 0x90, 0xc5, 0x85, 0xc5, 0x8c, 0xc4, 0xb6, 0xc3, 0x94, 0xc3, 0x95,
  0xc3, 0x96, 0xc3, 0x97, 0xc3, 0x98, 0xc5, 0xb2, 0xc3, 0x9a, 0xc3, 0x9b,
  0xc3, 0x9c, 0xc5, 0xa8, 0xc5, 0xaa, 0xc3, 0x9f, 0xc4, 0x81, 0xc3, 0xa1,
  0xc3, 0xa2, 0xc3, 0xa3, 0xc3, 0xa4, 0xc3, 0xa5, 0xc3, 0xa6, 0xc4, 0xaf,
  0xc4, 0x8d, 0xc3, 0xa9, 0xc4, 0x99, 0xc3, 0xab, 0xc4, 0x97, 0xc3, 0xad,
  0xc3, 0xae, 0xc4, 0xab, 0xc4, 0x91, 0xc5, 0x86, 0xc5, 0x8d, 0xc4, 0xb7,
  0xc3, 0xb4, 0xc3, 0xb5, 0xc3, 0xb6, 0xc3, 0xb7, 0xc3, 0xb8, 0xc5, 0xb3,
  0xc3, 0xba, 0xc3, 0xbb, 0xc3, 0xbc, 0xc5, 0xa9, 0xc5, 0xab, 0xcb, 0x99
};

static unsigned char iso8859_5_to_utf8_a0_to_ff[] = {
  0xc2, 0xa0, 0xd0, 0x81, 0xd0, 0x82, 0xd0, 0x83, 0xd0,
  0x84, 0xd0, 0x85, 0xd0, 0x86, 0xd0, 0x87, 0xd0, 0x88, 0xd0, 0x89, 0xd0,
  0x8a, 0xd0, 0x8b, 0xd0, 0x8c, 0xc2, 0xad, 0xd0, 0x8e, 0xd0, 0x8f, 0xd0,
  0x90, 0xd0, 0x91, 0xd0, 0x92, 0xd0, 0x93, 0xd0, 0x94, 0xd0, 0x95, 0xd0,
  0x96, 0xd0, 0x97, 0xd0, 0x98, 0xd0, 0x99, 0xd0, 0x9a, 0xd0, 0x9b, 0xd0,
  0x9c, 0xd0, 0x9d, 0xd0, 0x9e, 0xd0, 0x9f, 0xd0, 0xa0, 0xd0, 0xa1, 0xd0,
  0xa2, 0xd0, 0xa3, 0xd0, 0xa4, 0xd0, 0xa5, 0xd0, 0xa6, 0xd0, 0xa7, 0xd0,
  0xa8, 0xd0, 0xa9, 0xd0, 0xaa, 0xd0, 0xab, 0xd0, 0xac, 0xd0, 0xad, 0xd0,
  0xae, 0xd0, 0xaf, 0xd0, 0xb0, 0xd0, 0xb1, 0xd0, 0xb2, 0xd0, 0xb3, 0xd0,
  0xb4, 0xd0, 0xb5, 0xd0, 0xb6, 0xd0, 0xb7, 0xd0, 0xb8, 0xd0, 0xb9, 0xd0,
  0xba, 0xd0, 0xbb, 0xd0, 0xbc, 0xd0, 0xbd, 0xd0, 0xbe, 0xd0, 0xbf, 0xd1,
  0x80, 0xd1, 0x81, 0xd1, 0x82, 0xd1, 0x83, 0xd1, 0x84, 0xd1, 0x85, 0xd1,
  0x86, 0xd1, 0x87, 0xd1, 0x88, 0xd1, 0x89, 0xd1, 0x8a, 0xd1, 0x8b, 0xd1,
  0x8c, 0xd1, 0x8d, 0xd1, 0x8e, 0xd1, 0x8f, 0xe2, 0x84, 0x96, 0xd1, 0x91,
  0xd1, 0x92, 0xd1, 0x93, 0xd1, 0x94, 0xd1, 0x95, 0xd1, 0x96, 0xd1, 0x97,
  0xd1, 0x98, 0xd1, 0x99, 0xd1, 0x9a, 0xd1, 0x9b, 0xd1, 0x9c, 0xc2, 0xa7,
  0xd1, 0x9e, 0xd1, 0x9f
};

static unsigned char iso8859_6_to_utf8_a0_to_ff[] = {
  0xc2, 0xa0, 0xc2, 0xa4, 0xd8, 0x8c, 0xc2, 0xad, 0xd8, 0x9b, 0xd8,
  0x9f, 0xd8, 0xa1, 0xd8, 0xa2, 0xd8, 0xa3, 0xd8, 0xa4, 0xd8, 0xa5, 0xd8,
  0xa6, 0xd8, 0xa7, 0xd8, 0xa8, 0xd8, 0xa9, 0xd8, 0xaa, 0xd8, 0xab, 0xd8,
  0xac, 0xd8, 0xad, 0xd8, 0xae, 0xd8, 0xaf, 0xd8, 0xb0, 0xd8, 0xb1, 0xd8,
  0xb2, 0xd8, 0xb3, 0xd8, 0xb4, 0xd8, 0xb5, 0xd8, 0xb6, 0xd8, 0xb7, 0xd8,
  0xb8, 0xd8, 0xb9, 0xd8, 0xba, 0xd9, 0x80, 0xd9, 0x81, 0xd9, 0x82, 0xd9,
  0x83, 0xd9, 0x84, 0xd9, 0x85, 0xd9, 0x86, 0xd9, 0x87, 0xd9, 0x88, 0xd9,
  0x89, 0xd9, 0x8a, 0xd9, 0x8b, 0xd9, 0x8c, 0xd9, 0x8d, 0xd9, 0x8e, 0xd9,
  0x8f, 0xd9, 0x90, 0xd9, 0x91, 0xd9, 0x92
};

unsigned char iso8859_7_to_utf8_a0_to_ff[] = {
  0xc2, 0xa0, 0xe2, 0x80, 0x98, 0xe2, 0x80, 0x99, 0xc2, 0xa3, 0xe2, 0x82,
  0xac, 0xe2, 0x82, 0xaf, 0xc2, 0xa6, 0xc2, 0xa7, 0xc2, 0xa8, 0xc2, 0xa9,
  0xcd, 0xba, 0xc2, 0xab, 0xc2, 0xac, 0xc2, 0xad, 0xe2, 0x80, 0x95, 0xc2,
  0xb0, 0xc2, 0xb1, 0xc2, 0xb2, 0xc2, 0xb3, 0xce, 0x84, 0xce, 0x85, 0xce,
  0x86, 0xc2, 0xb7, 0xce, 0x88, 0xce, 0x89, 0xce, 0x8a, 0xc2, 0xbb, 0xce,
  0x8c, 0xc2, 0xbd, 0xce, 0x8e, 0xce, 0x8f, 0xce, 0x90, 0xce, 0x91, 0xce,
  0x92, 0xce, 0x93, 0xce, 0x94, 0xce, 0x95, 0xce, 0x96, 0xce, 0x97, 0xce,
  0x98, 0xce, 0x99, 0xce, 0x9a, 0xce, 0x9b, 0xce, 0x9c, 0xce, 0x9d, 0xce,
  0x9e, 0xce, 0x9f, 0xce, 0xa0, 0xce, 0xa1, 0xce, 0xa3, 0xce, 0xa4, 0xce,
  0xa5, 0xce, 0xa6, 0xce, 0xa7, 0xce, 0xa8, 0xce, 0xa9, 0xce, 0xaa, 0xce,
  0xab, 0xce, 0xac, 0xce, 0xad, 0xce, 0xae, 0xce, 0xaf, 0xce, 0xb0, 0xce,
  0xb1, 0xce, 0xb2, 0xce, 0xb3, 0xce, 0xb4, 0xce, 0xb5, 0xce, 0xb6, 0xce,
  0xb7, 0xce, 0xb8, 0xce, 0xb9, 0xce, 0xba, 0xce, 0xbb, 0xce, 0xbc, 0xce,
  0xbd, 0xce, 0xbe, 0xce, 0xbf, 0xcf, 0x80, 0xcf, 0x81, 0xcf, 0x82, 0xcf,
  0x83, 0xcf, 0x84, 0xcf, 0x85, 0xcf, 0x86, 0xcf, 0x87, 0xcf, 0x88, 0xcf,
  0x89, 0xcf, 0x8a, 0xcf, 0x8b, 0xcf, 0x8c, 0xcf, 0x8d, 0xcf, 0x8e
};

static unsigned char iso8859_8_to_utf8_a0_to_ff[] = {
  0xc2, 0xa0, 0xc2, 0xa2, 0xc2, 0xa3, 0xc2, 0xa4, 0xc2, 0xa5, 0xc2, 0xa6,
  0xc2, 0xa7, 0xc2, 0xa8, 0xc2, 0xa9, 0xc3, 0x97, 0xc2, 0xab, 0xc2, 0xac,
  0xc2, 0xad, 0xc2, 0xae, 0xc2, 0xaf, 0xc2, 0xb0, 0xc2, 0xb1, 0xc2, 0xb2,
  0xc2, 0xb3, 0xc2, 0xb4, 0xc2, 0xb5, 0xc2, 0xb6, 0xc2, 0xb7, 0xc2, 0xb8,
  0xc2, 0xb9, 0xc3, 0xb7, 0xc2, 0xbb, 0xc2, 0xbc, 0xc2, 0xbd, 0xc2, 0xbe,
  0xe2, 0x80, 0x97, 0xd7, 0x90, 0xd7, 0x91, 0xd7, 0x92, 0xd7, 0x93, 0xd7,
  0x94, 0xd7, 0x95, 0xd7, 0x96, 0xd7, 0x97, 0xd7, 0x98, 0xd7, 0x99, 0xd7,
  0x9a, 0xd7, 0x9b, 0xd7, 0x9c, 0xd7, 0x9d, 0xd7, 0x9e, 0xd7, 0x9f, 0xd7,
  0xa0, 0xd7, 0xa1, 0xd7, 0xa2, 0xd7, 0xa3, 0xd7, 0xa4, 0xd7, 0xa5, 0xd7,
  0xa6, 0xd7, 0xa7, 0xd7, 0xa8, 0xd7, 0xa9, 0xd7, 0xaa, 0xe2, 0x80, 0x8e,
  0xe2, 0x80, 0x8f
};

static unsigned char iso8859_9_to_utf8_a0_to_ff[] = {
  0xc2, 0xa0, 0xc2, 0xa1, 0xc2, 0xa2, 0xc2, 0xa3, 0xc2, 0xa4, 0xc2, 0xa5,
  0xc2, 0xa6, 0xc2, 0xa7, 0xc2, 0xa8, 0xc2, 0xa9, 0xc2, 0xaa, 0xc2, 0xab,
  0xc2, 0xac, 0xc2, 0xad, 0xc2, 0xae, 0xc2, 0xaf, 0xc2, 0xb0, 0xc2, 0xb1,
  0xc2, 0xb2, 0xc2, 0xb3, 0xc2, 0xb4, 0xc2, 0xb5, 0xc2, 0xb6, 0xc2, 0xb7,
  0xc2, 0xb8, 0xc2, 0xb9, 0xc2, 0xba, 0xc2, 0xbb, 0xc2, 0xbc, 0xc2, 0xbd,
  0xc2, 0xbe, 0xc2, 0xbf, 0xc3, 0x80, 0xc3, 0x81, 0xc3, 0x82, 0xc3, 0x83,
  0xc3, 0x84, 0xc3, 0x85, 0xc3, 0x86, 0xc3, 0x87, 0xc3, 0x88, 0xc3, 0x89,
  0xc3, 0x8a, 0xc3, 0x8b, 0xc3, 0x8c, 0xc3, 0x8d, 0xc3, 0x8e, 0xc3, 0x8f,
  0xc4, 0x9e, 0xc3, 0x91, 0xc3, 0x92, 0xc3, 0x93, 0xc3, 0x94, 0xc3, 0x95,
  0xc3, 0x96, 0xc3, 0x97, 0xc3, 0x98, 0xc3, 0x99, 0xc3, 0x9a, 0xc3, 0x9b,
  0xc3, 0x9c, 0xc4, 0xb0, 0xc5, 0x9e, 0xc3, 0x9f, 0xc3, 0xa0, 0xc3, 0xa1,
  0xc3, 0xa2, 0xc3, 0xa3, 0xc3, 0xa4, 0xc3, 0xa5, 0xc3, 0xa6, 0xc3, 0xa7,
  0xc3, 0xa8, 0xc3, 0xa9, 0xc3, 0xaa, 0xc3, 0xab, 0xc3, 0xac, 0xc3, 0xad,
  0xc3, 0xae, 0xc3, 0xaf, 0xc4, 0x9f, 0xc3, 0xb1, 0xc3, 0xb2, 0xc3, 0xb3,
  0xc3, 0xb4, 0xc3, 0xb5, 0xc3, 0xb6, 0xc3, 0xb7, 0xc3, 0xb8, 0xc3, 0xb9,
  0xc3, 0xba, 0xc3, 0xbb, 0xc3, 0xbc, 0xc4, 0xb1, 0xc5, 0x9f, 0xc3, 0xbf
};

static unsigned char iso8859_11_to_utf8_a0_to_ff[] = {
  0xc2, 0xa0, 0xe0, 0xb8, 0x81, 0xe0, 0xb8, 0x82, 0xe0, 0xb8, 0x83, 0xe0,
  0xb8, 0x84, 0xe0, 0xb8, 0x85, 0xe0, 0xb8, 0x86, 0xe0, 0xb8, 0x87, 0xe0,
  0xb8, 0x88, 0xe0, 0xb8, 0x89, 0xe0, 0xb8, 0x8a, 0xe0, 0xb8, 0x8b, 0xe0,
  0xb8, 0x8c, 0xe0, 0xb8, 0x8d, 0xe0, 0xb8, 0x8e, 0xe0, 0xb8, 0x8f, 0xe0,
  0xb8, 0x90, 0xe0, 0xb8, 0x91, 0xe0, 0xb8, 0x92, 0xe0, 0xb8, 0x93, 0xe0,
  0xb8, 0x94, 0xe0, 0xb8, 0x95, 0xe0, 0xb8, 0x96, 0xe0, 0xb8, 0x97, 0xe0,
  0xb8, 0x98, 0xe0, 0xb8, 0x99, 0xe0, 0xb8, 0x9a, 0xe0, 0xb8, 0x9b, 0xe0,
  0xb8, 0x9c, 0xe0, 0xb8, 0x9d, 0xe0, 0xb8, 0x9e, 0xe0, 0xb8, 0x9f, 0xe0,
  0xb8, 0xa0, 0xe0, 0xb8, 0xa1, 0xe0, 0xb8, 0xa2, 0xe0, 0xb8, 0xa3, 0xe0,
  0xb8, 0xa4, 0xe0, 0xb8, 0xa5, 0xe0, 0xb8, 0xa6, 0xe0, 0xb8, 0xa7, 0xe0,
  0xb8, 0xa8, 0xe0, 0xb8, 0xa9, 0xe0, 0xb8, 0xaa, 0xe0, 0xb8, 0xab, 0xe0,
  0xb8, 0xac, 0xe0, 0xb8, 0xad, 0xe0, 0xb8, 0xae, 0xe0, 0xb8, 0xaf, 0xe0,
  0xb8, 0xb0, 0xe0, 0xb8, 0xb1, 0xe0, 0xb8, 0xb2, 0xe0, 0xb8, 0xb3, 0xe0,
  0xb8, 0xb4, 0xe0, 0xb8, 0xb5, 0xe0, 0xb8, 0xb6, 0xe0, 0xb8, 0xb7, 0xe0,
  0xb8, 0xb8, 0xe0, 0xb8, 0xb9, 0xe0, 0xb8, 0xba, 0xe0, 0xb8, 0xbf, 0xe0,
  0xb9, 0x80, 0xe0, 0xb9, 0x81, 0xe0, 0xb9, 0x82, 0xe0, 0xb9, 0x83, 0xe0,
  0xb9, 0x84, 0xe0, 0xb9, 0x85, 0xe0, 0xb9, 0x86, 0xe0, 0xb9, 0x87, 0xe0,
  0xb9, 0x88, 0xe0, 0xb9, 0x89, 0xe0, 0xb9, 0x8a, 0xe0, 0xb9, 0x8b, 0xe0,
  0xb9, 0x8c, 0xe0, 0xb9, 0x8d, 0xe0, 0xb9, 0x8e, 0xe0, 0xb9, 0x8f, 0xe0,
  0xb9, 0x90, 0xe0, 0xb9, 0x91, 0xe0, 0xb9, 0x92, 0xe0, 0xb9, 0x93, 0xe0,
  0xb9, 0x94, 0xe0, 0xb9, 0x95, 0xe0, 0xb9, 0x96, 0xe0, 0xb9, 0x97, 0xe0,
  0xb9, 0x98, 0xe0, 0xb9, 0x99, 0xe0, 0xb9, 0x9a, 0xe0, 0xb9, 0x9b
};

static unsigned char jis_x0201_to_utf8[] = {
  0x20, 0x21, 0x22, 0x23, 0x24, 0x25, 0x26, 0x27, 0x28, 0x29, 0x2a, 0x2b,
  0x2c, 0x2d, 0x2e, 0x2f, 0x30, 0x31, 0x32, 0x33, 0x34, 0x35, 0x36, 0x37,
  0x38, 0x39, 0x3a, 0x3b, 0x3c, 0x3d, 0x3e, 0x3f, 0x40, 0x41, 0x42, 0x43,
  0x44, 0x45, 0x46, 0x47, 0x48, 0x49, 0x4a, 0x4b, 0x4c, 0x4d, 0x4e, 0x4f,
  0x50, 0x51, 0x52, 0x53, 0x54, 0x55, 0x56, 0x57, 0x58, 0x59, 0x5a, 0x5b,
  0xc2, 0xa5, 0x5d, 0x5e, 0x5f, 0x60, 0x61, 0x62, 0x63, 0x64, 0x65, 0x66,
  0x67, 0x68, 0x69, 0x6a, 0x6b, 0x6c, 0x6d, 0x6e, 0x6f, 0x70, 0x71, 0x72,
  0x73, 0x74, 0x75, 0x76, 0x77, 0x78, 0x79, 0x7a, 0x7b, 0x7c, 0x7d, 0xe2,
  0x80, 0xbe, 0xef, 0xbd, 0xa1, 0xef, 0xbd, 0xa2, 0xef, 0xbd, 0xa3, 0xef,
  0xbd, 0xa4, 0xef, 0xbd, 0xa5, 0xef, 0xbd, 0xa6, 0xef, 0xbd, 0xa7, 0xef,
  0xbd, 0xa8, 0xef, 0xbd, 0xa9, 0xef, 0xbd, 0xaa, 0xef, 0xbd, 0xab, 0xef,
  0xbd, 0xac, 0xef, 0xbd, 0xad, 0xef, 0xbd, 0xae, 0xef, 0xbd, 0xaf, 0xef,
  0xbd, 0xb0, 0xef, 0xbd, 0xb1, 0xef, 0xbd, 0xb2, 0xef, 0xbd, 0xb3, 0xef,
  0xbd, 0xb4, 0xef, 0xbd, 0xb5, 0xef, 0xbd, 0xb6, 0xef, 0xbd, 0xb7, 0xef,
  0xbd, 0xb8, 0xef, 0xbd, 0xb9, 0xef, 0xbd, 0xba, 0xef, 0xbd, 0xbb, 0xef,
  0xbd, 0xbc, 0xef, 0xbd, 0xbd, 0xef, 0xbd, 0xbe, 0xef, 0xbd, 0xbf, 0xef,
  0xbe, 0x80, 0xef, 0xbe, 0x81, 0xef, 0xbe, 0x82, 0xef, 0xbe, 0x83, 0xef,
  0xbe, 0x84, 0xef, 0xbe, 0x85, 0xef, 0xbe, 0x86, 0xef, 0xbe, 0x87, 0xef,
  0xbe, 0x88, 0xef, 0xbe, 0x89, 0xef, 0xbe, 0x8a, 0xef, 0xbe, 0x8b, 0xef,
  0xbe, 0x8c, 0xef, 0xbe, 0x8d, 0xef, 0xbe, 0x8e, 0xef, 0xbe, 0x8f, 0xef,
  0xbe, 0x90, 0xef, 0xbe, 0x91, 0xef, 0xbe, 0x92, 0xef, 0xbe, 0x93, 0xef,
  0xbe, 0x94, 0xef, 0xbe, 0x95, 0xef, 0xbe, 0x96, 0xef, 0xbe, 0x97, 0xef,
  0xbe, 0x98, 0xef, 0xbe, 0x99, 0xef, 0xbe, 0x9a, 0xef, 0xbe, 0x9b, 0xef,
  0xbe, 0x9c, 0xef, 0xbe, 0x9d, 0xef, 0xbe, 0x9e, 0xef, 0xbe, 0x9f
};

static unsigned char jis_x0201_to_ascii[] = {
  0x20, 0x21, 0x22, 0x23, 0x24, 0x25, 0x26, 0x27, 0x28, 0x29, 0x2a, 0x2b,
  0x2c, 0x2d, 0x2e, 0x2f, 0x30, 0x31, 0x32, 0x33, 0x34, 0x35, 0x36, 0x37,
  0x38, 0x39, 0x3a, 0x3b, 0x3c, 0x3d, 0x3e, 0x3f, 0x40, 0x41, 0x42, 0x43,
  0x44, 0x45, 0x46, 0x47, 0x48, 0x49, 0x4a, 0x4b, 0x4c, 0x4d, 0x4e, 0x4f,
  0x50, 0x51, 0x52, 0x53, 0x54, 0x55, 0x56, 0x57, 0x58, 0x59, 0x5a, 0x5b,
  0x3f, 0x5d, 0x5e, 0x5f, 0x60, 0x61, 0x62, 0x63, 0x64, 0x65, 0x66, 0x67,
  0x68, 0x69, 0x6a, 0x6b, 0x6c, 0x6d, 0x6e, 0x6f, 0x70, 0x71, 0x72, 0x73,
  0x74, 0x75, 0x76, 0x77, 0x78, 0x79, 0x7a, 0x7b, 0x7c, 0x7d, 0x3f, 0x3f,
  0x3f, 0x3f, 0x3f, 0x3f, 0x3f, 0x3f, 0x3f, 0x3f, 0x3f, 0x3f, 0x3f, 0x3f,
  0x3f, 0x3f, 0x3f, 0x3f, 0x3f, 0x3f, 0x3f, 0x3f, 0x3f, 0x3f, 0x3f, 0x3f,
  0x3f, 0x3f, 0x3f, 0x3f, 0x3f, 0x3f, 0x3f, 0x3f, 0x3f, 0x3f, 0x3f, 0x3f,
  0x3f, 0x3f, 0x3f, 0x3f, 0x3f, 0x3f, 0x3f, 0x3f, 0x3f, 0x3f, 0x3f, 0x3f,
  0x3f, 0x3f, 0x3f, 0x3f, 0x3f, 0x3f, 0x3f, 0x3f, 0x3f, 0x3f, 0x3f, 0x3f,
  0x3f, 0x3f
};

#if 0

static unsigned char jis_x0208_row_01[] = {
        0x21, 0x22, 0x23, 0x24, 0x25, 0x26, 0x27, 0x28, 0x29, 0x2a, 0x2b, 0x2c, 0x2d, 0x2e, 0x2f,
  0x30, 0x31, 0x32, 0x33, 0x34, 0x35, 0x36, 0x37, 0x38, 0x39, 0x3a, 0x3b, 0x3c, 0x3d, 0x3e, 0x3f,
  0x40, 0x41, 0x42, 0x43, 0x44, 0x45, 0x46, 0x47, 0x48, 0x49, 0x4a, 0x4b, 0x4c, 0x4d, 0x4e, 0x4f,
  0x50, 0x51, 0x52, 0x53, 0x54, 0x55, 0x56, 0x57, 0x58, 0x59, 0x5a, 0x5b, 0x5c, 0x5d, 0x5e, 0x5f,
  0x60, 0x61, 0x62, 0x63, 0x64, 0x65, 0x66, 0x67, 0x68, 0x69, 0x6a, 0x6b, 0x6c, 0x6d, 0x6e, 0x6f,
  0x70, 0x71, 0x72, 0x73, 0x74, 0x75, 0x76, 0x77, 0x78, 0x79, 0x7a, 0x7b, 0x7c, 0x7d, 0x7e
};

unsigned char jis_x0208_row_01_converted_to_utf8[] = {
  0xe3, 0x80, 0x81, 0xe3, 0x80,
  0x82, 0x2c, 0x2e, 0xe3, 0x83, 0xbb, 0x3a, 0x3b, 0x3f, 0x21, 0xe3, 0x82,
  0x9b, 0xe3, 0x82, 0x9c, 0xc2, 0xb4, 0x60, 0xc2, 0xa8, 0x5e, 0xe2, 0x80,
  0xbe, 0x5f, 0xe3, 0x83, 0xbd, 0xe3, 0x83, 0xbe, 0xe3, 0x82, 0x9d, 0xe3,
  0x82, 0x9e, 0xe3, 0x80, 0x83, 0xe4, 0xbb, 0x9d, 0xe3, 0x80, 0x85, 0xe3,
  0x80, 0x86, 0xe3, 0x80, 0x87, 0xe3, 0x83, 0xbc, 0xe2, 0x80, 0x94, 0xe2,
  0x80, 0x90, 0x2f, 0x5c, 0xe3, 0x80, 0x9c, 0xe2, 0x80, 0x96, 0x7c, 0xe2,
  0x80, 0xa6, 0xe2, 0x80, 0xa5, 0xe2, 0x80, 0x98, 0xe2, 0x80, 0x99, 0xe2,
  0x80, 0x9c, 0xe2, 0x80, 0x9d, 0x28, 0x29, 0xe3, 0x80, 0x94, 0xe3, 0x80,
  0x95, 0x5b, 0x5d, 0x7b, 0x7d, 0xe3, 0x80, 0x88, 0xe3, 0x80, 0x89, 0xe3,
  0x80, 0x8a, 0xe3, 0x80, 0x8b, 0xe3, 0x80, 0x8c, 0xe3, 0x80, 0x8d, 0xe3,
  0x80, 0x8e, 0xe3, 0x80, 0x8f, 0xe3, 0x80, 0x90, 0xe3, 0x80, 0x91, 0x2b,
  0xe2, 0x88, 0x92, 0xc2, 0xb1, 0xc3, 0x97, 0xc3, 0xb7, 0x3d, 0xe2, 0x89,
  0xa0, 0x3c, 0x3e, 0xe2, 0x89, 0xa6, 0xe2, 0x89, 0xa7, 0xe2, 0x88, 0x9e,
  0xe2, 0x88, 0xb4, 0xe2, 0x99, 0x82, 0xe2, 0x99, 0x80, 0xc2, 0xb0, 0xe2,
  0x80, 0xb2, 0xe2, 0x80, 0xb3, 0xe2, 0x84, 0x83, 0xc2, 0xa5, 0x24, 0xc2,
  0xa2, 0xc2, 0xa3, 0x25, 0x23, 0x26, 0x2a, 0x40, 0xc2, 0xa7, 0xe2, 0x98,
  0x86, 0xe2, 0x98, 0x85, 0xe2, 0x97, 0x8b, 0xe2, 0x97, 0x8f, 0xe2, 0x97,
  0x8e, 0xe2, 0x97, 0x87
};

static unsigned char jis_x0208_row_02[] = {
        0x21, 0x22, 0x23, 0x24, 0x25, 0x26, 0x27, 0x28, 0x29, 0x2a, 0x2b, 0x2c, 0x2d, 0x2e,
                                                              0x3a, 0x3b, 0x3c, 0x3d, 0x3e, 0x3f,
  0x40, 0x41,                                                 0x4a, 0x4b, 0x4c, 0x4d, 0x4e, 0x4f,
  0x50,                                                                   0x5c, 0x5d, 0x5e, 0x5f,
  0x60, 0x61, 0x62, 0x63, 0x64, 0x65, 0x66, 0x67, 0x68, 0x69, 0x6a,
              0x72, 0x73, 0x74, 0x75, 0x76, 0x77, 0x78, 0x79,                         0x7e
};

static unsigned char jis_x0208_row_03[] = {
  0x30, 0x31, 0x32, 0x33, 0x34, 0x35, 0x36, 0x37, 0x38, 0x39,
        0x41, 0x42, 0x43, 0x44, 0x45, 0x46, 0x47, 0x48, 0x49, 0x4a, 0x4b, 0x4c, 0x4d, 0x4e, 0x4f,
  0x50, 0x51, 0x52, 0x53, 0x54, 0x55, 0x56, 0x57, 0x58, 0x59, 0x5a,
        0x61, 0x62, 0x63, 0x64, 0x65, 0x66, 0x67, 0x68, 0x69, 0x6a, 0x6b, 0x6c, 0x6d, 0x6e, 0x6f,
  0x70, 0x71, 0x72, 0x73, 0x74, 0x75, 0x76, 0x77, 0x78, 0x79, 0x7a,
};

static unsigned char jis_x0208_row_04[] = {
        0x21, 0x22, 0x23, 0x24, 0x25, 0x26, 0x27, 0x28, 0x29, 0x2a, 0x2b, 0x2c, 0x2d, 0x2e, 0x2f,
  0x30, 0x31, 0x32, 0x33, 0x34, 0x35, 0x36, 0x37, 0x38, 0x39, 0x3a, 0x3b, 0x3c, 0x3d, 0x3e, 0x3f,
  0x40, 0x41, 0x42, 0x43, 0x44, 0x45, 0x46, 0x47, 0x48, 0x49, 0x4a, 0x4b, 0x4c, 0x4d, 0x4e, 0x4f,
  0x50, 0x51, 0x52, 0x53, 0x54, 0x55, 0x56, 0x57, 0x58, 0x59, 0x5a, 0x5b, 0x5c, 0x5d, 0x5e, 0x5f,
  0x60, 0x61, 0x62, 0x63, 0x64, 0x65, 0x66, 0x67, 0x68, 0x69, 0x6a, 0x6b, 0x6c, 0x6d, 0x6e, 0x6f,
  0x70, 0x71, 0x72, 0x73
};

static unsigned char jis_x0208_row_05[] = {
        0x21, 0x22, 0x23, 0x24, 0x25, 0x26, 0x27, 0x28, 0x29, 0x2a, 0x2b, 0x2c, 0x2d, 0x2e, 0x2f,
  0x30, 0x31, 0x32, 0x33, 0x34, 0x35, 0x36, 0x37, 0x38, 0x39, 0x3a, 0x3b, 0x3c, 0x3d, 0x3e, 0x3f,
  0x40, 0x41, 0x42, 0x43, 0x44, 0x45, 0x46, 0x47, 0x48, 0x49, 0x4a, 0x4b, 0x4c, 0x4d, 0x4e, 0x4f,
  0x50, 0x51, 0x52, 0x53, 0x54, 0x55, 0x56, 0x57, 0x58, 0x59, 0x5a, 0x5b, 0x5c, 0x5d, 0x5e, 0x5f,
  0x60, 0x61, 0x62, 0x63, 0x64, 0x65, 0x66, 0x67, 0x68, 0x69, 0x6a, 0x6b, 0x6c, 0x6d, 0x6e, 0x6f,
  0x70, 0x71, 0x72, 0x73, 0x74, 0x75, 0x76
};

static unsigned char jis_x0208_row_06[] = {
        0x21, 0x22, 0x23, 0x24, 0x25, 0x26, 0x27, 0x28, 0x29, 0x2a, 0x2b, 0x2c, 0x2d, 0x2e, 0x2f,
  0x30, 0x31, 0x32, 0x33, 0x34, 0x35, 0x36, 0x37, 0x38,
        0x41, 0x42, 0x43, 0x44, 0x45, 0x46, 0x47, 0x48, 0x49, 0x4a, 0x4b, 0x4c, 0x4d, 0x4e, 0x4f,
  0x50, 0x51, 0x52, 0x53, 0x54, 0x55, 0x56, 0x57, 0x58
};

static unsigned char jis_x0208_row_07[] = {
        0x21, 0x22, 0x23, 0x24, 0x25, 0x26, 0x27, 0x28, 0x29, 0x2a, 0x2b, 0x2c, 0x2d, 0x2e, 0x2f,
  0x30, 0x31, 0x32, 0x33, 0x34, 0x35, 0x36, 0x37, 0x38, 0x39, 0x3a, 0x3b, 0x3c, 0x3d, 0x3e, 0x3f,
  0x40, 0x41,
        0x51, 0x52, 0x53, 0x54, 0x55, 0x56, 0x57, 0x58, 0x59, 0x5a, 0x5b, 0x5c, 0x5d, 0x5e, 0x5f,
  0x60, 0x61, 0x62, 0x63, 0x64, 0x65, 0x66, 0x67, 0x68, 0x69, 0x6a, 0x6b, 0x6c, 0x6d, 0x6e, 0x6f,
  0x70, 0x71
};

static unsigned char jis_x0208_row_08[] = {
        0x21, 0x22, 0x23, 0x24, 0x25, 0x26, 0x27, 0x28, 0x29, 0x2a, 0x2b, 0x2c, 0x2d, 0x2e, 0x2f,
  0x30, 0x31, 0x32, 0x33, 0x34, 0x35, 0x36, 0x37, 0x38, 0x39, 0x3a, 0x3b, 0x3c, 0x3d, 0x3e, 0x3f,
  0x40
};

static unsigned char jis_x0208_row_16_to_83[] = {
        0x21, 0x22, 0x23, 0x24, 0x25, 0x26, 0x27, 0x28, 0x29, 0x2a, 0x2b, 0x2c, 0x2d, 0x2e, 0x2f,
  0x30, 0x31, 0x32, 0x33, 0x34, 0x35, 0x36, 0x37, 0x38, 0x39, 0x3a, 0x3b, 0x3c, 0x3d, 0x3e, 0x3f,
  0x40, 0x41, 0x42, 0x43, 0x44, 0x45, 0x46, 0x47, 0x48, 0x49, 0x4a, 0x4b, 0x4c, 0x4d, 0x4e, 0x4f,
  0x50, 0x51, 0x52, 0x53, 0x54, 0x55, 0x56, 0x57, 0x58, 0x59, 0x5a, 0x5b, 0x5c, 0x5d, 0x5e, 0x5f,
  0x60, 0x61, 0x62, 0x63, 0x64, 0x65, 0x66, 0x67, 0x68, 0x69, 0x6a, 0x6b, 0x6c, 0x6d, 0x6e, 0x6f,
  0x70, 0x71, 0x72, 0x73, 0x74, 0x75, 0x76, 0x77, 0x78, 0x79, 0x7a, 0x7b, 0x7c, 0x7d, 0x7e
};

static unsigned char jis_x0208_row_47[] = {
        0x21, 0x22, 0x23, 0x24, 0x25, 0x26, 0x27, 0x28, 0x29, 0x2a, 0x2b, 0x2c, 0x2d, 0x2e, 0x2f,
  0x30, 0x31, 0x32, 0x33, 0x34, 0x35, 0x36, 0x37, 0x38, 0x39, 0x3a, 0x3b, 0x3c, 0x3d, 0x3e, 0x3f,
  0x40, 0x41, 0x42, 0x43, 0x44, 0x45, 0x46, 0x47, 0x48, 0x49, 0x4a, 0x4b, 0x4c, 0x4d, 0x4e, 0x4f,
  0x50, 0x51, 0x52, 0x53
};

static unsigned char jis_x0208_row_84[] = {
        0x21, 0x22, 0x23, 0x24, 0x25, 0x26
};

#endif

static unsigned char ksx_1001_row_01_03_04_09_16ff[] = {
        0xa1, 0xa2, 0xa3, 0xa4, 0xa5, 0xa6, 0xa7, 0xa8, 0xa9, 0xaa, 0xab, 0xac, 0xad, 0xae, 0xaf,
  0xb0, 0xb1, 0xb2, 0xb3, 0xb4, 0xb5, 0xb6, 0xb7, 0xb8, 0xb9, 0xba, 0xbb, 0xbc, 0xbd, 0xbe, 0xbf,
  0xc0, 0xc1, 0xc2, 0xc3, 0xc4, 0xc5, 0xc6, 0xc7, 0xc8, 0xc9, 0xca, 0xcb, 0xcc, 0xcd, 0xce, 0xcf,
  0xd0, 0xd1, 0xd2, 0xd3, 0xd4, 0xd5, 0xd6, 0xd7, 0xd8, 0xd9, 0xda, 0xdb, 0xdc, 0xdd, 0xde, 0xdf,
  0xe0, 0xe1, 0xe2, 0xe3, 0xe4, 0xe5, 0xe6, 0xe7, 0xe8, 0xe9, 0xea, 0xeb, 0xec, 0xed, 0xee, 0xef,
  0xf0, 0xf1, 0xf2, 0xf3, 0xf4, 0xf5, 0xf6, 0xf7, 0xf8, 0xf9, 0xfa, 0xfb, 0xfc, 0xfd, 0xfe    
};

static unsigned char ksx_1001_row_02[] = {
        0xa1, 0xa2, 0xa3, 0xa4, 0xa5, 0xa6, 0xa7, 0xa8, 0xa9, 0xaa, 0xab, 0xac, 0xad, 0xae, 0xaf,
  0xb0, 0xb1, 0xb2, 0xb3, 0xb4, 0xb5, 0xb6, 0xb7, 0xb8, 0xb9, 0xba, 0xbb, 0xbc, 0xbd, 0xbe, 0xbf,
  0xc0, 0xc1, 0xc2, 0xc3, 0xc4, 0xc5, 0xc6, 0xc7, 0xc8, 0xc9, 0xca, 0xcb, 0xcc, 0xcd, 0xce, 0xcf,
  0xd0, 0xd1, 0xd2, 0xd3, 0xd4, 0xd5, 0xd6, 0xd7, 0xd8, 0xd9, 0xda, 0xdb, 0xdc, 0xdd, 0xde, 0xdf,
  0xe0, 0xe1, 0xe2, 0xe3, 0xe4, 0xe5, 0xe6, 0xe7, 0xe8
};

// The KS X 1001 implementation in oficonv does not support the roman number literals
static unsigned char ksx_1001_row_05[] = {
        0xc1, 0xc2, 0xc3, 0xc4, 0xc5, 0xc6, 0xc7, 0xc8, 0xc9, 0xca, 0xcb, 0xcc, 0xcd, 0xce, 0xcf,
  0xd0, 0xd1, 0xd2, 0xd3, 0xd4, 0xd5, 0xd6, 0xd7, 0xd8,                                          
        0xe1, 0xe2, 0xe3, 0xe4, 0xe5, 0xe6, 0xe7, 0xe8, 0xe9, 0xea, 0xeb, 0xec, 0xed, 0xee, 0xef,
  0xf0, 0xf1, 0xf2, 0xf3, 0xf4, 0xf5, 0xf6, 0xf7, 0xf8
};

static unsigned char ksx_1001_row_06[] = {
        0xa1, 0xa2, 0xa3, 0xa4, 0xa5, 0xa6, 0xa7, 0xa8, 0xa9, 0xaa, 0xab, 0xac, 0xad, 0xae, 0xaf,
  0xb0, 0xb1, 0xb2, 0xb3, 0xb4, 0xb5, 0xb6, 0xb7, 0xb8, 0xb9, 0xba, 0xbb, 0xbc, 0xbd, 0xbe, 0xbf,
  0xc0, 0xc1, 0xc2, 0xc3, 0xc4, 0xc5, 0xc6, 0xc7, 0xc8, 0xc9, 0xca, 0xcb, 0xcc, 0xcd, 0xce, 0xcf,
  0xd0, 0xd1, 0xd2, 0xd3, 0xd4, 0xd5, 0xd6, 0xd7, 0xd8, 0xd9, 0xda, 0xdb, 0xdc, 0xdd, 0xde, 0xdf,
  0xe0, 0xe1, 0xe2, 0xe3, 0xe4
};

static unsigned char ksx_1001_row_07[] = {
        0xa1, 0xa2, 0xa3, 0xa4, 0xa5, 0xa6, 0xa7, 0xa8, 0xa9, 0xaa, 0xab, 0xac, 0xad, 0xae, 0xaf,
  0xb0, 0xb1, 0xb2, 0xb3, 0xb4, 0xb5, 0xb6, 0xb7, 0xb8, 0xb9, 0xba, 0xbb, 0xbc, 0xbd, 0xbe, 0xbf,
  0xc0, 0xc1, 0xc2, 0xc3, 0xc4, 0xc5, 0xc6, 0xc7, 0xc8, 0xc9, 0xca, 0xcb, 0xcc, 0xcd, 0xce, 0xcf,
  0xd0, 0xd1, 0xd2, 0xd3, 0xd4, 0xd5, 0xd6, 0xd7, 0xd8, 0xd9, 0xda, 0xdb, 0xdc, 0xdd, 0xde, 0xdf,
  0xe0, 0xe1, 0xe2, 0xe3, 0xe4, 0xe5, 0xe6, 0xe7, 0xe8, 0xe9, 0xea, 0xeb, 0xec, 0xed, 0xee, 0xef
};

// The KS X 1001 implementation in oficonv does not support the encircled letters and fractions
 static unsigned char ksx_1001_row_08[] = {
        0xa1, 0xa2, 0xa3, 0xa4,       0xa6,       0xa8, 0xa9, 0xaa, 0xab, 0xac, 0xad, 0xae, 0xaf
};

static unsigned char ksx_1001_row_10[] = {
        0xa1, 0xa2, 0xa3, 0xa4, 0xa5, 0xa6, 0xa7, 0xa8, 0xa9, 0xaa, 0xab, 0xac, 0xad, 0xae, 0xaf,
  0xb0, 0xb1, 0xb2, 0xb3, 0xb4, 0xb5, 0xb6, 0xb7, 0xb8, 0xb9, 0xba, 0xbb, 0xbc, 0xbd, 0xbe, 0xbf,
  0xc0, 0xc1, 0xc2, 0xc3, 0xc4, 0xc5, 0xc6, 0xc7, 0xc8, 0xc9, 0xca, 0xcb, 0xcc, 0xcd, 0xce, 0xcf,
  0xd0, 0xd1, 0xd2, 0xd3, 0xd4, 0xd5, 0xd6, 0xd7, 0xd8, 0xd9, 0xda, 0xdb, 0xdc, 0xdd, 0xde, 0xdf,
  0xe0, 0xe1, 0xe2, 0xe3, 0xe4, 0xe5, 0xe6, 0xe7, 0xe8, 0xe9, 0xea, 0xeb, 0xec, 0xed, 0xee, 0xef,
  0xf0, 0xf1, 0xf2, 0xf3
};

static unsigned char ksx_1001_row_11[] = {
        0xa1, 0xa2, 0xa3, 0xa4, 0xa5, 0xa6, 0xa7, 0xa8, 0xa9, 0xaa, 0xab, 0xac, 0xad, 0xae, 0xaf,
  0xb0, 0xb1, 0xb2, 0xb3, 0xb4, 0xb5, 0xb6, 0xb7, 0xb8, 0xb9, 0xba, 0xbb, 0xbc, 0xbd, 0xbe, 0xbf,
  0xc0, 0xc1, 0xc2, 0xc3, 0xc4, 0xc5, 0xc6, 0xc7, 0xc8, 0xc9, 0xca, 0xcb, 0xcc, 0xcd, 0xce, 0xcf,
  0xd0, 0xd1, 0xd2, 0xd3, 0xd4, 0xd5, 0xd6, 0xd7, 0xd8, 0xd9, 0xda, 0xdb, 0xdc, 0xdd, 0xde, 0xdf,
  0xe0, 0xe1, 0xe2, 0xe3, 0xe4, 0xe5, 0xe6, 0xe7, 0xe8, 0xe9, 0xea, 0xeb, 0xec, 0xed, 0xee, 0xef,
  0xf0, 0xf1, 0xf2, 0xf3, 0xf4, 0xf5, 0xf6
};

static unsigned char ksx_1001_row_12[] = {
        0xa1, 0xa2, 0xa3, 0xa4, 0xa5, 0xa6, 0xa7, 0xa8, 0xa9, 0xaa, 0xab, 0xac, 0xad, 0xae, 0xaf,
  0xb0, 0xb1, 0xb2, 0xb3, 0xb4, 0xb5, 0xb6, 0xb7, 0xb8, 0xb9, 0xba, 0xbb, 0xbc, 0xbd, 0xbe, 0xbf,
  0xc0, 0xc1, 
        0xd1, 0xd2, 0xd3, 0xd4, 0xd5, 0xd6, 0xd7, 0xd8, 0xd9, 0xda, 0xdb, 0xdc, 0xdd, 0xde, 0xdf,
  0xe0, 0xe1, 0xe2, 0xe3, 0xe4, 0xe5, 0xe6, 0xe7, 0xe8, 0xe9, 0xea, 0xeb, 0xec, 0xed, 0xee, 0xef,
  0xf0, 0xf1
};

unsigned char ksx_1001_row_01_converted_to_utf8[] = {
  0xe3, 0x80, 0x80, 0xe3, 0x80, 0x81, 0xe3, 0x80, 0x82, 0xc2, 0xb7, 0xe2,
  0x80, 0xa5, 0xe2, 0x80, 0xa6, 0xc2, 0xa8, 0xe3, 0x80, 0x83, 0xc2, 0xad,
  0xe2, 0x80, 0x95, 0xe2, 0x88, 0xa5, 0xef, 0xbc, 0xbc, 0xe2, 0x88, 0xbc,
  0xe2, 0x80, 0x98, 0xe2, 0x80, 0x99, 0xe2, 0x80, 0x9c, 0xe2, 0x80, 0x9d,
  0xe3, 0x80, 0x94, 0xe3, 0x80, 0x95, 0xe3, 0x80, 0x88, 0xe3, 0x80, 0x89,
  0xe3, 0x80, 0x8a, 0xe3, 0x80, 0x8b, 0xe3, 0x80, 0x8c, 0xe3, 0x80, 0x8d,
  0xe3, 0x80, 0x8e, 0xe3, 0x80, 0x8f, 0xe3, 0x80, 0x90, 0xe3, 0x80, 0x91,
  0xc2, 0xb1, 0xc3, 0x97, 0xc3, 0xb7, 0xe2, 0x89, 0xa0, 0xe2, 0x89, 0xa4,
  0xe2, 0x89, 0xa5, 0xe2, 0x88, 0x9e, 0xe2, 0x88, 0xb4, 0xc2, 0xb0, 0xe2,
  0x80, 0xb2, 0xe2, 0x80, 0xb3, 0xe2, 0x84, 0x83, 0xe2, 0x84, 0xab, 0xef,
  0xbf, 0xa0, 0xef, 0xbf, 0xa1, 0xef, 0xbf, 0xa5, 0xe2, 0x99, 0x82, 0xe2,
  0x99, 0x80, 0xe2, 0x88, 0xa0, 0xe2, 0x8a, 0xa5, 0xe2, 0x8c, 0x92, 0xe2,
  0x88, 0x82, 0xe2, 0x88, 0x87, 0xe2, 0x89, 0xa1, 0xe2, 0x89, 0x92, 0xc2,
  0xa7, 0xe2, 0x80, 0xbb, 0xe2, 0x98, 0x86, 0xe2, 0x98, 0x85, 0xe2, 0x97,
  0x8b, 0xe2, 0x97, 0x8f, 0xe2, 0x97, 0x8e, 0xe2, 0x97, 0x87, 0xe2, 0x97,
  0x86, 0xe2, 0x96, 0xa1, 0xe2, 0x96, 0xa0, 0xe2, 0x96, 0xb3, 0xe2, 0x96,
  0xb2, 0xe2, 0x96, 0xbd, 0xe2, 0x96, 0xbc, 0xe2, 0x86, 0x92, 0xe2, 0x86,
  0x90, 0xe2, 0x86, 0x91, 0xe2, 0x86, 0x93, 0xe2, 0x86, 0x94, 0xe3, 0x80,
  0x93, 0xe2, 0x89, 0xaa, 0xe2, 0x89, 0xab, 0xe2, 0x88, 0x9a, 0xe2, 0x88,
  0xbd, 0xe2, 0x88, 0x9d, 0xe2, 0x88, 0xb5, 0xe2, 0x88, 0xab, 0xe2, 0x88,
  0xac, 0xe2, 0x88, 0x88, 0xe2, 0x88, 0x8b, 0xe2, 0x8a, 0x86, 0xe2, 0x8a,
  0x87, 0xe2, 0x8a, 0x82, 0xe2, 0x8a, 0x83, 0xe2, 0x88, 0xaa, 0xe2, 0x88,
  0xa9, 0xe2, 0x88, 0xa7, 0xe2, 0x88, 0xa8, 0xef, 0xbf, 0xa2
};

unsigned char ksx_1001_row_02_converted_to_utf8[] = {
  0xe2, 0x87, 0x92, 0xe2, 0x87, 0x94, 0xe2, 0x88, 0x80, 0xe2, 0x88, 0x83,
  0xc2, 0xb4, 0xef, 0xbd, 0x9e, 0xcb, 0x87, 0xcb, 0x98, 0xcb, 0x9d, 0xcb,
  0x9a, 0xcb, 0x99, 0xc2, 0xb8, 0xcb, 0x9b, 0xc2, 0xa1, 0xc2, 0xbf, 0xcb,
  0x90, 0xe2, 0x88, 0xae, 0xe2, 0x88, 0x91, 0xe2, 0x88, 0x8f, 0xc2, 0xa4,
  0xe2, 0x84, 0x89, 0xe2, 0x80, 0xb0, 0xe2, 0x97, 0x81, 0xe2, 0x97, 0x80,
  0xe2, 0x96, 0xb7, 0xe2, 0x96, 0xb6, 0xe2, 0x99, 0xa4, 0xe2, 0x99, 0xa0,
  0xe2, 0x99, 0xa1, 0xe2, 0x99, 0xa5, 0xe2, 0x99, 0xa7, 0xe2, 0x99, 0xa3,
  0xe2, 0x8a, 0x99, 0xe2, 0x97, 0x88, 0xe2, 0x96, 0xa3, 0xe2, 0x97, 0x90,
  0xe2, 0x97, 0x91, 0xe2, 0x96, 0x92, 0xe2, 0x96, 0xa4, 0xe2, 0x96, 0xa5,
  0xe2, 0x96, 0xa8, 0xe2, 0x96, 0xa7, 0xe2, 0x96, 0xa6, 0xe2, 0x96, 0xa9,
  0xe2, 0x99, 0xa8, 0xe2, 0x98, 0x8f, 0xe2, 0x98, 0x8e, 0xe2, 0x98, 0x9c,
  0xe2, 0x98, 0x9e, 0xc2, 0xb6, 0xe2, 0x80, 0xa0, 0xe2, 0x80, 0xa1, 0xe2,
  0x86, 0x95, 0xe2, 0x86, 0x97, 0xe2, 0x86, 0x99, 0xe2, 0x86, 0x96, 0xe2,
  0x86, 0x98, 0xe2, 0x99, 0xad, 0xe2, 0x99, 0xa9, 0xe2, 0x99, 0xaa, 0xe2,
  0x99, 0xac, 0xe3, 0x89, 0xbf, 0xe3, 0x88, 0x9c, 0xe2, 0x84, 0x96, 0xe3,
  0x8f, 0x87, 0xe2, 0x84, 0xa2, 0xe3, 0x8f, 0x82, 0xe3, 0x8f, 0x98, 0xe2,
  0x84, 0xa1, 0xe2, 0x82, 0xac, 0xc2, 0xae, 0xe3, 0x89, 0xbe
};

unsigned char ksx_1001_row_03_converted_to_utf8[] = {
  0xef, 0xbc, 0x81, 0xef, 0xbc, 0x82, 0xef, 0xbc, 0x83, 0xef, 0xbc, 0x84,
  0xef, 0xbc, 0x85, 0xef, 0xbc, 0x86, 0xef, 0xbc, 0x87, 0xef, 0xbc, 0x88,
  0xef, 0xbc, 0x89, 0xef, 0xbc, 0x8a, 0xef, 0xbc, 0x8b, 0xef, 0xbc, 0x8c,
  0xef, 0xbc, 0x8d, 0xef, 0xbc, 0x8e, 0xef, 0xbc, 0x8f, 0xef, 0xbc, 0x90,
  0xef, 0xbc, 0x91, 0xef, 0xbc, 0x92, 0xef, 0xbc, 0x93, 0xef, 0xbc, 0x94,
  0xef, 0xbc, 0x95, 0xef, 0xbc, 0x96, 0xef, 0xbc, 0x97, 0xef, 0xbc, 0x98,
  0xef, 0xbc, 0x99, 0xef, 0xbc, 0x9a, 0xef, 0xbc, 0x9b, 0xef, 0xbc, 0x9c,
  0xef, 0xbc, 0x9d, 0xef, 0xbc, 0x9e, 0xef, 0xbc, 0x9f, 0xef, 0xbc, 0xa0,
  0xef, 0xbc, 0xa1, 0xef, 0xbc, 0xa2, 0xef, 0xbc, 0xa3, 0xef, 0xbc, 0xa4,
  0xef, 0xbc, 0xa5, 0xef, 0xbc, 0xa6, 0xef, 0xbc, 0xa7, 0xef, 0xbc, 0xa8,
  0xef, 0xbc, 0xa9, 0xef, 0xbc, 0xaa, 0xef, 0xbc, 0xab, 0xef, 0xbc, 0xac,
  0xef, 0xbc, 0xad, 0xef, 0xbc, 0xae, 0xef, 0xbc, 0xaf, 0xef, 0xbc, 0xb0,
  0xef, 0xbc, 0xb1, 0xef, 0xbc, 0xb2, 0xef, 0xbc, 0xb3, 0xef, 0xbc, 0xb4,
  0xef, 0xbc, 0xb5, 0xef, 0xbc, 0xb6, 0xef, 0xbc, 0xb7, 0xef, 0xbc, 0xb8,
  0xef, 0xbc, 0xb9, 0xef, 0xbc, 0xba, 0xef, 0xbc, 0xbb, 0xef, 0xbf, 0xa6,
  0xef, 0xbc, 0xbd, 0xef, 0xbc, 0xbe, 0xef, 0xbc, 0xbf, 0xef, 0xbd, 0x80,
  0xef, 0xbd, 0x81, 0xef, 0xbd, 0x82, 0xef, 0xbd, 0x83, 0xef, 0xbd, 0x84,
  0xef, 0xbd, 0x85, 0xef, 0xbd, 0x86, 0xef, 0xbd, 0x87, 0xef, 0xbd, 0x88,
  0xef, 0xbd, 0x89, 0xef, 0xbd, 0x8a, 0xef, 0xbd, 0x8b, 0xef, 0xbd, 0x8c,
  0xef, 0xbd, 0x8d, 0xef, 0xbd, 0x8e, 0xef, 0xbd, 0x8f, 0xef, 0xbd, 0x90,
  0xef, 0xbd, 0x91, 0xef, 0xbd, 0x92, 0xef, 0xbd, 0x93, 0xef, 0xbd, 0x94,
  0xef, 0xbd, 0x95, 0xef, 0xbd, 0x96, 0xef, 0xbd, 0x97, 0xef, 0xbd, 0x98,
  0xef, 0xbd, 0x99, 0xef, 0xbd, 0x9a, 0xef, 0xbd, 0x9b, 0xef, 0xbd, 0x9c,
  0xef, 0xbd, 0x9d, 0xef, 0xbf, 0xa3
};

unsigned char ksx_1001_row_04_converted_to_utf8[] = {
  0xe3, 0x84, 0xb1, 0xe3, 0x84, 0xb2, 0xe3, 0x84, 0xb3, 0xe3, 0x84, 0xb4,
  0xe3, 0x84, 0xb5, 0xe3, 0x84, 0xb6, 0xe3, 0x84, 0xb7, 0xe3, 0x84, 0xb8,
  0xe3, 0x84, 0xb9, 0xe3, 0x84, 0xba, 0xe3, 0x84, 0xbb, 0xe3, 0x84, 0xbc,
  0xe3, 0x84, 0xbd, 0xe3, 0x84, 0xbe, 0xe3, 0x84, 0xbf, 0xe3, 0x85, 0x80,
  0xe3, 0x85, 0x81, 0xe3, 0x85, 0x82, 0xe3, 0x85, 0x83, 0xe3, 0x85, 0x84,
  0xe3, 0x85, 0x85, 0xe3, 0x85, 0x86, 0xe3, 0x85, 0x87, 0xe3, 0x85, 0x88,
  0xe3, 0x85, 0x89, 0xe3, 0x85, 0x8a, 0xe3, 0x85, 0x8b, 0xe3, 0x85, 0x8c,
  0xe3, 0x85, 0x8d, 0xe3, 0x85, 0x8e, 0xe3, 0x85, 0x8f, 0xe3, 0x85, 0x90,
  0xe3, 0x85, 0x91, 0xe3, 0x85, 0x92, 0xe3, 0x85, 0x93, 0xe3, 0x85, 0x94,
  0xe3, 0x85, 0x95, 0xe3, 0x85, 0x96, 0xe3, 0x85, 0x97, 0xe3, 0x85, 0x98,
  0xe3, 0x85, 0x99, 0xe3, 0x85, 0x9a, 0xe3, 0x85, 0x9b, 0xe3, 0x85, 0x9c,
  0xe3, 0x85, 0x9d, 0xe3, 0x85, 0x9e, 0xe3, 0x85, 0x9f, 0xe3, 0x85, 0xa0,
  0xe3, 0x85, 0xa1, 0xe3, 0x85, 0xa2, 0xe3, 0x85, 0xa3, 0xe3, 0x85, 0xa4,
  0xe3, 0x85, 0xa5, 0xe3, 0x85, 0xa6, 0xe3, 0x85, 0xa7, 0xe3, 0x85, 0xa8,
  0xe3, 0x85, 0xa9, 0xe3, 0x85, 0xaa, 0xe3, 0x85, 0xab, 0xe3, 0x85, 0xac,
  0xe3, 0x85, 0xad, 0xe3, 0x85, 0xae, 0xe3, 0x85, 0xaf, 0xe3, 0x85, 0xb0,
  0xe3, 0x85, 0xb1, 0xe3, 0x85, 0xb2, 0xe3, 0x85, 0xb3, 0xe3, 0x85, 0xb4,
  0xe3, 0x85, 0xb5, 0xe3, 0x85, 0xb6, 0xe3, 0x85, 0xb7, 0xe3, 0x85, 0xb8,
  0xe3, 0x85, 0xb9, 0xe3, 0x85, 0xba, 0xe3, 0x85, 0xbb, 0xe3, 0x85, 0xbc,
  0xe3, 0x85, 0xbd, 0xe3, 0x85, 0xbe, 0xe3, 0x85, 0xbf, 0xe3, 0x86, 0x80,
  0xe3, 0x86, 0x81, 0xe3, 0x86, 0x82, 0xe3, 0x86, 0x83, 0xe3, 0x86, 0x84,
  0xe3, 0x86, 0x85, 0xe3, 0x86, 0x86, 0xe3, 0x86, 0x87, 0xe3, 0x86, 0x88,
  0xe3, 0x86, 0x89, 0xe3, 0x86, 0x8a, 0xe3, 0x86, 0x8b, 0xe3, 0x86, 0x8c,
  0xe3, 0x86, 0x8d, 0xe3, 0x86, 0x8e
};

unsigned char ksx_1001_row_05_converted_to_utf8[] = {
  0xce, 0x91, 0xce, 0x92, 0xce, 0x93, 0xce, 0x94, 0xce, 0x95, 0xce, 0x96,
  0xce, 0x97, 0xce, 0x98, 0xce, 0x99, 0xce, 0x9a, 0xce, 0x9b, 0xce, 0x9c,
  0xce, 0x9d, 0xce, 0x9e, 0xce, 0x9f, 0xce, 0xa0, 0xce, 0xa1, 0xce, 0xa3,
  0xce, 0xa4, 0xce, 0xa5, 0xce, 0xa6, 0xce, 0xa7, 0xce, 0xa8, 0xce, 0xa9,
  0xce, 0xb1, 0xce, 0xb2, 0xce, 0xb3, 0xce, 0xb4, 0xce, 0xb5, 0xce, 0xb6,
  0xce, 0xb7, 0xce, 0xb8, 0xce, 0xb9, 0xce, 0xba, 0xce, 0xbb, 0xce, 0xbc,
  0xce, 0xbd, 0xce, 0xbe, 0xce, 0xbf, 0xcf, 0x80, 0xcf, 0x81, 0xcf, 0x83,
  0xcf, 0x84, 0xcf, 0x85, 0xcf, 0x86, 0xcf, 0x87, 0xcf, 0x88, 0xcf, 0x89
};

unsigned char ksx_1001_row_06_converted_to_utf8[] = {
  0xe2, 0x94, 0x80, 0xe2, 0x94, 0x82, 0xe2, 0x94, 0x8c, 0xe2, 0x94, 0x90,
  0xe2, 0x94, 0x98, 0xe2, 0x94, 0x94, 0xe2, 0x94, 0x9c, 0xe2, 0x94, 0xac,
  0xe2, 0x94, 0xa4, 0xe2, 0x94, 0xb4, 0xe2, 0x94, 0xbc, 0xe2, 0x94, 0x81,
  0xe2, 0x94, 0x83, 0xe2, 0x94, 0x8f, 0xe2, 0x94, 0x93, 0xe2, 0x94, 0x9b,
  0xe2, 0x94, 0x97, 0xe2, 0x94, 0xa3, 0xe2, 0x94, 0xb3, 0xe2, 0x94, 0xab,
  0xe2, 0x94, 0xbb, 0xe2, 0x95, 0x8b, 0xe2, 0x94, 0xa0, 0xe2, 0x94, 0xaf,
  0xe2, 0x94, 0xa8, 0xe2, 0x94, 0xb7, 0xe2, 0x94, 0xbf, 0xe2, 0x94, 0x9d,
  0xe2, 0x94, 0xb0, 0xe2, 0x94, 0xa5, 0xe2, 0x94, 0xb8, 0xe2, 0x95, 0x82,
  0xe2, 0x94, 0x92, 0xe2, 0x94, 0x91, 0xe2, 0x94, 0x9a, 0xe2, 0x94, 0x99,
  0xe2, 0x94, 0x96, 0xe2, 0x94, 0x95, 0xe2, 0x94, 0x8e, 0xe2, 0x94, 0x8d,
  0xe2, 0x94, 0x9e, 0xe2, 0x94, 0x9f, 0xe2, 0x94, 0xa1, 0xe2, 0x94, 0xa2,
  0xe2, 0x94, 0xa6, 0xe2, 0x94, 0xa7, 0xe2, 0x94, 0xa9, 0xe2, 0x94, 0xaa,
  0xe2, 0x94, 0xad, 0xe2, 0x94, 0xae, 0xe2, 0x94, 0xb1, 0xe2, 0x94, 0xb2,
  0xe2, 0x94, 0xb5, 0xe2, 0x94, 0xb6, 0xe2, 0x94, 0xb9, 0xe2, 0x94, 0xba,
  0xe2, 0x94, 0xbd, 0xe2, 0x94, 0xbe, 0xe2, 0x95, 0x80, 0xe2, 0x95, 0x81,
  0xe2, 0x95, 0x83, 0xe2, 0x95, 0x84, 0xe2, 0x95, 0x85, 0xe2, 0x95, 0x86,
  0xe2, 0x95, 0x87, 0xe2, 0x95, 0x88, 0xe2, 0x95, 0x89, 0xe2, 0x95, 0x8a
};

unsigned char ksx_1001_row_07_converted_to_utf8[] = {
  0xe3, 0x8e, 0x95, 0xe3, 0x8e, 0x96, 0xe3, 0x8e, 0x97, 0xe2, 0x84, 0x93,
  0xe3, 0x8e, 0x98, 0xe3, 0x8f, 0x84, 0xe3, 0x8e, 0xa3, 0xe3, 0x8e, 0xa4,
  0xe3, 0x8e, 0xa5, 0xe3, 0x8e, 0xa6, 0xe3, 0x8e, 0x99, 0xe3, 0x8e, 0x9a,
  0xe3, 0x8e, 0x9b, 0xe3, 0x8e, 0x9c, 0xe3, 0x8e, 0x9d, 0xe3, 0x8e, 0x9e,
  0xe3, 0x8e, 0x9f, 0xe3, 0x8e, 0xa0, 0xe3, 0x8e, 0xa1, 0xe3, 0x8e, 0xa2,
  0xe3, 0x8f, 0x8a, 0xe3, 0x8e, 0x8d, 0xe3, 0x8e, 0x8e, 0xe3, 0x8e, 0x8f,
  0xe3, 0x8f, 0x8f, 0xe3, 0x8e, 0x88, 0xe3, 0x8e, 0x89, 0xe3, 0x8f, 0x88,
  0xe3, 0x8e, 0xa7, 0xe3, 0x8e, 0xa8, 0xe3, 0x8e, 0xb0, 0xe3, 0x8e, 0xb1,
  0xe3, 0x8e, 0xb2, 0xe3, 0x8e, 0xb3, 0xe3, 0x8e, 0xb4, 0xe3, 0x8e, 0xb5,
  0xe3, 0x8e, 0xb6, 0xe3, 0x8e, 0xb7, 0xe3, 0x8e, 0xb8, 0xe3, 0x8e, 0xb9,
  0xe3, 0x8e, 0x80, 0xe3, 0x8e, 0x81, 0xe3, 0x8e, 0x82, 0xe3, 0x8e, 0x83,
  0xe3, 0x8e, 0x84, 0xe3, 0x8e, 0xba, 0xe3, 0x8e, 0xbb, 0xe3, 0x8e, 0xbc,
  0xe3, 0x8e, 0xbd, 0xe3, 0x8e, 0xbe, 0xe3, 0x8e, 0xbf, 0xe3, 0x8e, 0x90,
  0xe3, 0x8e, 0x91, 0xe3, 0x8e, 0x92, 0xe3, 0x8e, 0x93, 0xe3, 0x8e, 0x94,
  0xe2, 0x84, 0xa6, 0xe3, 0x8f, 0x80, 0xe3, 0x8f, 0x81, 0xe3, 0x8e, 0x8a,
  0xe3, 0x8e, 0x8b, 0xe3, 0x8e, 0x8c, 0xe3, 0x8f, 0x96, 0xe3, 0x8f, 0x85,
  0xe3, 0x8e, 0xad, 0xe3, 0x8e, 0xae, 0xe3, 0x8e, 0xaf, 0xe3, 0x8f, 0x9b,
  0xe3, 0x8e, 0xa9, 0xe3, 0x8e, 0xaa, 0xe3, 0x8e, 0xab, 0xe3, 0x8e, 0xac,
  0xe3, 0x8f, 0x9d, 0xe3, 0x8f, 0x90, 0xe3, 0x8f, 0x93, 0xe3, 0x8f, 0x83,
  0xe3, 0x8f, 0x89, 0xe3, 0x8f, 0x9c, 0xe3, 0x8f, 0x86
};

unsigned char ksx_1001_row_08_converted_to_utf8[] = {
  0xc3, 0x86, 0xc3, 0x90, 0xc2, 0xaa, 0xc4, 0xa6, 0xc4, 0xb2, 0xc4, 0xbf,
  0xc5, 0x81, 0xc3, 0x98, 0xc5, 0x92, 0xc2, 0xba, 0xc3, 0x9e, 0xc5, 0xa6,
  0xc5, 0x8a
};

unsigned char ksx_1001_row_09_converted_to_utf8[] = {
  0xc3, 0xa6, 0xc4, 0x91, 0xc3, 0xb0, 0xc4, 0xa7, 0xc4, 0xb1, 0xc4, 0xb3,
  0xc4, 0xb8, 0xc5, 0x80, 0xc5, 0x82, 0xc3, 0xb8, 0xc5, 0x93, 0xc3, 0x9f,
  0xc3, 0xbe, 0xc5, 0xa7, 0xc5, 0x8b, 0xc5, 0x89, 0xe3, 0x88, 0x80, 0xe3,
  0x88, 0x81, 0xe3, 0x88, 0x82, 0xe3, 0x88, 0x83, 0xe3, 0x88, 0x84, 0xe3,
  0x88, 0x85, 0xe3, 0x88, 0x86, 0xe3, 0x88, 0x87, 0xe3, 0x88, 0x88, 0xe3,
  0x88, 0x89, 0xe3, 0x88, 0x8a, 0xe3, 0x88, 0x8b, 0xe3, 0x88, 0x8c, 0xe3,
  0x88, 0x8d, 0xe3, 0x88, 0x8e, 0xe3, 0x88, 0x8f, 0xe3, 0x88, 0x90, 0xe3,
  0x88, 0x91, 0xe3, 0x88, 0x92, 0xe3, 0x88, 0x93, 0xe3, 0x88, 0x94, 0xe3,
  0x88, 0x95, 0xe3, 0x88, 0x96, 0xe3, 0x88, 0x97, 0xe3, 0x88, 0x98, 0xe3,
  0x88, 0x99, 0xe3, 0x88, 0x9a, 0xe3, 0x88, 0x9b, 0xe2, 0x92, 0x9c, 0xe2,
  0x92, 0x9d, 0xe2, 0x92, 0x9e, 0xe2, 0x92, 0x9f, 0xe2, 0x92, 0xa0, 0xe2,
  0x92, 0xa1, 0xe2, 0x92, 0xa2, 0xe2, 0x92, 0xa3, 0xe2, 0x92, 0xa4, 0xe2,
  0x92, 0xa5, 0xe2, 0x92, 0xa6, 0xe2, 0x92, 0xa7, 0xe2, 0x92, 0xa8, 0xe2,
  0x92, 0xa9, 0xe2, 0x92, 0xaa, 0xe2, 0x92, 0xab, 0xe2, 0x92, 0xac, 0xe2,
  0x92, 0xad, 0xe2, 0x92, 0xae, 0xe2, 0x92, 0xaf, 0xe2, 0x92, 0xb0, 0xe2,
  0x92, 0xb1, 0xe2, 0x92, 0xb2, 0xe2, 0x92, 0xb3, 0xe2, 0x92, 0xb4, 0xe2,
  0x92, 0xb5, 0xe2, 0x91, 0xb4, 0xe2, 0x91, 0xb5, 0xe2, 0x91, 0xb6, 0xe2,
  0x91, 0xb7, 0xe2, 0x91, 0xb8, 0xe2, 0x91, 0xb9, 0xe2, 0x91, 0xba, 0xe2,
  0x91, 0xbb, 0xe2, 0x91, 0xbc, 0xe2, 0x91, 0xbd, 0xe2, 0x91, 0xbe, 0xe2,
  0x91, 0xbf, 0xe2, 0x92, 0x80, 0xe2, 0x92, 0x81, 0xe2, 0x92, 0x82, 0xc2,
  0xb9, 0xc2, 0xb2, 0xc2, 0xb3, 0xe2, 0x81, 0xb4, 0xe2, 0x81, 0xbf, 0xe2,
  0x82, 0x81, 0xe2, 0x82, 0x82, 0xe2, 0x82, 0x83, 0xe2, 0x82, 0x84
};

unsigned char ksx_1001_row_10_converted_to_utf8[] = {
  0xe3, 0x81, 0x81, 0xe3, 0x81, 0x82, 0xe3, 0x81, 0x83, 0xe3, 0x81, 0x84,
  0xe3, 0x81, 0x85, 0xe3, 0x81, 0x86, 0xe3, 0x81, 0x87, 0xe3, 0x81, 0x88,
  0xe3, 0x81, 0x89, 0xe3, 0x81, 0x8a, 0xe3, 0x81, 0x8b, 0xe3, 0x81, 0x8c,
  0xe3, 0x81, 0x8d, 0xe3, 0x81, 0x8e, 0xe3, 0x81, 0x8f, 0xe3, 0x81, 0x90,
  0xe3, 0x81, 0x91, 0xe3, 0x81, 0x92, 0xe3, 0x81, 0x93, 0xe3, 0x81, 0x94,
  0xe3, 0x81, 0x95, 0xe3, 0x81, 0x96, 0xe3, 0x81, 0x97, 0xe3, 0x81, 0x98,
  0xe3, 0x81, 0x99, 0xe3, 0x81, 0x9a, 0xe3, 0x81, 0x9b, 0xe3, 0x81, 0x9c,
  0xe3, 0x81, 0x9d, 0xe3, 0x81, 0x9e, 0xe3, 0x81, 0x9f, 0xe3, 0x81, 0xa0,
  0xe3, 0x81, 0xa1, 0xe3, 0x81, 0xa2, 0xe3, 0x81, 0xa3, 0xe3, 0x81, 0xa4,
  0xe3, 0x81, 0xa5, 0xe3, 0x81, 0xa6, 0xe3, 0x81, 0xa7, 0xe3, 0x81, 0xa8,
  0xe3, 0x81, 0xa9, 0xe3, 0x81, 0xaa, 0xe3, 0x81, 0xab, 0xe3, 0x81, 0xac,
  0xe3, 0x81, 0xad, 0xe3, 0x81, 0xae, 0xe3, 0x81, 0xaf, 0xe3, 0x81, 0xb0,
  0xe3, 0x81, 0xb1, 0xe3, 0x81, 0xb2, 0xe3, 0x81, 0xb3, 0xe3, 0x81, 0xb4,
  0xe3, 0x81, 0xb5, 0xe3, 0x81, 0xb6, 0xe3, 0x81, 0xb7, 0xe3, 0x81, 0xb8,
  0xe3, 0x81, 0xb9, 0xe3, 0x81, 0xba, 0xe3, 0x81, 0xbb, 0xe3, 0x81, 0xbc,
  0xe3, 0x81, 0xbd, 0xe3, 0x81, 0xbe, 0xe3, 0x81, 0xbf, 0xe3, 0x82, 0x80,
  0xe3, 0x82, 0x81, 0xe3, 0x82, 0x82, 0xe3, 0x82, 0x83, 0xe3, 0x82, 0x84,
  0xe3, 0x82, 0x85, 0xe3, 0x82, 0x86, 0xe3, 0x82, 0x87, 0xe3, 0x82, 0x88,
  0xe3, 0x82, 0x89, 0xe3, 0x82, 0x8a, 0xe3, 0x82, 0x8b, 0xe3, 0x82, 0x8c,
  0xe3, 0x82, 0x8d, 0xe3, 0x82, 0x8e, 0xe3, 0x82, 0x8f, 0xe3, 0x82, 0x90,
  0xe3, 0x82, 0x91, 0xe3, 0x82, 0x92, 0xe3, 0x82, 0x93
};

unsigned char ksx_1001_row_11_converted_to_utf8[] = {
  0xe3, 0x82, 0xa1, 0xe3, 0x82, 0xa2, 0xe3, 0x82, 0xa3, 0xe3, 0x82, 0xa4,
  0xe3, 0x82, 0xa5, 0xe3, 0x82, 0xa6, 0xe3, 0x82, 0xa7, 0xe3, 0x82, 0xa8,
  0xe3, 0x82, 0xa9, 0xe3, 0x82, 0xaa, 0xe3, 0x82, 0xab, 0xe3, 0x82, 0xac,
  0xe3, 0x82, 0xad, 0xe3, 0x82, 0xae, 0xe3, 0x82, 0xaf, 0xe3, 0x82, 0xb0,
  0xe3, 0x82, 0xb1, 0xe3, 0x82, 0xb2, 0xe3, 0x82, 0xb3, 0xe3, 0x82, 0xb4,
  0xe3, 0x82, 0xb5, 0xe3, 0x82, 0xb6, 0xe3, 0x82, 0xb7, 0xe3, 0x82, 0xb8,
  0xe3, 0x82, 0xb9, 0xe3, 0x82, 0xba, 0xe3, 0x82, 0xbb, 0xe3, 0x82, 0xbc,
  0xe3, 0x82, 0xbd, 0xe3, 0x82, 0xbe, 0xe3, 0x82, 0xbf, 0xe3, 0x83, 0x80,
  0xe3, 0x83, 0x81, 0xe3, 0x83, 0x82, 0xe3, 0x83, 0x83, 0xe3, 0x83, 0x84,
  0xe3, 0x83, 0x85, 0xe3, 0x83, 0x86, 0xe3, 0x83, 0x87, 0xe3, 0x83, 0x88,
  0xe3, 0x83, 0x89, 0xe3, 0x83, 0x8a, 0xe3, 0x83, 0x8b, 0xe3, 0x83, 0x8c,
  0xe3, 0x83, 0x8d, 0xe3, 0x83, 0x8e, 0xe3, 0x83, 0x8f, 0xe3, 0x83, 0x90,
  0xe3, 0x83, 0x91, 0xe3, 0x83, 0x92, 0xe3, 0x83, 0x93, 0xe3, 0x83, 0x94,
  0xe3, 0x83, 0x95, 0xe3, 0x83, 0x96, 0xe3, 0x83, 0x97, 0xe3, 0x83, 0x98,
  0xe3, 0x83, 0x99, 0xe3, 0x83, 0x9a, 0xe3, 0x83, 0x9b, 0xe3, 0x83, 0x9c,
  0xe3, 0x83, 0x9d, 0xe3, 0x83, 0x9e, 0xe3, 0x83, 0x9f, 0xe3, 0x83, 0xa0,
  0xe3, 0x83, 0xa1, 0xe3, 0x83, 0xa2, 0xe3, 0x83, 0xa3, 0xe3, 0x83, 0xa4,
  0xe3, 0x83, 0xa5, 0xe3, 0x83, 0xa6, 0xe3, 0x83, 0xa7, 0xe3, 0x83, 0xa8,
  0xe3, 0x83, 0xa9, 0xe3, 0x83, 0xaa, 0xe3, 0x83, 0xab, 0xe3, 0x83, 0xac,
  0xe3, 0x83, 0xad, 0xe3, 0x83, 0xae, 0xe3, 0x83, 0xaf, 0xe3, 0x83, 0xb0,
  0xe3, 0x83, 0xb1, 0xe3, 0x83, 0xb2, 0xe3, 0x83, 0xb3, 0xe3, 0x83, 0xb4,
  0xe3, 0x83, 0xb5, 0xe3, 0x83, 0xb6
};

unsigned char ksx_1001_row_12_converted_to_utf8[] = {
  0xd0, 0x90, 0xd0, 0x91, 0xd0, 0x92, 0xd0, 0x93, 0xd0, 0x94, 0xd0, 0x95,
  0xd0, 0x81, 0xd0, 0x96, 0xd0, 0x97, 0xd0, 0x98, 0xd0, 0x99, 0xd0, 0x9a,
  0xd0, 0x9b, 0xd0, 0x9c, 0xd0, 0x9d, 0xd0, 0x9e, 0xd0, 0x9f, 0xd0, 0xa0,
  0xd0, 0xa1, 0xd0, 0xa2, 0xd0, 0xa3, 0xd0, 0xa4, 0xd0, 0xa5, 0xd0, 0xa6,
  0xd0, 0xa7, 0xd0, 0xa8, 0xd0, 0xa9, 0xd0, 0xaa, 0xd0, 0xab, 0xd0, 0xac,
  0xd0, 0xad, 0xd0, 0xae, 0xd0, 0xaf, 0xd0, 0xb0, 0xd0, 0xb1, 0xd0, 0xb2,
  0xd0, 0xb3, 0xd0, 0xb4, 0xd0, 0xb5, 0xd1, 0x91, 0xd0, 0xb6, 0xd0, 0xb7,
  0xd0, 0xb8, 0xd0, 0xb9, 0xd0, 0xba, 0xd0, 0xbb, 0xd0, 0xbc, 0xd0, 0xbd,
  0xd0, 0xbe, 0xd0, 0xbf, 0xd1, 0x80, 0xd1, 0x81, 0xd1, 0x82, 0xd1, 0x83,
  0xd1, 0x84, 0xd1, 0x85, 0xd1, 0x86, 0xd1, 0x87, 0xd1, 0x88, 0xd1, 0x89,
  0xd1, 0x8a, 0xd1, 0x8b, 0xd1, 0x8c, 0xd1, 0x8d, 0xd1, 0x8e, 0xd1, 0x8f
};

unsigned char ksx_1001_row_16_converted_to_utf8[] = {
  0xea, 0xb0, 0x80, 0xea, 0xb0, 0x81, 0xea, 0xb0, 0x84, 0xea, 0xb0, 0x87,
  0xea, 0xb0, 0x88, 0xea, 0xb0, 0x89, 0xea, 0xb0, 0x8a, 0xea, 0xb0, 0x90,
  0xea, 0xb0, 0x91, 0xea, 0xb0, 0x92, 0xea, 0xb0, 0x93, 0xea, 0xb0, 0x94,
  0xea, 0xb0, 0x95, 0xea, 0xb0, 0x96, 0xea, 0xb0, 0x97, 0xea, 0xb0, 0x99,
  0xea, 0xb0, 0x9a, 0xea, 0xb0, 0x9b, 0xea, 0xb0, 0x9c, 0xea, 0xb0, 0x9d,
  0xea, 0xb0, 0xa0, 0xea, 0xb0, 0xa4, 0xea, 0xb0, 0xac, 0xea, 0xb0, 0xad,
  0xea, 0xb0, 0xaf, 0xea, 0xb0, 0xb0, 0xea, 0xb0, 0xb1, 0xea, 0xb0, 0xb8,
  0xea, 0xb0, 0xb9, 0xea, 0xb0, 0xbc, 0xea, 0xb1, 0x80, 0xea, 0xb1, 0x8b,
  0xea, 0xb1, 0x8d, 0xea, 0xb1, 0x94, 0xea, 0xb1, 0x98, 0xea, 0xb1, 0x9c,
  0xea, 0xb1, 0xb0, 0xea, 0xb1, 0xb1, 0xea, 0xb1, 0xb4, 0xea, 0xb1, 0xb7,
  0xea, 0xb1, 0xb8, 0xea, 0xb1, 0xba, 0xea, 0xb2, 0x80, 0xea, 0xb2, 0x81,
  0xea, 0xb2, 0x83, 0xea, 0xb2, 0x84, 0xea, 0xb2, 0x85, 0xea, 0xb2, 0x86,
  0xea, 0xb2, 0x89, 0xea, 0xb2, 0x8a, 0xea, 0xb2, 0x8b, 0xea, 0xb2, 0x8c,
  0xea, 0xb2, 0x90, 0xea, 0xb2, 0x94, 0xea, 0xb2, 0x9c, 0xea, 0xb2, 0x9d,
  0xea, 0xb2, 0x9f, 0xea, 0xb2, 0xa0, 0xea, 0xb2, 0xa1, 0xea, 0xb2, 0xa8,
  0xea, 0xb2, 0xa9, 0xea, 0xb2, 0xaa, 0xea, 0xb2, 0xac, 0xea, 0xb2, 0xaf,
  0xea, 0xb2, 0xb0, 0xea, 0xb2, 0xb8, 0xea, 0xb2, 0xb9, 0xea, 0xb2, 0xbb,
  0xea, 0xb2, 0xbc, 0xea, 0xb2, 0xbd, 0xea, 0xb3, 0x81, 0xea, 0xb3, 0x84,
  0xea, 0xb3, 0x88, 0xea, 0xb3, 0x8c, 0xea, 0xb3, 0x95, 0xea, 0xb3, 0x97,
  0xea, 0xb3, 0xa0, 0xea, 0xb3, 0xa1, 0xea, 0xb3, 0xa4, 0xea, 0xb3, 0xa7,
  0xea, 0xb3, 0xa8, 0xea, 0xb3, 0xaa, 0xea, 0xb3, 0xac, 0xea, 0xb3, 0xaf,
  0xea, 0xb3, 0xb0, 0xea, 0xb3, 0xb1, 0xea, 0xb3, 0xb3, 0xea, 0xb3, 0xb5,
  0xea, 0xb3, 0xb6, 0xea, 0xb3, 0xbc, 0xea, 0xb3, 0xbd, 0xea, 0xb4, 0x80,
  0xea, 0xb4, 0x84, 0xea, 0xb4, 0x86
};

unsigned char ksx_1001_row_17_converted_to_utf8[] = {
  0xea, 0xb4, 0x8c, 0xea, 0xb4, 0x8d, 0xea, 0xb4, 0x8f, 0xea, 0xb4, 0x91,
  0xea, 0xb4, 0x98, 0xea, 0xb4, 0x9c, 0xea, 0xb4, 0xa0, 0xea, 0xb4, 0xa9,
  0xea, 0xb4, 0xac, 0xea, 0xb4, 0xad, 0xea, 0xb4, 0xb4, 0xea, 0xb4, 0xb5,
  0xea, 0xb4, 0xb8, 0xea, 0xb4, 0xbc, 0xea, 0xb5, 0x84, 0xea, 0xb5, 0x85,
  0xea, 0xb5, 0x87, 0xea, 0xb5, 0x89, 0xea, 0xb5, 0x90, 0xea, 0xb5, 0x94,
  0xea, 0xb5, 0x98, 0xea, 0xb5, 0xa1, 0xea, 0xb5, 0xa3, 0xea, 0xb5, 0xac,
  0xea, 0xb5, 0xad, 0xea, 0xb5, 0xb0, 0xea, 0xb5, 0xb3, 0xea, 0xb5, 0xb4,
  0xea, 0xb5, 0xb5, 0xea, 0xb5, 0xb6, 0xea, 0xb5, 0xbb, 0xea, 0xb5, 0xbc,
  0xea, 0xb5, 0xbd, 0xea, 0xb5, 0xbf, 0xea, 0xb6, 0x81, 0xea, 0xb6, 0x82,
  0xea, 0xb6, 0x88, 0xea, 0xb6, 0x89, 0xea, 0xb6, 0x8c, 0xea, 0xb6, 0x90,
  0xea, 0xb6, 0x9c, 0xea, 0xb6, 0x9d, 0xea, 0xb6, 0xa4, 0xea, 0xb6, 0xb7,
  0xea, 0xb7, 0x80, 0xea, 0xb7, 0x81, 0xea, 0xb7, 0x84, 0xea, 0xb7, 0x88,
  0xea, 0xb7, 0x90, 0xea, 0xb7, 0x91, 0xea, 0xb7, 0x93, 0xea, 0xb7, 0x9c,
  0xea, 0xb7, 0xa0, 0xea, 0xb7, 0xa4, 0xea, 0xb7, 0xb8, 0xea, 0xb7, 0xb9,
  0xea, 0xb7, 0xbc, 0xea, 0xb7, 0xbf, 0xea, 0xb8, 0x80, 0xea, 0xb8, 0x81,
  0xea, 0xb8, 0x88, 0xea, 0xb8, 0x89, 0xea, 0xb8, 0x8b, 0xea, 0xb8, 0x8d,
  0xea, 0xb8, 0x94, 0xea, 0xb8, 0xb0, 0xea, 0xb8, 0xb1, 0xea, 0xb8, 0xb4,
  0xea, 0xb8, 0xb7, 0xea, 0xb8, 0xb8, 0xea, 0xb8, 0xba, 0xea, 0xb9, 0x80,
  0xea, 0xb9, 0x81, 0xea, 0xb9, 0x83, 0xea, 0xb9, 0x85, 0xea, 0xb9, 0x86,
  0xea, 0xb9, 0x8a, 0xea, 0xb9, 0x8c, 0xea, 0xb9, 0x8d, 0xea, 0xb9, 0x8e,
  0xea, 0xb9, 0x90, 0xea, 0xb9, 0x94, 0xea, 0xb9, 0x96, 0xea, 0xb9, 0x9c,
  0xea, 0xb9, 0x9d, 0xea, 0xb9, 0x9f, 0xea, 0xb9, 0xa0, 0xea, 0xb9, 0xa1,
  0xea, 0xb9, 0xa5, 0xea, 0xb9, 0xa8, 0xea, 0xb9, 0xa9, 0xea, 0xb9, 0xac,
  0xea, 0xb9, 0xb0, 0xea, 0xb9, 0xb8
};

unsigned char ksx_1001_row_18_converted_to_utf8[] = {
  0xea, 0xb9, 0xb9, 0xea, 0xb9, 0xbb, 0xea, 0xb9, 0xbc, 0xea, 0xb9, 0xbd,
  0xea, 0xba, 0x84, 0xea, 0xba, 0x85, 0xea, 0xba, 0x8c, 0xea, 0xba, 0xbc,
  0xea, 0xba, 0xbd, 0xea, 0xba, 0xbe, 0xea, 0xbb, 0x80, 0xea, 0xbb, 0x84,
  0xea, 0xbb, 0x8c, 0xea, 0xbb, 0x8d, 0xea, 0xbb, 0x8f, 0xea, 0xbb, 0x90,
  0xea, 0xbb, 0x91, 0xea, 0xbb, 0x98, 0xea, 0xbb, 0x99, 0xea, 0xbb, 0x9c,
  0xea, 0xbb, 0xa8, 0xea, 0xbb, 0xab, 0xea, 0xbb, 0xad, 0xea, 0xbb, 0xb4,
  0xea, 0xbb, 0xb8, 0xea, 0xbb, 0xbc, 0xea, 0xbc, 0x87, 0xea, 0xbc, 0x88,
  0xea, 0xbc, 0x8d, 0xea, 0xbc, 0x90, 0xea, 0xbc, 0xac, 0xea, 0xbc, 0xad,
  0xea, 0xbc, 0xb0, 0xea, 0xbc, 0xb2, 0xea, 0xbc, 0xb4, 0xea, 0xbc, 0xbc,
  0xea, 0xbc, 0xbd, 0xea, 0xbc, 0xbf, 0xea, 0xbd, 0x81, 0xea, 0xbd, 0x82,
  0xea, 0xbd, 0x83, 0xea, 0xbd, 0x88, 0xea, 0xbd, 0x89, 0xea, 0xbd, 0x90,
  0xea, 0xbd, 0x9c, 0xea, 0xbd, 0x9d, 0xea, 0xbd, 0xa4, 0xea, 0xbd, 0xa5,
  0xea, 0xbd, 0xb9, 0xea, 0xbe, 0x80, 0xea, 0xbe, 0x84, 0xea, 0xbe, 0x88,
  0xea, 0xbe, 0x90, 0xea, 0xbe, 0x91, 0xea, 0xbe, 0x95, 0xea, 0xbe, 0x9c,
  0xea, 0xbe, 0xb8, 0xea, 0xbe, 0xb9, 0xea, 0xbe, 0xbc, 0xea, 0xbf, 0x80,
  0xea, 0xbf, 0x87, 0xea, 0xbf, 0x88, 0xea, 0xbf, 0x89, 0xea, 0xbf, 0x8b,
  0xea, 0xbf, 0x8d, 0xea, 0xbf, 0x8e, 0xea, 0xbf, 0x94, 0xea, 0xbf, 0x9c,
  0xea, 0xbf, 0xa8, 0xea, 0xbf, 0xa9, 0xea, 0xbf, 0xb0, 0xea, 0xbf, 0xb1,
  0xea, 0xbf, 0xb4, 0xea, 0xbf, 0xb8, 0xeb, 0x80, 0x80, 0xeb, 0x80, 0x81,
  0xeb, 0x80, 0x84, 0xeb, 0x80, 0x8c, 0xeb, 0x80, 0x90, 0xeb, 0x80, 0x94,
  0xeb, 0x80, 0x9c, 0xeb, 0x80, 0x9d, 0xeb, 0x80, 0xa8, 0xeb, 0x81, 0x84,
  0xeb, 0x81, 0x85, 0xeb, 0x81, 0x88, 0xeb, 0x81, 0x8a, 0xeb, 0x81, 0x8c,
  0xeb, 0x81, 0x8e, 0xeb, 0x81, 0x93, 0xeb, 0x81, 0x94, 0xeb, 0x81, 0x95,
  0xeb, 0x81, 0x97, 0xeb, 0x81, 0x99
};

unsigned char ksx_1001_row_19_converted_to_utf8[] = {
  0xeb, 0x81, 0x9d, 0xeb, 0x81, 0xbc, 0xeb, 0x81, 0xbd, 0xeb, 0x82, 0x80,
  0xeb, 0x82, 0x84, 0xeb, 0x82, 0x8c, 0xeb, 0x82, 0x8d, 0xeb, 0x82, 0x8f,
  0xeb, 0x82, 0x91, 0xeb, 0x82, 0x98, 0xeb, 0x82, 0x99, 0xeb, 0x82, 0x9a,
  0xeb, 0x82, 0x9c, 0xeb, 0x82, 0x9f, 0xeb, 0x82, 0xa0, 0xeb, 0x82, 0xa1,
  0xeb, 0x82, 0xa2, 0xeb, 0x82, 0xa8, 0xeb, 0x82, 0xa9, 0xeb, 0x82, 0xab,
  0xeb, 0x82, 0xac, 0xeb, 0x82, 0xad, 0xeb, 0x82, 0xae, 0xeb, 0x82, 0xaf,
  0xeb, 0x82, 0xb1, 0xeb, 0x82, 0xb3, 0xeb, 0x82, 0xb4, 0xeb, 0x82, 0xb5,
  0xeb, 0x82, 0xb8, 0xeb, 0x82, 0xbc, 0xeb, 0x83, 0x84, 0xeb, 0x83, 0x85,
  0xeb, 0x83, 0x87, 0xeb, 0x83, 0x88, 0xeb, 0x83, 0x89, 0xeb, 0x83, 0x90,
  0xeb, 0x83, 0x91, 0xeb, 0x83, 0x94, 0xeb, 0x83, 0x98, 0xeb, 0x83, 0xa0,
  0xeb, 0x83, 0xa5, 0xeb, 0x84, 0x88, 0xeb, 0x84, 0x89, 0xeb, 0x84, 0x8b,
  0xeb, 0x84, 0x8c, 0xeb, 0x84, 0x90, 0xeb, 0x84, 0x92, 0xeb, 0x84, 0x93,
  0xeb, 0x84, 0x98, 0xeb, 0x84, 0x99, 0xeb, 0x84, 0x9b, 0xeb, 0x84, 0x9c,
  0xeb, 0x84, 0x9d, 0xeb, 0x84, 0xa3, 0xeb, 0x84, 0xa4, 0xeb, 0x84, 0xa5,
  0xeb, 0x84, 0xa8, 0xeb, 0x84, 0xac, 0xeb, 0x84, 0xb4, 0xeb, 0x84, 0xb5,
  0xeb, 0x84, 0xb7, 0xeb, 0x84, 0xb8, 0xeb, 0x84, 0xb9, 0xeb, 0x85, 0x80,
  0xeb, 0x85, 0x81, 0xeb, 0x85, 0x84, 0xeb, 0x85, 0x88, 0xeb, 0x85, 0x90,
  0xeb, 0x85, 0x91, 0xeb, 0x85, 0x94, 0xeb, 0x85, 0x95, 0xeb, 0x85, 0x98,
  0xeb, 0x85, 0x9c, 0xeb, 0x85, 0xa0, 0xeb, 0x85, 0xb8, 0xeb, 0x85, 0xb9,
  0xeb, 0x85, 0xbc, 0xeb, 0x86, 0x80, 0xeb, 0x86, 0x82, 0xeb, 0x86, 0x88,
  0xeb, 0x86, 0x89, 0xeb, 0x86, 0x8b, 0xeb, 0x86, 0x8d, 0xeb, 0x86, 0x92,
  0xeb, 0x86, 0x93, 0xeb, 0x86, 0x94, 0xeb, 0x86, 0x98, 0xeb, 0x86, 0x9c,
  0xeb, 0x86, 0xa8, 0xeb, 0x87, 0x8c, 0xeb, 0x87, 0x90, 0xeb, 0x87, 0x94,
  0xeb, 0x87, 0x9c, 0xeb, 0x87, 0x9d
};

unsigned char ksx_1001_row_20_converted_to_utf8[] = {
  0xeb, 0x87, 0x9f, 0xeb, 0x87, 0xa8, 0xeb, 0x87, 0xa9, 0xeb, 0x87, 0xac,
  0xeb, 0x87, 0xb0, 0xeb, 0x87, 0xb9, 0xeb, 0x87, 0xbb, 0xeb, 0x87, 0xbd,
  0xeb, 0x88, 0x84, 0xeb, 0x88, 0x85, 0xeb, 0x88, 0x88, 0xeb, 0x88, 0x8b,
  0xeb, 0x88, 0x8c, 0xeb, 0x88, 0x94, 0xeb, 0x88, 0x95, 0xeb, 0x88, 0x97,
  0xeb, 0x88, 0x99, 0xeb, 0x88, 0xa0, 0xeb, 0x88, 0xb4, 0xeb, 0x88, 0xbc,
  0xeb, 0x89, 0x98, 0xeb, 0x89, 0x9c, 0xeb, 0x89, 0xa0, 0xeb, 0x89, 0xa8,
  0xeb, 0x89, 0xa9, 0xeb, 0x89, 0xb4, 0xeb, 0x89, 0xb5, 0xeb, 0x89, 0xbc,
  0xeb, 0x8a, 0x84, 0xeb, 0x8a, 0x85, 0xeb, 0x8a, 0x89, 0xeb, 0x8a, 0x90,
  0xeb, 0x8a, 0x91, 0xeb, 0x8a, 0x94, 0xeb, 0x8a, 0x98, 0xeb, 0x8a, 0x99,
  0xeb, 0x8a, 0x9a, 0xeb, 0x8a, 0xa0, 0xeb, 0x8a, 0xa1, 0xeb, 0x8a, 0xa3,
  0xeb, 0x8a, 0xa5, 0xeb, 0x8a, 0xa6, 0xeb, 0x8a, 0xaa, 0xeb, 0x8a, 0xac,
  0xeb, 0x8a, 0xb0, 0xeb, 0x8a, 0xb4, 0xeb, 0x8b, 0x88, 0xeb, 0x8b, 0x89,
  0xeb, 0x8b, 0x8c, 0xeb, 0x8b, 0x90, 0xeb, 0x8b, 0x92, 0xeb, 0x8b, 0x98,
  0xeb, 0x8b, 0x99, 0xeb, 0x8b, 0x9b, 0xeb, 0x8b, 0x9d, 0xeb, 0x8b, 0xa2,
  0xeb, 0x8b, 0xa4, 0xeb, 0x8b, 0xa5, 0xeb, 0x8b, 0xa6, 0xeb, 0x8b, 0xa8,
  0xeb, 0x8b, 0xab, 0xeb, 0x8b, 0xac, 0xeb, 0x8b, 0xad, 0xeb, 0x8b, 0xae,
  0xeb, 0x8b, 0xaf, 0xeb, 0x8b, 0xb3, 0xeb, 0x8b, 0xb4, 0xeb, 0x8b, 0xb5,
  0xeb, 0x8b, 0xb7, 0xeb, 0x8b, 0xb8, 0xeb, 0x8b, 0xb9, 0xeb, 0x8b, 0xba,
  0xeb, 0x8b, 0xbb, 0xeb, 0x8b, 0xbf, 0xeb, 0x8c, 0x80, 0xeb, 0x8c, 0x81,
  0xeb, 0x8c, 0x84, 0xeb, 0x8c, 0x88, 0xeb, 0x8c, 0x90, 0xeb, 0x8c, 0x91,
  0xeb, 0x8c, 0x93, 0xeb, 0x8c, 0x94, 0xeb, 0x8c, 0x95, 0xeb, 0x8c, 0x9c,
  0xeb, 0x8d, 0x94, 0xeb, 0x8d, 0x95, 0xeb, 0x8d, 0x96, 0xeb, 0x8d, 0x98,
  0xeb, 0x8d, 0x9b, 0xeb, 0x8d, 0x9c, 0xeb, 0x8d, 0x9e, 0xeb, 0x8d, 0x9f,
  0xeb, 0x8d, 0xa4, 0xeb, 0x8d, 0xa5
};

unsigned char ksx_1001_row_21_converted_to_utf8[] = {
  0xeb, 0x8d, 0xa7, 0xeb, 0x8d, 0xa9, 0xeb, 0x8d, 0xab, 0xeb, 0x8d, 0xae,
  0xeb, 0x8d, 0xb0, 0xeb, 0x8d, 0xb1, 0xeb, 0x8d, 0xb4, 0xeb, 0x8d, 0xb8,
  0xeb, 0x8e, 0x80, 0xeb, 0x8e, 0x81, 0xeb, 0x8e, 0x83, 0xeb, 0x8e, 0x84,
  0xeb, 0x8e, 0x85, 0xeb, 0x8e, 0x8c, 0xeb, 0x8e, 0x90, 0xeb, 0x8e, 0x94,
  0xeb, 0x8e, 0xa0, 0xeb, 0x8e, 0xa1, 0xeb, 0x8e, 0xa8, 0xeb, 0x8e, 0xac,
  0xeb, 0x8f, 0x84, 0xeb, 0x8f, 0x85, 0xeb, 0x8f, 0x88, 0xeb, 0x8f, 0x8b,
  0xeb, 0x8f, 0x8c, 0xeb, 0x8f, 0x8e, 0xeb, 0x8f, 0x90, 0xeb, 0x8f, 0x94,
  0xeb, 0x8f, 0x95, 0xeb, 0x8f, 0x97, 0xeb, 0x8f, 0x99, 0xeb, 0x8f, 0x9b,
  0xeb, 0x8f, 0x9d, 0xeb, 0x8f, 0xa0, 0xeb, 0x8f, 0xa4, 0xeb, 0x8f, 0xa8,
  0xeb, 0x8f, 0xbc, 0xeb, 0x90, 0x90, 0xeb, 0x90, 0x98, 0xeb, 0x90, 0x9c,
  0xeb, 0x90, 0xa0, 0xeb, 0x90, 0xa8, 0xeb, 0x90, 0xa9, 0xeb, 0x90, 0xab,
  0xeb, 0x90, 0xb4, 0xeb, 0x91, 0x90, 0xeb, 0x91, 0x91, 0xeb, 0x91, 0x94,
  0xeb, 0x91, 0x98, 0xeb, 0x91, 0xa0, 0xeb, 0x91, 0xa1, 0xeb, 0x91, 0xa3,
  0xeb, 0x91, 0xa5, 0xeb, 0x91, 0xac, 0xeb, 0x92, 0x80, 0xeb, 0x92, 0x88,
  0xeb, 0x92, 0x9d, 0xeb, 0x92, 0xa4, 0xeb, 0x92, 0xa8, 0xeb, 0x92, 0xac,
  0xeb, 0x92, 0xb5, 0xeb, 0x92, 0xb7, 0xeb, 0x92, 0xb9, 0xeb, 0x93, 0x80,
  0xeb, 0x93, 0x84, 0xeb, 0x93, 0x88, 0xeb, 0x93, 0x90, 0xeb, 0x93, 0x95,
  0xeb, 0x93, 0x9c, 0xeb, 0x93, 0x9d, 0xeb, 0x93, 0xa0, 0xeb, 0x93, 0xa3,
  0xeb, 0x93, 0xa4, 0xeb, 0x93, 0xa6, 0xeb, 0x93, 0xac, 0xeb, 0x93, 0xad,
  0xeb, 0x93, 0xaf, 0xeb, 0x93, 0xb1, 0xeb, 0x93, 0xb8, 0xeb, 0x94, 0x94,
  0xeb, 0x94, 0x95, 0xeb, 0x94, 0x98, 0xeb, 0x94, 0x9b, 0xeb, 0x94, 0x9c,
  0xeb, 0x94, 0xa4, 0xeb, 0x94, 0xa5, 0xeb, 0x94, 0xa7, 0xeb, 0x94, 0xa8,
  0xeb, 0x94, 0xa9, 0xeb, 0x94, 0xaa, 0xeb, 0x94, 0xb0, 0xeb, 0x94, 0xb1,
  0xeb, 0x94, 0xb4, 0xeb, 0x94, 0xb8
};

unsigned char ksx_1001_row_22_converted_to_utf8[] = {
  0xeb, 0x95, 0x80, 0xeb, 0x95, 0x81, 0xeb, 0x95, 0x83, 0xeb, 0x95, 0x84,
  0xeb, 0x95, 0x85, 0xeb, 0x95, 0x8b, 0xeb, 0x95, 0x8c, 0xeb, 0x95, 0x8d,
  0xeb, 0x95, 0x90, 0xeb, 0x95, 0x94, 0xeb, 0x95, 0x9c, 0xeb, 0x95, 0x9d,
  0xeb, 0x95, 0x9f, 0xeb, 0x95, 0xa0, 0xeb, 0x95, 0xa1, 0xeb, 0x96, 0xa0,
  0xeb, 0x96, 0xa1, 0xeb, 0x96, 0xa4, 0xeb, 0x96, 0xa8, 0xeb, 0x96, 0xaa,
  0xeb, 0x96, 0xab, 0xeb, 0x96, 0xb0, 0xeb, 0x96, 0xb1, 0xeb, 0x96, 0xb3,
  0xeb, 0x96, 0xb4, 0xeb, 0x96, 0xb5, 0xeb, 0x96, 0xbb, 0xeb, 0x96, 0xbc,
  0xeb, 0x96, 0xbd, 0xeb, 0x97, 0x80, 0xeb, 0x97, 0x84, 0xeb, 0x97, 0x8c,
  0xeb, 0x97, 0x8d, 0xeb, 0x97, 0x8f, 0xeb, 0x97, 0x90, 0xeb, 0x97, 0x91,
  0xeb, 0x97, 0x98, 0xeb, 0x97, 0xac, 0xeb, 0x98, 0x90, 0xeb, 0x98, 0x91,
  0xeb, 0x98, 0x94, 0xeb, 0x98, 0x98, 0xeb, 0x98, 0xa5, 0xeb, 0x98, 0xac,
  0xeb, 0x98, 0xb4, 0xeb, 0x99, 0x88, 0xeb, 0x99, 0xa4, 0xeb, 0x99, 0xa8,
  0xeb, 0x9a, 0x9c, 0xeb, 0x9a, 0x9d, 0xeb, 0x9a, 0xa0, 0xeb, 0x9a, 0xa4,
  0xeb, 0x9a, 0xab, 0xeb, 0x9a, 0xac, 0xeb, 0x9a, 0xb1, 0xeb, 0x9b, 0x94,
  0xeb, 0x9b, 0xb0, 0xeb, 0x9b, 0xb4, 0xeb, 0x9b, 0xb8, 0xeb, 0x9c, 0x80,
  0xeb, 0x9c, 0x81, 0xeb, 0x9c, 0x85, 0xeb, 0x9c, 0xa8, 0xeb, 0x9c, 0xa9,
  0xeb, 0x9c, 0xac, 0xeb, 0x9c, 0xaf, 0xeb, 0x9c, 0xb0, 0xeb, 0x9c, 0xb8,
  0xeb, 0x9c, 0xb9, 0xeb, 0x9c, 0xbb, 0xeb, 0x9d, 0x84, 0xeb, 0x9d, 0x88,
  0xeb, 0x9d, 0x8c, 0xeb, 0x9d, 0x94, 0xeb, 0x9d, 0x95, 0xeb, 0x9d, 0xa0,
  0xeb, 0x9d, 0xa4, 0xeb, 0x9d, 0xa8, 0xeb, 0x9d, 0xb0, 0xeb, 0x9d, 0xb1,
  0xeb, 0x9d, 0xb3, 0xeb, 0x9d, 0xb5, 0xeb, 0x9d, 0xbc, 0xeb, 0x9d, 0xbd,
  0xeb, 0x9e, 0x80, 0xeb, 0x9e, 0x84, 0xeb, 0x9e, 0x8c, 0xeb, 0x9e, 0x8d,
  0xeb, 0x9e, 0x8f, 0xeb, 0x9e, 0x90, 0xeb, 0x9e, 0x91, 0xeb, 0x9e, 0x92,
  0xeb, 0x9e, 0x96, 0xeb, 0x9e, 0x97
};

unsigned char ksx_1001_row_23_converted_to_utf8[] = {
  0xeb, 0x9e, 0x98, 0xeb, 0x9e, 0x99, 0xeb, 0x9e, 0x9c, 0xeb, 0x9e, 0xa0,
  0xeb, 0x9e, 0xa8, 0xeb, 0x9e, 0xa9, 0xeb, 0x9e, 0xab, 0xeb, 0x9e, 0xac,
  0xeb, 0x9e, 0xad, 0xeb, 0x9e, 0xb4, 0xeb, 0x9e, 0xb5, 0xeb, 0x9e, 0xb8,
  0xeb, 0x9f, 0x87, 0xeb, 0x9f, 0x89, 0xeb, 0x9f, 0xac, 0xeb, 0x9f, 0xad,
  0xeb, 0x9f, 0xb0, 0xeb, 0x9f, 0xb4, 0xeb, 0x9f, 0xbc, 0xeb, 0x9f, 0xbd,
  0xeb, 0x9f, 0xbf, 0xeb, 0xa0, 0x80, 0xeb, 0xa0, 0x81, 0xeb, 0xa0, 0x87,
  0xeb, 0xa0, 0x88, 0xeb, 0xa0, 0x89, 0xeb, 0xa0, 0x8c, 0xeb, 0xa0, 0x90,
  0xeb, 0xa0, 0x98, 0xeb, 0xa0, 0x99, 0xeb, 0xa0, 0x9b, 0xeb, 0xa0, 0x9d,
  0xeb, 0xa0, 0xa4, 0xeb, 0xa0, 0xa5, 0xeb, 0xa0, 0xa8, 0xeb, 0xa0, 0xac,
  0xeb, 0xa0, 0xb4, 0xeb, 0xa0, 0xb5, 0xeb, 0xa0, 0xb7, 0xeb, 0xa0, 0xb8,
  0xeb, 0xa0, 0xb9, 0xeb, 0xa1, 0x80, 0xeb, 0xa1, 0x84, 0xeb, 0xa1, 0x91,
  0xeb, 0xa1, 0x93, 0xeb, 0xa1, 0x9c, 0xeb, 0xa1, 0x9d, 0xeb, 0xa1, 0xa0,
  0xeb, 0xa1, 0xa4, 0xeb, 0xa1, 0xac, 0xeb, 0xa1, 0xad, 0xeb, 0xa1, 0xaf,
  0xeb, 0xa1, 0xb1, 0xeb, 0xa1, 0xb8, 0xeb, 0xa1, 0xbc, 0xeb, 0xa2, 0x8d,
  0xeb, 0xa2, 0xa8, 0xeb, 0xa2, 0xb0, 0xeb, 0xa2, 0xb4, 0xeb, 0xa2, 0xb8,
  0xeb, 0xa3, 0x80, 0xeb, 0xa3, 0x81, 0xeb, 0xa3, 0x83, 0xeb, 0xa3, 0x85,
  0xeb, 0xa3, 0x8c, 0xeb, 0xa3, 0x90, 0xeb, 0xa3, 0x94, 0xeb, 0xa3, 0x9d,
  0xeb, 0xa3, 0x9f, 0xeb, 0xa3, 0xa1, 0xeb, 0xa3, 0xa8, 0xeb, 0xa3, 0xa9,
  0xeb, 0xa3, 0xac, 0xeb, 0xa3, 0xb0, 0xeb, 0xa3, 0xb8, 0xeb, 0xa3, 0xb9,
  0xeb, 0xa3, 0xbb, 0xeb, 0xa3, 0xbd, 0xeb, 0xa4, 0x84, 0xeb, 0xa4, 0x98,
  0xeb, 0xa4, 0xa0, 0xeb, 0xa4, 0xbc, 0xeb, 0xa4, 0xbd, 0xeb, 0xa5, 0x80,
  0xeb, 0xa5, 0x84, 0xeb, 0xa5, 0x8c, 0xeb, 0xa5, 0x8f, 0xeb, 0xa5, 0x91,
  0xeb, 0xa5, 0x98, 0xeb, 0xa5, 0x99, 0xeb, 0xa5, 0x9c, 0xeb, 0xa5, 0xa0,
  0xeb, 0xa5, 0xa8, 0xeb, 0xa5, 0xa9
};

unsigned char ksx_1001_row_24_converted_to_utf8[] = {
  0xeb, 0xa5, 0xab, 0xeb, 0xa5, 0xad, 0xeb, 0xa5, 0xb4, 0xeb, 0xa5, 0xb5,
  0xeb, 0xa5, 0xb8, 0xeb, 0xa5, 0xbc, 0xeb, 0xa6, 0x84, 0xeb, 0xa6, 0x85,
  0xeb, 0xa6, 0x87, 0xeb, 0xa6, 0x89, 0xeb, 0xa6, 0x8a, 0xeb, 0xa6, 0x8d,
  0xeb, 0xa6, 0x8e, 0xeb, 0xa6, 0xac, 0xeb, 0xa6, 0xad, 0xeb, 0xa6, 0xb0,
  0xeb, 0xa6, 0xb4, 0xeb, 0xa6, 0xbc, 0xeb, 0xa6, 0xbd, 0xeb, 0xa6, 0xbf,
  0xeb, 0xa7, 0x81, 0xeb, 0xa7, 0x88, 0xeb, 0xa7, 0x89, 0xeb, 0xa7, 0x8c,
  0xeb, 0xa7, 0x8e, 0xeb, 0xa7, 0x8f, 0xeb, 0xa7, 0x90, 0xeb, 0xa7, 0x91,
  0xeb, 0xa7, 0x92, 0xeb, 0xa7, 0x98, 0xeb, 0xa7, 0x99, 0xeb, 0xa7, 0x9b,
  0xeb, 0xa7, 0x9d, 0xeb, 0xa7, 0x9e, 0xeb, 0xa7, 0xa1, 0xeb, 0xa7, 0xa3,
  0xeb, 0xa7, 0xa4, 0xeb, 0xa7, 0xa5, 0xeb, 0xa7, 0xa8, 0xeb, 0xa7, 0xac,
  0xeb, 0xa7, 0xb4, 0xeb, 0xa7, 0xb5, 0xeb, 0xa7, 0xb7, 0xeb, 0xa7, 0xb8,
  0xeb, 0xa7, 0xb9, 0xeb, 0xa7, 0xba, 0xeb, 0xa8, 0x80, 0xeb, 0xa8, 0x81,
  0xeb, 0xa8, 0x88, 0xeb, 0xa8, 0x95, 0xeb, 0xa8, 0xb8, 0xeb, 0xa8, 0xb9,
  0xeb, 0xa8, 0xbc, 0xeb, 0xa9, 0x80, 0xeb, 0xa9, 0x82, 0xeb, 0xa9, 0x88,
  0xeb, 0xa9, 0x89, 0xeb, 0xa9, 0x8b, 0xeb, 0xa9, 0x8d, 0xeb, 0xa9, 0x8e,
  0xeb, 0xa9, 0x93, 0xeb, 0xa9, 0x94, 0xeb, 0xa9, 0x95, 0xeb, 0xa9, 0x98,
  0xeb, 0xa9, 0x9c, 0xeb, 0xa9, 0xa4, 0xeb, 0xa9, 0xa5, 0xeb, 0xa9, 0xa7,
  0xeb, 0xa9, 0xa8, 0xeb, 0xa9, 0xa9, 0xeb, 0xa9, 0xb0, 0xeb, 0xa9, 0xb1,
  0xeb, 0xa9, 0xb4, 0xeb, 0xa9, 0xb8, 0xeb, 0xaa, 0x83, 0xeb, 0xaa, 0x84,
  0xeb, 0xaa, 0x85, 0xeb, 0xaa, 0x87, 0xeb, 0xaa, 0x8c, 0xeb, 0xaa, 0xa8,
  0xeb, 0xaa, 0xa9, 0xeb, 0xaa, 0xab, 0xeb, 0xaa, 0xac, 0xeb, 0xaa, 0xb0,
  0xeb, 0xaa, 0xb2, 0xeb, 0xaa, 0xb8, 0xeb, 0xaa, 0xb9, 0xeb, 0xaa, 0xbb,
  0xeb, 0xaa, 0xbd, 0xeb, 0xab, 0x84, 0xeb, 0xab, 0x88, 0xeb, 0xab, 0x98,
  0xeb, 0xab, 0x99, 0xeb, 0xab, 0xbc
};

unsigned char ksx_1001_row_25_converted_to_utf8[] = {
  0xeb, 0xac, 0x80, 0xeb, 0xac, 0x84, 0xeb, 0xac, 0x8d, 0xeb, 0xac, 0x8f,
  0xeb, 0xac, 0x91, 0xeb, 0xac, 0x98, 0xeb, 0xac, 0x9c, 0xeb, 0xac, 0xa0,
  0xeb, 0xac, 0xa9, 0xeb, 0xac, 0xab, 0xeb, 0xac, 0xb4, 0xeb, 0xac, 0xb5,
  0xeb, 0xac, 0xb6, 0xeb, 0xac, 0xb8, 0xeb, 0xac, 0xbb, 0xeb, 0xac, 0xbc,
  0xeb, 0xac, 0xbd, 0xeb, 0xac, 0xbe, 0xeb, 0xad, 0x84, 0xeb, 0xad, 0x85,
  0xeb, 0xad, 0x87, 0xeb, 0xad, 0x89, 0xeb, 0xad, 0x8d, 0xeb, 0xad, 0x8f,
  0xeb, 0xad, 0x90, 0xeb, 0xad, 0x94, 0xeb, 0xad, 0x98, 0xeb, 0xad, 0xa1,
  0xeb, 0xad, 0xa3, 0xeb, 0xad, 0xac, 0xeb, 0xae, 0x88, 0xeb, 0xae, 0x8c,
  0xeb, 0xae, 0x90, 0xeb, 0xae, 0xa4, 0xeb, 0xae, 0xa8, 0xeb, 0xae, 0xac,
  0xeb, 0xae, 0xb4, 0xeb, 0xae, 0xb7, 0xeb, 0xaf, 0x80, 0xeb, 0xaf, 0x84,
  0xeb, 0xaf, 0x88, 0xeb, 0xaf, 0x90, 0xeb, 0xaf, 0x93, 0xeb, 0xaf, 0xb8,
  0xeb, 0xaf, 0xb9, 0xeb, 0xaf, 0xbc, 0xeb, 0xaf, 0xbf, 0xeb, 0xb0, 0x80,
  0xeb, 0xb0, 0x82, 0xeb, 0xb0, 0x88, 0xeb, 0xb0, 0x89, 0xeb, 0xb0, 0x8b,
  0xeb, 0xb0, 0x8c, 0xeb, 0xb0, 0x8d, 0xeb, 0xb0, 0x8f, 0xeb, 0xb0, 0x91,
  0xeb, 0xb0, 0x94, 0xeb, 0xb0, 0x95, 0xeb, 0xb0, 0x96, 0xeb, 0xb0, 0x97,
  0xeb, 0xb0, 0x98, 0xeb, 0xb0, 0x9b, 0xeb, 0xb0, 0x9c, 0xeb, 0xb0, 0x9d,
  0xeb, 0xb0, 0x9e, 0xeb, 0xb0, 0x9f, 0xeb, 0xb0, 0xa4, 0xeb, 0xb0, 0xa5,
  0xeb, 0xb0, 0xa7, 0xeb, 0xb0, 0xa9, 0xeb, 0xb0, 0xad, 0xeb, 0xb0, 0xb0,
  0xeb, 0xb0, 0xb1, 0xeb, 0xb0, 0xb4, 0xeb, 0xb0, 0xb8, 0xeb, 0xb1, 0x80,
  0xeb, 0xb1, 0x81, 0xeb, 0xb1, 0x83, 0xeb, 0xb1, 0x84, 0xeb, 0xb1, 0x85,
  0xeb, 0xb1, 0x89, 0xeb, 0xb1, 0x8c, 0xeb, 0xb1, 0x8d, 0xeb, 0xb1, 0x90,
  0xeb, 0xb1, 0x9d, 0xeb, 0xb2, 0x84, 0xeb, 0xb2, 0x85, 0xeb, 0xb2, 0x88,
  0xeb, 0xb2, 0x8b, 0xeb, 0xb2, 0x8c, 0xeb, 0xb2, 0x8e, 0xeb, 0xb2, 0x94,
  0xeb, 0xb2, 0x95, 0xeb, 0xb2, 0x97
};

unsigned char ksx_1001_row_26_converted_to_utf8[] = {
  0xeb, 0xb2, 0x99, 0xeb, 0xb2, 0x9a, 0xeb, 0xb2, 0xa0, 0xeb, 0xb2, 0xa1,
  0xeb, 0xb2, 0xa4, 0xeb, 0xb2, 0xa7, 0xeb, 0xb2, 0xa8, 0xeb, 0xb2, 0xb0,
  0xeb, 0xb2, 0xb1, 0xeb, 0xb2, 0xb3, 0xeb, 0xb2, 0xb4, 0xeb, 0xb2, 0xb5,
  0xeb, 0xb2, 0xbc, 0xeb, 0xb2, 0xbd, 0xeb, 0xb3, 0x80, 0xeb, 0xb3, 0x84,
  0xeb, 0xb3, 0x8d, 0xeb, 0xb3, 0x8f, 0xeb, 0xb3, 0x90, 0xeb, 0xb3, 0x91,
  0xeb, 0xb3, 0x95, 0xeb, 0xb3, 0x98, 0xeb, 0xb3, 0x9c, 0xeb, 0xb3, 0xb4,
  0xeb, 0xb3, 0xb5, 0xeb, 0xb3, 0xb6, 0xeb, 0xb3, 0xb8, 0xeb, 0xb3, 0xbc,
  0xeb, 0xb4, 0x84, 0xeb, 0xb4, 0x85, 0xeb, 0xb4, 0x87, 0xeb, 0xb4, 0x89,
  0xeb, 0xb4, 0x90, 0xeb, 0xb4, 0x94, 0xeb, 0xb4, 0xa4, 0xeb, 0xb4, 0xac,
  0xeb, 0xb5, 0x80, 0xeb, 0xb5, 0x88, 0xeb, 0xb5, 0x89, 0xeb, 0xb5, 0x8c,
  0xeb, 0xb5, 0x90, 0xeb, 0xb5, 0x98, 0xeb, 0xb5, 0x99, 0xeb, 0xb5, 0xa4,
  0xeb, 0xb5, 0xa8, 0xeb, 0xb6, 0x80, 0xeb, 0xb6, 0x81, 0xeb, 0xb6, 0x84,
  0xeb, 0xb6, 0x87, 0xeb, 0xb6, 0x88, 0xeb, 0xb6, 0x89, 0xeb, 0xb6, 0x8a,
  0xeb, 0xb6, 0x90, 0xeb, 0xb6, 0x91, 0xeb, 0xb6, 0x93, 0xeb, 0xb6, 0x95,
  0xeb, 0xb6, 0x99, 0xeb, 0xb6, 0x9a, 0xeb, 0xb6, 0x9c, 0xeb, 0xb6, 0xa4,
  0xeb, 0xb6, 0xb0, 0xeb, 0xb6, 0xb8, 0xeb, 0xb7, 0x94, 0xeb, 0xb7, 0x95,
  0xeb, 0xb7, 0x98, 0xeb, 0xb7, 0x9c, 0xeb, 0xb7, 0xa9, 0xeb, 0xb7, 0xb0,
  0xeb, 0xb7, 0xb4, 0xeb, 0xb7, 0xb8, 0xeb, 0xb8, 0x80, 0xeb, 0xb8, 0x83,
  0xeb, 0xb8, 0x85, 0xeb, 0xb8, 0x8c, 0xeb, 0xb8, 0x8d, 0xeb, 0xb8, 0x90,
  0xeb, 0xb8, 0x94, 0xeb, 0xb8, 0x9c, 0xeb, 0xb8, 0x9d, 0xeb, 0xb8, 0x9f,
  0xeb, 0xb9, 0x84, 0xeb, 0xb9, 0x85, 0xeb, 0xb9, 0x88, 0xeb, 0xb9, 0x8c,
  0xeb, 0xb9, 0x8e, 0xeb, 0xb9, 0x94, 0xeb, 0xb9, 0x95, 0xeb, 0xb9, 0x97,
  0xeb, 0xb9, 0x99, 0xeb, 0xb9, 0x9a, 0xeb, 0xb9, 0x9b, 0xeb, 0xb9, 0xa0,
  0xeb, 0xb9, 0xa1, 0xeb, 0xb9, 0xa4
};

unsigned char ksx_1001_row_27_converted_to_utf8[] = {
  0xeb, 0xb9, 0xa8, 0xeb, 0xb9, 0xaa, 0xeb, 0xb9, 0xb0, 0xeb, 0xb9, 0xb1,
  0xeb, 0xb9, 0xb3, 0xeb, 0xb9, 0xb4, 0xeb, 0xb9, 0xb5, 0xeb, 0xb9, 0xbb,
  0xeb, 0xb9, 0xbc, 0xeb, 0xb9, 0xbd, 0xeb, 0xba, 0x80, 0xeb, 0xba, 0x84,
  0xeb, 0xba, 0x8c, 0xeb, 0xba, 0x8d, 0xeb, 0xba, 0x8f, 0xeb, 0xba, 0x90,
  0xeb, 0xba, 0x91, 0xeb, 0xba, 0x98, 0xeb, 0xba, 0x99, 0xeb, 0xba, 0xa8,
  0xeb, 0xbb, 0x90, 0xeb, 0xbb, 0x91, 0xeb, 0xbb, 0x94, 0xeb, 0xbb, 0x97,
  0xeb, 0xbb, 0x98, 0xeb, 0xbb, 0xa0, 0xeb, 0xbb, 0xa3, 0xeb, 0xbb, 0xa4,
  0xeb, 0xbb, 0xa5, 0xeb, 0xbb, 0xac, 0xeb, 0xbc, 0x81, 0xeb, 0xbc, 0x88,
  0xeb, 0xbc, 0x89, 0xeb, 0xbc, 0x98, 0xeb, 0xbc, 0x99, 0xeb, 0xbc, 0x9b,
  0xeb, 0xbc, 0x9c, 0xeb, 0xbc, 0x9d, 0xeb, 0xbd, 0x80, 0xeb, 0xbd, 0x81,
  0xeb, 0xbd, 0x84, 0xeb, 0xbd, 0x88, 0xeb, 0xbd, 0x90, 0xeb, 0xbd, 0x91,
  0xeb, 0xbd, 0x95, 0xeb, 0xbe, 0x94, 0xeb, 0xbe, 0xb0, 0xeb, 0xbf, 0x85,
  0xeb, 0xbf, 0x8c, 0xeb, 0xbf, 0x8d, 0xeb, 0xbf, 0x90, 0xeb, 0xbf, 0x94,
  0xeb, 0xbf, 0x9c, 0xeb, 0xbf, 0x9f, 0xeb, 0xbf, 0xa1, 0xec, 0x80, 0xbc,
  0xec, 0x81, 0x91, 0xec, 0x81, 0x98, 0xec, 0x81, 0x9c, 0xec, 0x81, 0xa0,
  0xec, 0x81, 0xa8, 0xec, 0x81, 0xa9, 0xec, 0x82, 0x90, 0xec, 0x82, 0x91,
  0xec, 0x82, 0x94, 0xec, 0x82, 0x98, 0xec, 0x82, 0xa0, 0xec, 0x82, 0xa1,
  0xec, 0x82, 0xa3, 0xec, 0x82, 0xa5, 0xec, 0x82, 0xac, 0xec, 0x82, 0xad,
  0xec, 0x82, 0xaf, 0xec, 0x82, 0xb0, 0xec, 0x82, 0xb3, 0xec, 0x82, 0xb4,
  0xec, 0x82, 0xb5, 0xec, 0x82, 0xb6, 0xec, 0x82, 0xbc, 0xec, 0x82, 0xbd,
  0xec, 0x82, 0xbf, 0xec, 0x83, 0x80, 0xec, 0x83, 0x81, 0xec, 0x83, 0x85,
  0xec, 0x83, 0x88, 0xec, 0x83, 0x89, 0xec, 0x83, 0x8c, 0xec, 0x83, 0x90,
  0xec, 0x83, 0x98, 0xec, 0x83, 0x99, 0xec, 0x83, 0x9b, 0xec, 0x83, 0x9c,
  0xec, 0x83, 0x9d, 0xec, 0x83, 0xa4
};

unsigned char ksx_1001_row_28_converted_to_utf8[] = {
  0xec, 0x83, 0xa5, 0xec, 0x83, 0xa8, 0xec, 0x83, 0xac, 0xec, 0x83, 0xb4,
  0xec, 0x83, 0xb5, 0xec, 0x83, 0xb7, 0xec, 0x83, 0xb9, 0xec, 0x84, 0x80,
  0xec, 0x84, 0x84, 0xec, 0x84, 0x88, 0xec, 0x84, 0x90, 0xec, 0x84, 0x95,
  0xec, 0x84, 0x9c, 0xec, 0x84, 0x9d, 0xec, 0x84, 0x9e, 0xec, 0x84, 0x9f,
  0xec, 0x84, 0xa0, 0xec, 0x84, 0xa3, 0xec, 0x84, 0xa4, 0xec, 0x84, 0xa6,
  0xec, 0x84, 0xa7, 0xec, 0x84, 0xac, 0xec, 0x84, 0xad, 0xec, 0x84, 0xaf,
  0xec, 0x84, 0xb0, 0xec, 0x84, 0xb1, 0xec, 0x84, 0xb6, 0xec, 0x84, 0xb8,
  0xec, 0x84, 0xb9, 0xec, 0x84, 0xbc, 0xec, 0x85, 0x80, 0xec, 0x85, 0x88,
  0xec, 0x85, 0x89, 0xec, 0x85, 0x8b, 0xec, 0x85, 0x8c, 0xec, 0x85, 0x8d,
  0xec, 0x85, 0x94, 0xec, 0x85, 0x95, 0xec, 0x85, 0x98, 0xec, 0x85, 0x9c,
  0xec, 0x85, 0xa4, 0xec, 0x85, 0xa5, 0xec, 0x85, 0xa7, 0xec, 0x85, 0xa8,
  0xec, 0x85, 0xa9, 0xec, 0x85, 0xb0, 0xec, 0x85, 0xb4, 0xec, 0x85, 0xb8,
  0xec, 0x86, 0x85, 0xec, 0x86, 0x8c, 0xec, 0x86, 0x8d, 0xec, 0x86, 0x8e,
  0xec, 0x86, 0x90, 0xec, 0x86, 0x94, 0xec, 0x86, 0x96, 0xec, 0x86, 0x9c,
  0xec, 0x86, 0x9d, 0xec, 0x86, 0x9f, 0xec, 0x86, 0xa1, 0xec, 0x86, 0xa5,
  0xec, 0x86, 0xa8, 0xec, 0x86, 0xa9, 0xec, 0x86, 0xac, 0xec, 0x86, 0xb0,
  0xec, 0x86, 0xbd, 0xec, 0x87, 0x84, 0xec, 0x87, 0x88, 0xec, 0x87, 0x8c,
  0xec, 0x87, 0x94, 0xec, 0x87, 0x97, 0xec, 0x87, 0x98, 0xec, 0x87, 0xa0,
  0xec, 0x87, 0xa4, 0xec, 0x87, 0xa8, 0xec, 0x87, 0xb0, 0xec, 0x87, 0xb1,
  0xec, 0x87, 0xb3, 0xec, 0x87, 0xbc, 0xec, 0x87, 0xbd, 0xec, 0x88, 0x80,
  0xec, 0x88, 0x84, 0xec, 0x88, 0x8c, 0xec, 0x88, 0x8d, 0xec, 0x88, 0x8f,
  0xec, 0x88, 0x91, 0xec, 0x88, 0x98, 0xec, 0x88, 0x99, 0xec, 0x88, 0x9c,
  0xec, 0x88, 0x9f, 0xec, 0x88, 0xa0, 0xec, 0x88, 0xa8, 0xec, 0x88, 0xa9,
  0xec, 0x88, 0xab, 0xec, 0x88, 0xad
};

unsigned char ksx_1001_row_29_converted_to_utf8[] = {
  0xec, 0x88, 0xaf, 0xec, 0x88, 0xb1, 0xec, 0x88, 0xb2, 0xec, 0x88, 0xb4,
  0xec, 0x89, 0x88, 0xec, 0x89, 0x90, 0xec, 0x89, 0x91, 0xec, 0x89, 0x94,
  0xec, 0x89, 0x98, 0xec, 0x89, 0xa0, 0xec, 0x89, 0xa5, 0xec, 0x89, 0xac,
  0xec, 0x89, 0xad, 0xec, 0x89, 0xb0, 0xec, 0x89, 0xb4, 0xec, 0x89, 0xbc,
  0xec, 0x89, 0xbd, 0xec, 0x89, 0xbf, 0xec, 0x8a, 0x81, 0xec, 0x8a, 0x88,
  0xec, 0x8a, 0x89, 0xec, 0x8a, 0x90, 0xec, 0x8a, 0x98, 0xec, 0x8a, 0x9b,
  0xec, 0x8a, 0x9d, 0xec, 0x8a, 0xa4, 0xec, 0x8a, 0xa5, 0xec, 0x8a, 0xa8,
  0xec, 0x8a, 0xac, 0xec, 0x8a, 0xad, 0xec, 0x8a, 0xb4, 0xec, 0x8a, 0xb5,
  0xec, 0x8a, 0xb7, 0xec, 0x8a, 0xb9, 0xec, 0x8b, 0x9c, 0xec, 0x8b, 0x9d,
  0xec, 0x8b, 0xa0, 0xec, 0x8b, 0xa3, 0xec, 0x8b, 0xa4, 0xec, 0x8b, 0xab,
  0xec, 0x8b, 0xac, 0xec, 0x8b, 0xad, 0xec, 0x8b, 0xaf, 0xec, 0x8b, 0xb1,
  0xec, 0x8b, 0xb6, 0xec, 0x8b, 0xb8, 0xec, 0x8b, 0xb9, 0xec, 0x8b, 0xbb,
  0xec, 0x8b, 0xbc, 0xec, 0x8c, 0x80, 0xec, 0x8c, 0x88, 0xec, 0x8c, 0x89,
  0xec, 0x8c, 0x8c, 0xec, 0x8c, 0x8d, 0xec, 0x8c, 0x93, 0xec, 0x8c, 0x94,
  0xec, 0x8c, 0x95, 0xec, 0x8c, 0x98, 0xec, 0x8c, 0x9c, 0xec, 0x8c, 0xa4,
  0xec, 0x8c, 0xa5, 0xec, 0x8c, 0xa8, 0xec, 0x8c, 0xa9, 0xec, 0x8d, 0x85,
  0xec, 0x8d, 0xa8, 0xec, 0x8d, 0xa9, 0xec, 0x8d, 0xac, 0xec, 0x8d, 0xb0,
  0xec, 0x8d, 0xb2, 0xec, 0x8d, 0xb8, 0xec, 0x8d, 0xb9, 0xec, 0x8d, 0xbc,
  0xec, 0x8d, 0xbd, 0xec, 0x8e, 0x84, 0xec, 0x8e, 0x88, 0xec, 0x8e, 0x8c,
  0xec, 0x8f, 0x80, 0xec, 0x8f, 0x98, 0xec, 0x8f, 0x99, 0xec, 0x8f, 0x9c,
  0xec, 0x8f, 0x9f, 0xec, 0x8f, 0xa0, 0xec, 0x8f, 0xa2, 0xec, 0x8f, 0xa8,
  0xec, 0x8f, 0xa9, 0xec, 0x8f, 0xad, 0xec, 0x8f, 0xb4, 0xec, 0x8f, 0xb5,
  0xec, 0x8f, 0xb8, 0xec, 0x90, 0x88, 0xec, 0x90, 0x90, 0xec, 0x90, 0xa4,
  0xec, 0x90, 0xac, 0xec, 0x90, 0xb0
};

unsigned char ksx_1001_row_30_converted_to_utf8[] = {
  0xec, 0x90, 0xb4, 0xec, 0x90, 0xbc, 0xec, 0x90, 0xbd, 0xec, 0x91, 0x88,
  0xec, 0x91, 0xa4, 0xec, 0x91, 0xa5, 0xec, 0x91, 0xa8, 0xec, 0x91, 0xac,
  0xec, 0x91, 0xb4, 0xec, 0x91, 0xb5, 0xec, 0x91, 0xb9, 0xec, 0x92, 0x80,
  0xec, 0x92, 0x94, 0xec, 0x92, 0x9c, 0xec, 0x92, 0xb8, 0xec, 0x92, 0xbc,
  0xec, 0x93, 0xa9, 0xec, 0x93, 0xb0, 0xec, 0x93, 0xb1, 0xec, 0x93, 0xb4,
  0xec, 0x93, 0xb8, 0xec, 0x93, 0xba, 0xec, 0x93, 0xbf, 0xec, 0x94, 0x80,
  0xec, 0x94, 0x81, 0xec, 0x94, 0x8c, 0xec, 0x94, 0x90, 0xec, 0x94, 0x94,
  0xec, 0x94, 0x9c, 0xec, 0x94, 0xa8, 0xec, 0x94, 0xa9, 0xec, 0x94, 0xac,
  0xec, 0x94, 0xb0, 0xec, 0x94, 0xb8, 0xec, 0x94, 0xb9, 0xec, 0x94, 0xbb,
  0xec, 0x94, 0xbd, 0xec, 0x95, 0x84, 0xec, 0x95, 0x85, 0xec, 0x95, 0x88,
  0xec, 0x95, 0x89, 0xec, 0x95, 0x8a, 0xec, 0x95, 0x8c, 0xec, 0x95, 0x8d,
  0xec, 0x95, 0x8e, 0xec, 0x95, 0x93, 0xec, 0x95, 0x94, 0xec, 0x95, 0x95,
  0xec, 0x95, 0x97, 0xec, 0x95, 0x98, 0xec, 0x95, 0x99, 0xec, 0x95, 0x9d,
  0xec, 0x95, 0x9e, 0xec, 0x95, 0xa0, 0xec, 0x95, 0xa1, 0xec, 0x95, 0xa4,
  0xec, 0x95, 0xa8, 0xec, 0x95, 0xb0, 0xec, 0x95, 0xb1, 0xec, 0x95, 0xb3,
  0xec, 0x95, 0xb4, 0xec, 0x95, 0xb5, 0xec, 0x95, 0xbc, 0xec, 0x95, 0xbd,
  0xec, 0x96, 0x80, 0xec, 0x96, 0x84, 0xec, 0x96, 0x87, 0xec, 0x96, 0x8c,
  0xec, 0x96, 0x8d, 0xec, 0x96, 0x8f, 0xec, 0x96, 0x91, 0xec, 0x96, 0x95,
  0xec, 0x96, 0x97, 0xec, 0x96, 0x98, 0xec, 0x96, 0x9c, 0xec, 0x96, 0xa0,
  0xec, 0x96, 0xa9, 0xec, 0x96, 0xb4, 0xec, 0x96, 0xb5, 0xec, 0x96, 0xb8,
  0xec, 0x96, 0xb9, 0xec, 0x96, 0xbb, 0xec, 0x96, 0xbc, 0xec, 0x96, 0xbd,
  0xec, 0x96, 0xbe, 0xec, 0x97, 0x84, 0xec, 0x97, 0x85, 0xec, 0x97, 0x86,
  0xec, 0x97, 0x87, 0xec, 0x97, 0x88, 0xec, 0x97, 0x89, 0xec, 0x97, 0x8a,
  0xec, 0x97, 0x8c, 0xec, 0x97, 0x8e
};

unsigned char ksx_1001_row_31_converted_to_utf8[] = {
  0xec, 0x97, 0x90, 0xec, 0x97, 0x91, 0xec, 0x97, 0x94, 0xec, 0x97, 0x98,
  0xec, 0x97, 0xa0, 0xec, 0x97, 0xa1, 0xec, 0x97, 0xa3, 0xec, 0x97, 0xa5,
  0xec, 0x97, 0xac, 0xec, 0x97, 0xad, 0xec, 0x97, 0xae, 0xec, 0x97, 0xb0,
  0xec, 0x97, 0xb4, 0xec, 0x97, 0xb6, 0xec, 0x97, 0xb7, 0xec, 0x97, 0xbc,
  0xec, 0x97, 0xbd, 0xec, 0x97, 0xbe, 0xec, 0x97, 0xbf, 0xec, 0x98, 0x80,
  0xec, 0x98, 0x81, 0xec, 0x98, 0x85, 0xec, 0x98, 0x86, 0xec, 0x98, 0x87,
  0xec, 0x98, 0x88, 0xec, 0x98, 0x8c, 0xec, 0x98, 0x90, 0xec, 0x98, 0x98,
  0xec, 0x98, 0x99, 0xec, 0x98, 0x9b, 0xec, 0x98, 0x9c, 0xec, 0x98, 0xa4,
  0xec, 0x98, 0xa5, 0xec, 0x98, 0xa8, 0xec, 0x98, 0xac, 0xec, 0x98, 0xad,
  0xec, 0x98, 0xae, 0xec, 0x98, 0xb0, 0xec, 0x98, 0xb3, 0xec, 0x98, 0xb4,
  0xec, 0x98, 0xb5, 0xec, 0x98, 0xb7, 0xec, 0x98, 0xb9, 0xec, 0x98, 0xbb,
  0xec, 0x99, 0x80, 0xec, 0x99, 0x81, 0xec, 0x99, 0x84, 0xec, 0x99, 0x88,
  0xec, 0x99, 0x90, 0xec, 0x99, 0x91, 0xec, 0x99, 0x93, 0xec, 0x99, 0x94,
  0xec, 0x99, 0x95, 0xec, 0x99, 0x9c, 0xec, 0x99, 0x9d, 0xec, 0x99, 0xa0,
  0xec, 0x99, 0xac, 0xec, 0x99, 0xaf, 0xec, 0x99, 0xb1, 0xec, 0x99, 0xb8,
  0xec, 0x99, 0xb9, 0xec, 0x99, 0xbc, 0xec, 0x9a, 0x80, 0xec, 0x9a, 0x88,
  0xec, 0x9a, 0x89, 0xec, 0x9a, 0x8b, 0xec, 0x9a, 0x8d, 0xec, 0x9a, 0x94,
  0xec, 0x9a, 0x95, 0xec, 0x9a, 0x98, 0xec, 0x9a, 0x9c, 0xec, 0x9a, 0xa4,
  0xec, 0x9a, 0xa5, 0xec, 0x9a, 0xa7, 0xec, 0x9a, 0xa9, 0xec, 0x9a, 0xb0,
  0xec, 0x9a, 0xb1, 0xec, 0x9a, 0xb4, 0xec, 0x9a, 0xb8, 0xec, 0x9a, 0xb9,
  0xec, 0x9a, 0xba, 0xec, 0x9b, 0x80, 0xec, 0x9b, 0x81, 0xec, 0x9b, 0x83,
  0xec, 0x9b, 0x85, 0xec, 0x9b, 0x8c, 0xec, 0x9b, 0x8d, 0xec, 0x9b, 0x90,
  0xec, 0x9b, 0x94, 0xec, 0x9b, 0x9c, 0xec, 0x9b, 0x9d, 0xec, 0x9b, 0xa0,
  0xec, 0x9b, 0xa1, 0xec, 0x9b, 0xa8
};

unsigned char ksx_1001_row_32_converted_to_utf8[] = {
  0xec, 0x9b, 0xa9, 0xec, 0x9b, 0xac, 0xec, 0x9b, 0xb0, 0xec, 0x9b, 0xb8,
  0xec, 0x9b, 0xb9, 0xec, 0x9b, 0xbd, 0xec, 0x9c, 0x84, 0xec, 0x9c, 0x85,
  0xec, 0x9c, 0x88, 0xec, 0x9c, 0x8c, 0xec, 0x9c, 0x94, 0xec, 0x9c, 0x95,
  0xec, 0x9c, 0x97, 0xec, 0x9c, 0x99, 0xec, 0x9c, 0xa0, 0xec, 0x9c, 0xa1,
  0xec, 0x9c, 0xa4, 0xec, 0x9c, 0xa8, 0xec, 0x9c, 0xb0, 0xec, 0x9c, 0xb1,
  0xec, 0x9c, 0xb3, 0xec, 0x9c, 0xb5, 0xec, 0x9c, 0xb7, 0xec, 0x9c, 0xbc,
  0xec, 0x9c, 0xbd, 0xec, 0x9d, 0x80, 0xec, 0x9d, 0x84, 0xec, 0x9d, 0x8a,
  0xec, 0x9d, 0x8c, 0xec, 0x9d, 0x8d, 0xec, 0x9d, 0x8f, 0xec, 0x9d, 0x91,
  0xec, 0x9d, 0x92, 0xec, 0x9d, 0x93, 0xec, 0x9d, 0x94, 0xec, 0x9d, 0x95,
  0xec, 0x9d, 0x96, 0xec, 0x9d, 0x97, 0xec, 0x9d, 0x98, 0xec, 0x9d, 0x9c,
  0xec, 0x9d, 0xa0, 0xec, 0x9d, 0xa8, 0xec, 0x9d, 0xab, 0xec, 0x9d, 0xb4,
  0xec, 0x9d, 0xb5, 0xec, 0x9d, 0xb8, 0xec, 0x9d, 0xbc, 0xec, 0x9d, 0xbd,
  0xec, 0x9d, 0xbe, 0xec, 0x9e, 0x83, 0xec, 0x9e, 0x84, 0xec, 0x9e, 0x85,
  0xec, 0x9e, 0x87, 0xec, 0x9e, 0x88, 0xec, 0x9e, 0x89, 0xec, 0x9e, 0x8a,
  0xec, 0x9e, 0x8e, 0xec, 0x9e, 0x90, 0xec, 0x9e, 0x91, 0xec, 0x9e, 0x94,
  0xec, 0x9e, 0x96, 0xec, 0x9e, 0x97, 0xec, 0x9e, 0x98, 0xec, 0x9e, 0x9a,
  0xec, 0x9e, 0xa0, 0xec, 0x9e, 0xa1, 0xec, 0x9e, 0xa3, 0xec, 0x9e, 0xa4,
  0xec, 0x9e, 0xa5, 0xec, 0x9e, 0xa6, 0xec, 0x9e, 0xac, 0xec, 0x9e, 0xad,
  0xec, 0x9e, 0xb0, 0xec, 0x9e, 0xb4, 0xec, 0x9e, 0xbc, 0xec, 0x9e, 0xbd,
  0xec, 0x9e, 0xbf, 0xec, 0x9f, 0x80, 0xec, 0x9f, 0x81, 0xec, 0x9f, 0x88,
  0xec, 0x9f, 0x89, 0xec, 0x9f, 0x8c, 0xec, 0x9f, 0x8e, 0xec, 0x9f, 0x90,
  0xec, 0x9f, 0x98, 0xec, 0x9f, 0x9d, 0xec, 0x9f, 0xa4, 0xec, 0x9f, 0xa8,
  0xec, 0x9f, 0xac, 0xec, 0xa0, 0x80, 0xec, 0xa0, 0x81, 0xec, 0xa0, 0x84,
  0xec, 0xa0, 0x88, 0xec, 0xa0, 0x8a
};

unsigned char ksx_1001_row_33_converted_to_utf8[] = {
  0xec, 0xa0, 0x90, 0xec, 0xa0, 0x91, 0xec, 0xa0, 0x93, 0xec, 0xa0, 0x95,
  0xec, 0xa0, 0x96, 0xec, 0xa0, 0x9c, 0xec, 0xa0, 0x9d, 0xec, 0xa0, 0xa0,
  0xec, 0xa0, 0xa4, 0xec, 0xa0, 0xac, 0xec, 0xa0, 0xad, 0xec, 0xa0, 0xaf,
  0xec, 0xa0, 0xb1, 0xec, 0xa0, 0xb8, 0xec, 0xa0, 0xbc, 0xec, 0xa1, 0x80,
  0xec, 0xa1, 0x88, 0xec, 0xa1, 0x89, 0xec, 0xa1, 0x8c, 0xec, 0xa1, 0x8d,
  0xec, 0xa1, 0x94, 0xec, 0xa1, 0xb0, 0xec, 0xa1, 0xb1, 0xec, 0xa1, 0xb4,
  0xec, 0xa1, 0xb8, 0xec, 0xa1, 0xba, 0xec, 0xa2, 0x80, 0xec, 0xa2, 0x81,
  0xec, 0xa2, 0x83, 0xec, 0xa2, 0x85, 0xec, 0xa2, 0x86, 0xec, 0xa2, 0x87,
  0xec, 0xa2, 0x8b, 0xec, 0xa2, 0x8c, 0xec, 0xa2, 0x8d, 0xec, 0xa2, 0x94,
  0xec, 0xa2, 0x9d, 0xec, 0xa2, 0x9f, 0xec, 0xa2, 0xa1, 0xec, 0xa2, 0xa8,
  0xec, 0xa2, 0xbc, 0xec, 0xa2, 0xbd, 0xec, 0xa3, 0x84, 0xec, 0xa3, 0x88,
  0xec, 0xa3, 0x8c, 0xec, 0xa3, 0x94, 0xec, 0xa3, 0x95, 0xec, 0xa3, 0x97,
  0xec, 0xa3, 0x99, 0xec, 0xa3, 0xa0, 0xec, 0xa3, 0xa1, 0xec, 0xa3, 0xa4,
  0xec, 0xa3, 0xb5, 0xec, 0xa3, 0xbc, 0xec, 0xa3, 0xbd, 0xec, 0xa4, 0x80,
  0xec, 0xa4, 0x84, 0xec, 0xa4, 0x85, 0xec, 0xa4, 0x86, 0xec, 0xa4, 0x8c,
  0xec, 0xa4, 0x8d, 0xec, 0xa4, 0x8f, 0xec, 0xa4, 0x91, 0xec, 0xa4, 0x98,
  0xec, 0xa4, 0xac, 0xec, 0xa4, 0xb4, 0xec, 0xa5, 0x90, 0xec, 0xa5, 0x91,
  0xec, 0xa5, 0x94, 0xec, 0xa5, 0x98, 0xec, 0xa5, 0xa0, 0xec, 0xa5, 0xa1,
  0xec, 0xa5, 0xa3, 0xec, 0xa5, 0xac, 0xec, 0xa5, 0xb0, 0xec, 0xa5, 0xb4,
  0xec, 0xa5, 0xbc, 0xec, 0xa6, 0x88, 0xec, 0xa6, 0x89, 0xec, 0xa6, 0x8c,
  0xec, 0xa6, 0x90, 0xec, 0xa6, 0x98, 0xec, 0xa6, 0x99, 0xec, 0xa6, 0x9b,
  0xec, 0xa6, 0x9d, 0xec, 0xa7, 0x80, 0xec, 0xa7, 0x81, 0xec, 0xa7, 0x84,
  0xec, 0xa7, 0x87, 0xec, 0xa7, 0x88, 0xec, 0xa7, 0x8a, 0xec, 0xa7, 0x90,
  0xec, 0xa7, 0x91, 0xec, 0xa7, 0x93
};

unsigned char ksx_1001_row_34_converted_to_utf8[] = {
  0xec, 0xa7, 0x95, 0xec, 0xa7, 0x96, 0xec, 0xa7, 0x99, 0xec, 0xa7, 0x9a,
  0xec, 0xa7, 0x9c, 0xec, 0xa7, 0x9d, 0xec, 0xa7, 0xa0, 0xec, 0xa7, 0xa2,
  0xec, 0xa7, 0xa4, 0xec, 0xa7, 0xa7, 0xec, 0xa7, 0xac, 0xec, 0xa7, 0xad,
  0xec, 0xa7, 0xaf, 0xec, 0xa7, 0xb0, 0xec, 0xa7, 0xb1, 0xec, 0xa7, 0xb8,
  0xec, 0xa7, 0xb9, 0xec, 0xa7, 0xbc, 0xec, 0xa8, 0x80, 0xec, 0xa8, 0x88,
  0xec, 0xa8, 0x89, 0xec, 0xa8, 0x8b, 0xec, 0xa8, 0x8c, 0xec, 0xa8, 0x8d,
  0xec, 0xa8, 0x94, 0xec, 0xa8, 0x98, 0xec, 0xa8, 0xa9, 0xec, 0xa9, 0x8c,
  0xec, 0xa9, 0x8d, 0xec, 0xa9, 0x90, 0xec, 0xa9, 0x94, 0xec, 0xa9, 0x9c,
  0xec, 0xa9, 0x9d, 0xec, 0xa9, 0x9f, 0xec, 0xa9, 0xa0, 0xec, 0xa9, 0xa1,
  0xec, 0xa9, 0xa8, 0xec, 0xa9, 0xbd, 0xec, 0xaa, 0x84, 0xec, 0xaa, 0x98,
  0xec, 0xaa, 0xbc, 0xec, 0xaa, 0xbd, 0xec, 0xab, 0x80, 0xec, 0xab, 0x84,
  0xec, 0xab, 0x8c, 0xec, 0xab, 0x8d, 0xec, 0xab, 0x8f, 0xec, 0xab, 0x91,
  0xec, 0xab, 0x93, 0xec, 0xab, 0x98, 0xec, 0xab, 0x99, 0xec, 0xab, 0xa0,
  0xec, 0xab, 0xac, 0xec, 0xab, 0xb4, 0xec, 0xac, 0x88, 0xec, 0xac, 0x90,
  0xec, 0xac, 0x94, 0xec, 0xac, 0x98, 0xec, 0xac, 0xa0, 0xec, 0xac, 0xa1,
  0xec, 0xad, 0x81, 0xec, 0xad, 0x88, 0xec, 0xad, 0x89, 0xec, 0xad, 0x8c,
  0xec, 0xad, 0x90, 0xec, 0xad, 0x98, 0xec, 0xad, 0x99, 0xec, 0xad, 0x9d,
  0xec, 0xad, 0xa4, 0xec, 0xad, 0xb8, 0xec, 0xad, 0xb9, 0xec, 0xae, 0x9c,
  0xec, 0xae, 0xb8, 0xec, 0xaf, 0x94, 0xec, 0xaf, 0xa4, 0xec, 0xaf, 0xa7,
  0xec, 0xaf, 0xa9, 0xec, 0xb0, 0x8c, 0xec, 0xb0, 0x8d, 0xec, 0xb0, 0x90,
  0xec, 0xb0, 0x94, 0xec, 0xb0, 0x9c, 0xec, 0xb0, 0x9d, 0xec, 0xb0, 0xa1,
  0xec, 0xb0, 0xa2, 0xec, 0xb0, 0xa7, 0xec, 0xb0, 0xa8, 0xec, 0xb0, 0xa9,
  0xec, 0xb0, 0xac, 0xec, 0xb0, 0xae, 0xec, 0xb0, 0xb0, 0xec, 0xb0, 0xb8,
  0xec, 0xb0, 0xb9, 0xec, 0xb0, 0xbb
};

unsigned char ksx_1001_row_35_converted_to_utf8[] = {
  0xec, 0xb0, 0xbc, 0xec, 0xb0, 0xbd, 0xec, 0xb0, 0xbe, 0xec, 0xb1, 0x84,
  0xec, 0xb1, 0x85, 0xec, 0xb1, 0x88, 0xec, 0xb1, 0x8c, 0xec, 0xb1, 0x94,
  0xec, 0xb1, 0x95, 0xec, 0xb1, 0x97, 0xec, 0xb1, 0x98, 0xec, 0xb1, 0x99,
  0xec, 0xb1, 0xa0, 0xec, 0xb1, 0xa4, 0xec, 0xb1, 0xa6, 0xec, 0xb1, 0xa8,
  0xec, 0xb1, 0xb0, 0xec, 0xb1, 0xb5, 0xec, 0xb2, 0x98, 0xec, 0xb2, 0x99,
  0xec, 0xb2, 0x9c, 0xec, 0xb2, 0xa0, 0xec, 0xb2, 0xa8, 0xec, 0xb2, 0xa9,
  0xec, 0xb2, 0xab, 0xec, 0xb2, 0xac, 0xec, 0xb2, 0xad, 0xec, 0xb2, 0xb4,
  0xec, 0xb2, 0xb5, 0xec, 0xb2, 0xb8, 0xec, 0xb2, 0xbc, 0xec, 0xb3, 0x84,
  0xec, 0xb3, 0x85, 0xec, 0xb3, 0x87, 0xec, 0xb3, 0x89, 0xec, 0xb3, 0x90,
  0xec, 0xb3, 0x94, 0xec, 0xb3, 0xa4, 0xec, 0xb3, 0xac, 0xec, 0xb3, 0xb0,
  0xec, 0xb4, 0x81, 0xec, 0xb4, 0x88, 0xec, 0xb4, 0x89, 0xec, 0xb4, 0x8c,
  0xec, 0xb4, 0x90, 0xec, 0xb4, 0x98, 0xec, 0xb4, 0x99, 0xec, 0xb4, 0x9b,
  0xec, 0xb4, 0x9d, 0xec, 0xb4, 0xa4, 0xec, 0xb4, 0xa8, 0xec, 0xb4, 0xac,
  0xec, 0xb4, 0xb9, 0xec, 0xb5, 0x9c, 0xec, 0xb5, 0xa0, 0xec, 0xb5, 0xa4,
  0xec, 0xb5, 0xac, 0xec, 0xb5, 0xad, 0xec, 0xb5, 0xaf, 0xec, 0xb5, 0xb1,
  0xec, 0xb5, 0xb8, 0xec, 0xb6, 0x88, 0xec, 0xb6, 0x94, 0xec, 0xb6, 0x95,
  0xec, 0xb6, 0x98, 0xec, 0xb6, 0x9c, 0xec, 0xb6, 0xa4, 0xec, 0xb6, 0xa5,
  0xec, 0xb6, 0xa7, 0xec, 0xb6, 0xa9, 0xec, 0xb6, 0xb0, 0xec, 0xb7, 0x84,
  0xec, 0xb7, 0x8c, 0xec, 0xb7, 0x90, 0xec, 0xb7, 0xa8, 0xec, 0xb7, 0xac,
  0xec, 0xb7, 0xb0, 0xec, 0xb7, 0xb8, 0xec, 0xb7, 0xb9, 0xec, 0xb7, 0xbb,
  0xec, 0xb7, 0xbd, 0xec, 0xb8, 0x84, 0xec, 0xb8, 0x88, 0xec, 0xb8, 0x8c,
  0xec, 0xb8, 0x94, 0xec, 0xb8, 0x99, 0xec, 0xb8, 0xa0, 0xec, 0xb8, 0xa1,
  0xec, 0xb8, 0xa4, 0xec, 0xb8, 0xa8, 0xec, 0xb8, 0xb0, 0xec, 0xb8, 0xb1,
  0xec, 0xb8, 0xb3, 0xec, 0xb8, 0xb5
};

unsigned char ksx_1001_row_36_converted_to_utf8[] = {
  0xec, 0xb9, 0x98, 0xec, 0xb9, 0x99, 0xec, 0xb9, 0x9c, 0xec, 0xb9, 0x9f,
  0xec, 0xb9, 0xa0, 0xec, 0xb9, 0xa1, 0xec, 0xb9, 0xa8, 0xec, 0xb9, 0xa9,
  0xec, 0xb9, 0xab, 0xec, 0xb9, 0xad, 0xec, 0xb9, 0xb4, 0xec, 0xb9, 0xb5,
  0xec, 0xb9, 0xb8, 0xec, 0xb9, 0xbc, 0xec, 0xba, 0x84, 0xec, 0xba, 0x85,
  0xec, 0xba, 0x87, 0xec, 0xba, 0x89, 0xec, 0xba, 0x90, 0xec, 0xba, 0x91,
  0xec, 0xba, 0x94, 0xec, 0xba, 0x98, 0xec, 0xba, 0xa0, 0xec, 0xba, 0xa1,
  0xec, 0xba, 0xa3, 0xec, 0xba, 0xa4, 0xec, 0xba, 0xa5, 0xec, 0xba, 0xac,
  0xec, 0xba, 0xad, 0xec, 0xbb, 0x81, 0xec, 0xbb, 0xa4, 0xec, 0xbb, 0xa5,
  0xec, 0xbb, 0xa8, 0xec, 0xbb, 0xab, 0xec, 0xbb, 0xac, 0xec, 0xbb, 0xb4,
  0xec, 0xbb, 0xb5, 0xec, 0xbb, 0xb7, 0xec, 0xbb, 0xb8, 0xec, 0xbb, 0xb9,
  0xec, 0xbc, 0x80, 0xec, 0xbc, 0x81, 0xec, 0xbc, 0x84, 0xec, 0xbc, 0x88,
  0xec, 0xbc, 0x90, 0xec, 0xbc, 0x91, 0xec, 0xbc, 0x93, 0xec, 0xbc, 0x95,
  0xec, 0xbc, 0x9c, 0xec, 0xbc, 0xa0, 0xec, 0xbc, 0xa4, 0xec, 0xbc, 0xac,
  0xec, 0xbc, 0xad, 0xec, 0xbc, 0xaf, 0xec, 0xbc, 0xb0, 0xec, 0xbc, 0xb1,
  0xec, 0xbc, 0xb8, 0xec, 0xbd, 0x94, 0xec, 0xbd, 0x95, 0xec, 0xbd, 0x98,
  0xec, 0xbd, 0x9c, 0xec, 0xbd, 0xa4, 0xec, 0xbd, 0xa5, 0xec, 0xbd, 0xa7,
  0xec, 0xbd, 0xa9, 0xec, 0xbd, 0xb0, 0xec, 0xbd, 0xb1, 0xec, 0xbd, 0xb4,
  0xec, 0xbd, 0xb8, 0xec, 0xbe, 0x80, 0xec, 0xbe, 0x85, 0xec, 0xbe, 0x8c,
  0xec, 0xbe, 0xa1, 0xec, 0xbe, 0xa8, 0xec, 0xbe, 0xb0, 0xec, 0xbf, 0x84,
  0xec, 0xbf, 0xa0, 0xec, 0xbf, 0xa1, 0xec, 0xbf, 0xa4, 0xec, 0xbf, 0xa8,
  0xec, 0xbf, 0xb0, 0xec, 0xbf, 0xb1, 0xec, 0xbf, 0xb3, 0xec, 0xbf, 0xb5,
  0xec, 0xbf, 0xbc, 0xed, 0x80, 0x80, 0xed, 0x80, 0x84, 0xed, 0x80, 0x91,
  0xed, 0x80, 0x98, 0xed, 0x80, 0xad, 0xed, 0x80, 0xb4, 0xed, 0x80, 0xb5,
  0xed, 0x80, 0xb8, 0xed, 0x80, 0xbc
};

unsigned char ksx_1001_row_37_converted_to_utf8[] = {
  0xed, 0x81, 0x84, 0xed, 0x81, 0x85, 0xed, 0x81, 0x87, 0xed, 0x81, 0x89,
  0xed, 0x81, 0x90, 0xed, 0x81, 0x94, 0xed, 0x81, 0x98, 0xed, 0x81, 0xa0,
  0xed, 0x81, 0xac, 0xed, 0x81, 0xad, 0xed, 0x81, 0xb0, 0xed, 0x81, 0xb4,
  0xed, 0x81, 0xbc, 0xed, 0x81, 0xbd, 0xed, 0x82, 0x81, 0xed, 0x82, 0xa4,
  0xed, 0x82, 0xa5, 0xed, 0x82, 0xa8, 0xed, 0x82, 0xac, 0xed, 0x82, 0xb4,
  0xed, 0x82, 0xb5, 0xed, 0x82, 0xb7, 0xed, 0x82, 0xb9, 0xed, 0x83, 0x80,
  0xed, 0x83, 0x81, 0xed, 0x83, 0x84, 0xed, 0x83, 0x88, 0xed, 0x83, 0x89,
  0xed, 0x83, 0x90, 0xed, 0x83, 0x91, 0xed, 0x83, 0x93, 0xed, 0x83, 0x94,
  0xed, 0x83, 0x95, 0xed, 0x83, 0x9c, 0xed, 0x83, 0x9d, 0xed, 0x83, 0xa0,
  0xed, 0x83, 0xa4, 0xed, 0x83, 0xac, 0xed, 0x83, 0xad, 0xed, 0x83, 0xaf,
  0xed, 0x83, 0xb0, 0xed, 0x83, 0xb1, 0xed, 0x83, 0xb8, 0xed, 0x84, 0x8d,
  0xed, 0x84, 0xb0, 0xed, 0x84, 0xb1, 0xed, 0x84, 0xb4, 0xed, 0x84, 0xb8,
  0xed, 0x84, 0xba, 0xed, 0x85, 0x80, 0xed, 0x85, 0x81, 0xed, 0x85, 0x83,
  0xed, 0x85, 0x84, 0xed, 0x85, 0x85, 0xed, 0x85, 0x8c, 0xed, 0x85, 0x8d,
  0xed, 0x85, 0x90, 0xed, 0x85, 0x94, 0xed, 0x85, 0x9c, 0xed, 0x85, 0x9d,
  0xed, 0x85, 0x9f, 0xed, 0x85, 0xa1, 0xed, 0x85, 0xa8, 0xed, 0x85, 0xac,
  0xed, 0x85, 0xbc, 0xed, 0x86, 0x84, 0xed, 0x86, 0x88, 0xed, 0x86, 0xa0,
  0xed, 0x86, 0xa1, 0xed, 0x86, 0xa4, 0xed, 0x86, 0xa8, 0xed, 0x86, 0xb0,
  0xed, 0x86, 0xb1, 0xed, 0x86, 0xb3, 0xed, 0x86, 0xb5, 0xed, 0x86, 0xba,
  0xed, 0x86, 0xbc, 0xed, 0x87, 0x80, 0xed, 0x87, 0x98, 0xed, 0x87, 0xb4,
  0xed, 0x87, 0xb8, 0xed, 0x88, 0x87, 0xed, 0x88, 0x89, 0xed, 0x88, 0x90,
  0xed, 0x88, 0xac, 0xed, 0x88, 0xad, 0xed, 0x88, 0xb0, 0xed, 0x88, 0xb4,
  0xed, 0x88, 0xbc, 0xed, 0x88, 0xbd, 0xed, 0x88, 0xbf, 0xed, 0x89, 0x81,
  0xed, 0x89, 0x88, 0xed, 0x89, 0x9c
};

unsigned char ksx_1001_row_38_converted_to_utf8[] = {
  0xed, 0x89, 0xa4, 0xed, 0x8a, 0x80, 0xed, 0x8a, 0x81, 0xed, 0x8a, 0x84,
  0xed, 0x8a, 0x88, 0xed, 0x8a, 0x90, 0xed, 0x8a, 0x91, 0xed, 0x8a, 0x95,
  0xed, 0x8a, 0x9c, 0xed, 0x8a, 0xa0, 0xed, 0x8a, 0xa4, 0xed, 0x8a, 0xac,
  0xed, 0x8a, 0xb1, 0xed, 0x8a, 0xb8, 0xed, 0x8a, 0xb9, 0xed, 0x8a, 0xbc,
  0xed, 0x8a, 0xbf, 0xed, 0x8b, 0x80, 0xed, 0x8b, 0x82, 0xed, 0x8b, 0x88,
  0xed, 0x8b, 0x89, 0xed, 0x8b, 0x8b, 0xed, 0x8b, 0x94, 0xed, 0x8b, 0x98,
  0xed, 0x8b, 0x9c, 0xed, 0x8b, 0xa4, 0xed, 0x8b, 0xa5, 0xed, 0x8b, 0xb0,
  0xed, 0x8b, 0xb1, 0xed, 0x8b, 0xb4, 0xed, 0x8b, 0xb8, 0xed, 0x8c, 0x80,
  0xed, 0x8c, 0x81, 0xed, 0x8c, 0x83, 0xed, 0x8c, 0x85, 0xed, 0x8c, 0x8c,
  0xed, 0x8c, 0x8d, 0xed, 0x8c, 0x8e, 0xed, 0x8c, 0x90, 0xed, 0x8c, 0x94,
  0xed, 0x8c, 0x96, 0xed, 0x8c, 0x9c, 0xed, 0x8c, 0x9d, 0xed, 0x8c, 0x9f,
  0xed, 0x8c, 0xa0, 0xed, 0x8c, 0xa1, 0xed, 0x8c, 0xa5, 0xed, 0x8c, 0xa8,
  0xed, 0x8c, 0xa9, 0xed, 0x8c, 0xac, 0xed, 0x8c, 0xb0, 0xed, 0x8c, 0xb8,
  0xed, 0x8c, 0xb9, 0xed, 0x8c, 0xbb, 0xed, 0x8c, 0xbc, 0xed, 0x8c, 0xbd,
  0xed, 0x8d, 0x84, 0xed, 0x8d, 0x85, 0xed, 0x8d, 0xbc, 0xed, 0x8d, 0xbd,
  0xed, 0x8e, 0x80, 0xed, 0x8e, 0x84, 0xed, 0x8e, 0x8c, 0xed, 0x8e, 0x8d,
  0xed, 0x8e, 0x8f, 0xed, 0x8e, 0x90, 0xed, 0x8e, 0x91, 0xed, 0x8e, 0x98,
  0xed, 0x8e, 0x99, 0xed, 0x8e, 0x9c, 0xed, 0x8e, 0xa0, 0xed, 0x8e, 0xa8,
  0xed, 0x8e, 0xa9, 0xed, 0x8e, 0xab, 0xed, 0x8e, 0xad, 0xed, 0x8e, 0xb4,
  0xed, 0x8e, 0xb8, 0xed, 0x8e, 0xbc, 0xed, 0x8f, 0x84, 0xed, 0x8f, 0x85,
  0xed, 0x8f, 0x88, 0xed, 0x8f, 0x89, 0xed, 0x8f, 0x90, 0xed, 0x8f, 0x98,
  0xed, 0x8f, 0xa1, 0xed, 0x8f, 0xa3, 0xed, 0x8f, 0xac, 0xed, 0x8f, 0xad,
  0xed, 0x8f, 0xb0, 0xed, 0x8f, 0xb4, 0xed, 0x8f, 0xbc, 0xed, 0x8f, 0xbd,
  0xed, 0x8f, 0xbf, 0xed, 0x90, 0x81
};

unsigned char ksx_1001_row_39_converted_to_utf8[] = {
  0xed, 0x90, 0x88, 0xed, 0x90, 0x9d, 0xed, 0x91, 0x80, 0xed, 0x91, 0x84,
  0xed, 0x91, 0x9c, 0xed, 0x91, 0xa0, 0xed, 0x91, 0xa4, 0xed, 0x91, 0xad,
  0xed, 0x91, 0xaf, 0xed, 0x91, 0xb8, 0xed, 0x91, 0xb9, 0xed, 0x91, 0xbc,
  0xed, 0x91, 0xbf, 0xed, 0x92, 0x80, 0xed, 0x92, 0x82, 0xed, 0x92, 0x88,
  0xed, 0x92, 0x89, 0xed, 0x92, 0x8b, 0xed, 0x92, 0x8d, 0xed, 0x92, 0x94,
  0xed, 0x92, 0xa9, 0xed, 0x93, 0x8c, 0xed, 0x93, 0x90, 0xed, 0x93, 0x94,
  0xed, 0x93, 0x9c, 0xed, 0x93, 0x9f, 0xed, 0x93, 0xa8, 0xed, 0x93, 0xac,
  0xed, 0x93, 0xb0, 0xed, 0x93, 0xb8, 0xed, 0x93, 0xbb, 0xed, 0x93, 0xbd,
  0xed, 0x94, 0x84, 0xed, 0x94, 0x88, 0xed, 0x94, 0x8c, 0xed, 0x94, 0x94,
  0xed, 0x94, 0x95, 0xed, 0x94, 0x97, 0xed, 0x94, 0xbc, 0xed, 0x94, 0xbd,
  0xed, 0x95, 0x80, 0xed, 0x95, 0x84, 0xed, 0x95, 0x8c, 0xed, 0x95, 0x8d,
  0xed, 0x95, 0x8f, 0xed, 0x95, 0x91, 0xed, 0x95, 0x98, 0xed, 0x95, 0x99,
  0xed, 0x95, 0x9c, 0xed, 0x95, 0xa0, 0xed, 0x95, 0xa5, 0xed, 0x95, 0xa8,
  0xed, 0x95, 0xa9, 0xed, 0x95, 0xab, 0xed, 0x95, 0xad, 0xed, 0x95, 0xb4,
  0xed, 0x95, 0xb5, 0xed, 0x95, 0xb8, 0xed, 0x95, 0xbc, 0xed, 0x96, 0x84,
  0xed, 0x96, 0x85, 0xed, 0x96, 0x87, 0xed, 0x96, 0x88, 0xed, 0x96, 0x89,
  0xed, 0x96, 0x90, 0xed, 0x96, 0xa5, 0xed, 0x97, 0x88, 0xed, 0x97, 0x89,
  0xed, 0x97, 0x8c, 0xed, 0x97, 0x90, 0xed, 0x97, 0x92, 0xed, 0x97, 0x98,
  0xed, 0x97, 0x99, 0xed, 0x97, 0x9b, 0xed, 0x97, 0x9d, 0xed, 0x97, 0xa4,
  0xed, 0x97, 0xa5, 0xed, 0x97, 0xa8, 0xed, 0x97, 0xac, 0xed, 0x97, 0xb4,
  0xed, 0x97, 0xb5, 0xed, 0x97, 0xb7, 0xed, 0x97, 0xb9, 0xed, 0x98, 0x80,
  0xed, 0x98, 0x81, 0xed, 0x98, 0x84, 0xed, 0x98, 0x88, 0xed, 0x98, 0x90,
  0xed, 0x98, 0x91, 0xed, 0x98, 0x93, 0xed, 0x98, 0x94, 0xed, 0x98, 0x95,
  0xed, 0x98, 0x9c, 0xed, 0x98, 0xa0
};

unsigned char ksx_1001_row_40_converted_to_utf8[] = {
  0xed, 0x98, 0xa4, 0xed, 0x98, 0xad, 0xed, 0x98, 0xb8, 0xed, 0x98, 0xb9,
  0xed, 0x98, 0xbc, 0xed, 0x99, 0x80, 0xed, 0x99, 0x85, 0xed, 0x99, 0x88,
  0xed, 0x99, 0x89, 0xed, 0x99, 0x8b, 0xed, 0x99, 0x8d, 0xed, 0x99, 0x91,
  0xed, 0x99, 0x94, 0xed, 0x99, 0x95, 0xed, 0x99, 0x98, 0xed, 0x99, 0x9c,
  0xed, 0x99, 0xa7, 0xed, 0x99, 0xa9, 0xed, 0x99, 0xb0, 0xed, 0x99, 0xb1,
  0xed, 0x99, 0xb4, 0xed, 0x9a, 0x83, 0xed, 0x9a, 0x85, 0xed, 0x9a, 0x8c,
  0xed, 0x9a, 0x8d, 0xed, 0x9a, 0x90, 0xed, 0x9a, 0x94, 0xed, 0x9a, 0x9d,
  0xed, 0x9a, 0x9f, 0xed, 0x9a, 0xa1, 0xed, 0x9a, 0xa8, 0xed, 0x9a, 0xac,
  0xed, 0x9a, 0xb0, 0xed, 0x9a, 0xb9, 0xed, 0x9a, 0xbb, 0xed, 0x9b, 0x84,
  0xed, 0x9b, 0x85, 0xed, 0x9b, 0x88, 0xed, 0x9b, 0x8c, 0xed, 0x9b, 0x91,
  0xed, 0x9b, 0x94, 0xed, 0x9b, 0x97, 0xed, 0x9b, 0x99, 0xed, 0x9b, 0xa0,
  0xed, 0x9b, 0xa4, 0xed, 0x9b, 0xa8, 0xed, 0x9b, 0xb0, 0xed, 0x9b, 0xb5,
  0xed, 0x9b, 0xbc, 0xed, 0x9b, 0xbd, 0xed, 0x9c, 0x80, 0xed, 0x9c, 0x84,
  0xed, 0x9c, 0x91, 0xed, 0x9c, 0x98, 0xed, 0x9c, 0x99, 0xed, 0x9c, 0x9c,
  0xed, 0x9c, 0xa0, 0xed, 0x9c, 0xa8, 0xed, 0x9c, 0xa9, 0xed, 0x9c, 0xab,
  0xed, 0x9c, 0xad, 0xed, 0x9c, 0xb4, 0xed, 0x9c, 0xb5, 0xed, 0x9c, 0xb8,
  0xed, 0x9c, 0xbc, 0xed, 0x9d, 0x84, 0xed, 0x9d, 0x87, 0xed, 0x9d, 0x89,
  0xed, 0x9d, 0x90, 0xed, 0x9d, 0x91, 0xed, 0x9d, 0x94, 0xed, 0x9d, 0x96,
  0xed, 0x9d, 0x97, 0xed, 0x9d, 0x98, 0xed, 0x9d, 0x99, 0xed, 0x9d, 0xa0,
  0xed, 0x9d, 0xa1, 0xed, 0x9d, 0xa3, 0xed, 0x9d, 0xa5, 0xed, 0x9d, 0xa9,
  0xed, 0x9d, 0xac, 0xed, 0x9d, 0xb0, 0xed, 0x9d, 0xb4, 0xed, 0x9d, 0xbc,
  0xed, 0x9d, 0xbd, 0xed, 0x9e, 0x81, 0xed, 0x9e, 0x88, 0xed, 0x9e, 0x89,
  0xed, 0x9e, 0x8c, 0xed, 0x9e, 0x90, 0xed, 0x9e, 0x98, 0xed, 0x9e, 0x99,
  0xed, 0x9e, 0x9b, 0xed, 0x9e, 0x9d
};

/* helper function that converts a character string and compares the output
 * of OFiconv against a given expected result (reference). If the conversion
 * does not yield the expected result, OFCHECK_FAIL() is called, i.e. the unit test will fail with an error message.
 * @param id conversion context created by a call to OFiconv_open()
 * @param src pointer to a buffer containing characters in the source character set
 * @param srcsize number of bytes in the source buffer src
 * @param reference pointer to a buffer containing the expected output that should be generated by the conversion
 * @param refsize number of bytes in the output reference buffer. Must not be larger than 1 kByte.
 */ 
void do_conversion(iconv_t id, unsigned char *src, size_t srcsize, unsigned char *reference, size_t refsize)
{
  char output[1024];
  char *src_ptr = OFreinterpret_cast(char *, src);
  size_t src_len = srcsize;
  char *dst_ptr = output;
  size_t dst_len = 1024;

  memset(output, 0, 1024);
  (void) OFiconv(id, &src_ptr, &src_len, &dst_ptr, &dst_len);

  if (src_len > 0)
  {
    OFOStringStream str;
    str << "OFiconv did not convert all characters, " << src_len << " characters left in buffer." << OFStringStream_ends;
    OFSTRINGSTREAM_GETSTR(str, c_str)
    OFCHECK_FAIL(c_str);
    OFSTRINGSTREAM_FREESTR(c_str)
  }

  if ((1024 - dst_len) != refsize)
  {
    OFOStringStream str;
    str << "OFiconv output does not have expected size, expected " << refsize << " bytes and found " << (1024 - dst_len) << "." << OFStringStream_ends;
    OFSTRINGSTREAM_GETSTR(str, c_str)
    OFCHECK_FAIL(c_str);
    OFSTRINGSTREAM_FREESTR(c_str)
  }
  else
  {
    if (0 != memcmp(reference, output, refsize))
    {
      OFCHECK_FAIL("OFiconv output does not match expected string.");
    }
  }

  // COUT << output << OFendl;
}

/* convert all printable characters of an ISO 8859 character set to UTF-8 and compare against a reference.
 * The routine automatically converts all printable ASCII characters (< 128), so the source string should
 * only contain characters >= 128.
 * @param charset name of the ISO 8859 character set for the source string
 * @param src source string
 * @param srcsize number of bytes in the source string
 * @param reference expected UTF-8 output string
 * @param refsize number of bytes in the expected UTF-8 output string
 */
void convert_iso8859_to_utf8(const char *charset, unsigned char *src, size_t srcsize, unsigned char *reference, size_t refsize)
{
  iconv_t invalid_id = OFreinterpret_cast(iconv_t, -1);
  iconv_t id;

  OFCHECK(invalid_id != (id = OFiconv_open("UTF-8", charset)));
  if (id != invalid_id)
  {
    // convert the characters below 128 to UTF-8. The output should be identical to the input.
    do_conversion(id, char_20_to_7e, sizeof(char_20_to_7e), char_20_to_7e, sizeof(char_20_to_7e));

    // convert the characters above 128 to UTF-8 and compare against a reference
    do_conversion(id, src, srcsize, reference, refsize);

    OFiconv_close(id);
  }
}

/* convert UTF-8 characters to an ISO 8859 character set  and compare against a reference.
 * The routine automatically converts all printable ASCII characters (< 128), so the source string should
 * only contain UTF-8 code for the characters corresponding to values >= 128 in ISO 8859.
 * @param charset name of the ISO 8859 character set for the source string
 * @param reference expected UTF-8 output string
 * @param refsize number of bytes in the expected UTF-8 output string
 * @param src source string
 * @param srcsize number of bytes in the source string
 */
void convert_utf8_to_iso8859(const char *charset, unsigned char *reference, size_t refsize, unsigned char *src, size_t srcsize)
{
  iconv_t invalid_id = OFreinterpret_cast(iconv_t, -1);
  iconv_t id;

  OFCHECK(invalid_id != (id = OFiconv_open(charset, "UTF-8")));
  if (id != invalid_id)
  {
    // convert the characters below 128 to UTF-8. The output should be identical to the input.
    do_conversion(id, char_20_to_7e, sizeof(char_20_to_7e), char_20_to_7e, sizeof(char_20_to_7e));

    // convert the characters above 128 to UTF-8 and compare against a reference
    do_conversion(id, src, srcsize, reference, refsize);

    OFiconv_close(id);
  }
}

/* convert all printable characters of an ISO 8859 character set to ASCII and compare against a reference.
 * The routine automatically converts all printable ASCII characters (< 128), so the source string should
 * only contain characters >= 128, which will all be converted to '?' by the rather stupid 
 * Citrus iconv transliteration rules.
 * @param charset name of the ISO 8859 character set for the source string
 * @param src source string
 * @param srcsize number of bytes in the source string
 */
void convert_iso8859_to_ascii(const char *charset, unsigned char *src, size_t srcsize)
{
  iconv_t invalid_id = OFreinterpret_cast(iconv_t, -1);
  iconv_t id;
  unsigned char question_marks[256];

  OFCHECK(invalid_id != (id = OFiconv_open("ASCII", charset)));
  if (id != invalid_id)
  {
    // convert the characters below 128 to ASCII. The output should be identical to the input.
    do_conversion(id, char_20_to_7e, sizeof(char_20_to_7e), char_20_to_7e, sizeof(char_20_to_7e));

    memset(question_marks, '?', sizeof(question_marks));

    // convert the characters above 128 to ASCII and compare against a reference
    do_conversion(id, src, srcsize, question_marks, srcsize);

    OFiconv_close(id);
  }
}

void convert_jis_x0201_to_utf8(const char *charset, unsigned char *src, size_t srcsize, unsigned char *reference, size_t refsize)
{
  iconv_t invalid_id = OFreinterpret_cast(iconv_t, -1);
  iconv_t id;

  OFCHECK(invalid_id != (id = OFiconv_open("UTF-8", charset)));
  if (id != invalid_id)
  {
    do_conversion(id, src, srcsize, reference, refsize);

    OFiconv_close(id);
  }
}

void convert_utf8_to_jis_x0201(const char *charset, unsigned char *reference, size_t refsize, unsigned char *src, size_t srcsize)
{
  iconv_t invalid_id = OFreinterpret_cast(iconv_t, -1);
  iconv_t id;

  OFCHECK(invalid_id != (id = OFiconv_open(charset, "UTF-8")));
  if (id != invalid_id)
  {
    do_conversion(id, src, srcsize, reference, refsize);
    OFiconv_close(id);
  }
}

void convert_jis_x0201_to_ascii(const char *charset, unsigned char *src, size_t srcsize, unsigned char *reference, size_t refsize)
{
  iconv_t invalid_id = OFreinterpret_cast(iconv_t, -1);
  iconv_t id;

  OFCHECK(invalid_id != (id = OFiconv_open("ASCII", charset)));
  if (id != invalid_id)
  {
    do_conversion(id, src, srcsize, reference, refsize);

    OFiconv_close(id);
  }
}

void convert_euc_to_utf8(const char *charset, unsigned char prefix, unsigned char *src, size_t srcsize, unsigned char *reference, size_t refsize)
{
  iconv_t invalid_id = OFreinterpret_cast(iconv_t, -1);
  iconv_t id;

  // Expand input buffer by prefixing each byte with the given prefix byte, converting single bytes to double bytes
  // This assumes that all characters in the input buffer use the same prefix byte, i.e. belong to the same row in JIS_X0208.
  unsigned char buf[srcsize * 2];
  unsigned char *srcptr = src;
  unsigned char *bufptr = buf;
  for (size_t i = 0; i < srcsize; ++i)
  {
    *bufptr++ = prefix;
    *bufptr++ = *srcptr++;
  }

  OFCHECK(invalid_id != (id = OFiconv_open("UTF-8", charset)));
  if (id != invalid_id)
  {
    do_conversion(id, buf, srcsize * 2, reference, refsize);

    OFiconv_close(id);
  }
}

void convert_utf8_to_euc(const char *charset, unsigned char prefix, unsigned char *reference, size_t refsize, unsigned char *src, size_t srcsize)
{
  iconv_t invalid_id = OFreinterpret_cast(iconv_t, -1);
  iconv_t id;

  // Expand input buffer by prefixing each byte with the given prefix byte, converting single bytes to double bytes
  // This assumes that all characters in the input buffer use the same prefix byte, i.e. belong to the same row in JIS_X0208.
  unsigned char refbuf[refsize * 2];
  unsigned char *refptr = reference;
  unsigned char *bufptr = refbuf;
  for (size_t i = 0; i < refsize; ++i)
  {
    *bufptr++ = prefix;
    *bufptr++ = *refptr++;
  }

  OFCHECK(invalid_id != (id = OFiconv_open(charset, "UTF-8")));
  if (id != invalid_id)
  {
    do_conversion(id, src, srcsize, refbuf, refsize * 2);

    OFiconv_close(id);
  }
}

// This test only exercises OFiconv_open() for various pairs of
// character sets and checks whether valid conversion contexts are returned.
OFTEST(oficonv_open)
{
  iconv_t invalid_id = OFreinterpret_cast(iconv_t, -1);
  iconv_t id;

  // ASCII to ASCII
  OFCHECK(invalid_id != (id = OFiconv_open("", "ASCII")));
  if (id != invalid_id) OFiconv_close(id);

  // To some charset from UTF-8
  OFCHECK(invalid_id != (id = OFiconv_open("ASCII", "UTF-8")));
  if (id != invalid_id) OFiconv_close(id);
  OFCHECK(invalid_id != (id = OFiconv_open("ISO-8859-1", "UTF-8")));
  if (id != invalid_id) OFiconv_close(id);
  OFCHECK(invalid_id != (id = OFiconv_open("ISO-8859-2", "UTF-8")));
  if (id != invalid_id) OFiconv_close(id);
  OFCHECK(invalid_id != (id = OFiconv_open("ISO-8859-3", "UTF-8")));
  if (id != invalid_id) OFiconv_close(id);
  OFCHECK(invalid_id != (id = OFiconv_open("ISO-8859-4", "UTF-8")));
  if (id != invalid_id) OFiconv_close(id);
  OFCHECK(invalid_id != (id = OFiconv_open("ISO-8859-5", "UTF-8")));
  if (id != invalid_id) OFiconv_close(id);
  OFCHECK(invalid_id != (id = OFiconv_open("ISO-8859-6", "UTF-8")));
  if (id != invalid_id) OFiconv_close(id);
  OFCHECK(invalid_id != (id = OFiconv_open("ISO-8859-7", "UTF-8")));
  if (id != invalid_id) OFiconv_close(id);
  OFCHECK(invalid_id != (id = OFiconv_open("ISO-8859-8", "UTF-8")));
  if (id != invalid_id) OFiconv_close(id);
  OFCHECK(invalid_id != (id = OFiconv_open("ISO-8859-9", "UTF-8")));
  if (id != invalid_id) OFiconv_close(id);
  OFCHECK(invalid_id != (id = OFiconv_open("JIS_X0201", "UTF-8")));
  if (id != invalid_id) OFiconv_close(id);
  OFCHECK(invalid_id != (id = OFiconv_open("Shift_JIS", "UTF-8")));
  if (id != invalid_id) OFiconv_close(id);
  OFCHECK(invalid_id != (id = OFiconv_open("TIS-620", "UTF-8")));
  if (id != invalid_id) OFiconv_close(id);
  OFCHECK(invalid_id != (id = OFiconv_open("ISO-IR-166", "UTF-8")));
  if (id != invalid_id) OFiconv_close(id);
  OFCHECK(invalid_id != (id = OFiconv_open("UTF-8", "UTF-8")));
  if (id != invalid_id) OFiconv_close(id);
  OFCHECK(invalid_id != (id = OFiconv_open("GB18030", "UTF-8")));
  if (id != invalid_id) OFiconv_close(id);
  OFCHECK(invalid_id != (id = OFiconv_open("GB2312", "UTF-8")));
  if (id != invalid_id) OFiconv_close(id);
  OFCHECK(invalid_id != (id = OFiconv_open("ISO-IR-87", "UTF-8")));
  if (id != invalid_id) OFiconv_close(id);
//  citrus libiconv does not support ISO-IR 159 (JIS_X0212)
//  OFCHECK(invalid_id != (id = OFiconv_open("JIS_X0212", "UTF-8")));
//  if (id != invalid_id) OFiconv_close(id);
  OFCHECK(invalid_id != (id = OFiconv_open("EUC-KR", "UTF-8")));
  if (id != invalid_id) OFiconv_close(id);
  OFCHECK(invalid_id != (id = OFiconv_open("GBK", "UTF-8")));
  if (id != invalid_id) OFiconv_close(id);
  // the following call should fail because "DCMTK" is not a known character set name
  OFCHECK(invalid_id == (id = OFiconv_open("DCMTK", "UTF-8")));
  if (id != invalid_id) OFiconv_close(id);

  // To UTF-8 from some charset
  OFCHECK(invalid_id != (id = OFiconv_open("UTF-8", "ASCII")));
  if (id != invalid_id) OFiconv_close(id);
  OFCHECK(invalid_id != (id = OFiconv_open("UTF-8", "ISO-8859-1")));
  if (id != invalid_id) OFiconv_close(id);
  OFCHECK(invalid_id != (id = OFiconv_open("UTF-8", "ISO-8859-2")));
  if (id != invalid_id) OFiconv_close(id);
  OFCHECK(invalid_id != (id = OFiconv_open("UTF-8", "ISO-8859-3")));
  if (id != invalid_id) OFiconv_close(id);
  OFCHECK(invalid_id != (id = OFiconv_open("UTF-8", "ISO-8859-4")));
  if (id != invalid_id) OFiconv_close(id);
  OFCHECK(invalid_id != (id = OFiconv_open("UTF-8", "ISO-8859-5")));
  if (id != invalid_id) OFiconv_close(id);
  OFCHECK(invalid_id != (id = OFiconv_open("UTF-8", "ISO-8859-6")));
  if (id != invalid_id) OFiconv_close(id);
  OFCHECK(invalid_id != (id = OFiconv_open("UTF-8", "ISO-8859-7")));
  if (id != invalid_id) OFiconv_close(id);
  OFCHECK(invalid_id != (id = OFiconv_open("UTF-8", "ISO-8859-8")));
  if (id != invalid_id) OFiconv_close(id);
  OFCHECK(invalid_id != (id = OFiconv_open("UTF-8", "ISO-8859-9")));
  if (id != invalid_id) OFiconv_close(id);
  OFCHECK(invalid_id != (id = OFiconv_open("UTF-8", "JIS_X0201")));
  if (id != invalid_id) OFiconv_close(id);
  // Shift_JIS is an extension of JIS_X0201; DICOM uses only the JIS_X0201 characters
  OFCHECK(invalid_id != (id = OFiconv_open("UTF-8", "Shift_JIS")));
  if (id != invalid_id) OFiconv_close(id);
  OFCHECK(invalid_id != (id = OFiconv_open("UTF-8", "TIS-620")));
  if (id != invalid_id) OFiconv_close(id);
  // ISO 8859-11 (ISO_IR 166) is identical to TIS-620 except for the A0 character,
  // which is a non-breaking space in ISO 8859-11 and undefined in TIS-620
  OFCHECK(invalid_id != (id = OFiconv_open("UTF-8", "ISO-IR-166")));
  if (id != invalid_id) OFiconv_close(id);
  OFCHECK(invalid_id != (id = OFiconv_open("UTF-8", "UTF-8")));
  if (id != invalid_id) OFiconv_close(id);
  OFCHECK(invalid_id != (id = OFiconv_open("UTF-8", "GB18030")));
  if (id != invalid_id) OFiconv_close(id);
  OFCHECK(invalid_id != (id = OFiconv_open("UTF-8", "GBK")));
  if (id != invalid_id) OFiconv_close(id);
  OFCHECK(invalid_id != (id = OFiconv_open("UTF-8", "ISO-IR-87")));
  if (id != invalid_id) OFiconv_close(id);
//  citrus libiconv does not support ISO-IR 159 (JIS_X0212)
//  OFCHECK(invalid_id != (id = OFiconv_open("UTF-8", "JIS_X0212")));
//  if (id != invalid_id) OFiconv_close(id);
  OFCHECK(invalid_id != (id = OFiconv_open("UTF-8", "EUC-KR")));
  if (id != invalid_id) OFiconv_close(id);
  // the following call should fail because "DCMTK" is not a known character set name
  OFCHECK(invalid_id == (id = OFiconv_open("UTF-8", "DCMTK")));
  if (id != invalid_id) OFiconv_close(id);

  // To some charset from Latin-1
  OFCHECK(invalid_id != (id = OFiconv_open("ASCII", "ISO-8859-1")));
  if (id != invalid_id) OFiconv_close(id);
  OFCHECK(invalid_id != (id = OFiconv_open("ISO-8859-2", "ISO-8859-1")));
  if (id != invalid_id) OFiconv_close(id);
  OFCHECK(invalid_id != (id = OFiconv_open("ISO-8859-3", "ISO-8859-1")));
  if (id != invalid_id) OFiconv_close(id);
  OFCHECK(invalid_id != (id = OFiconv_open("ISO-8859-4", "ISO-8859-1")));
  if (id != invalid_id) OFiconv_close(id);
  OFCHECK(invalid_id != (id = OFiconv_open("ISO-8859-5", "ISO-8859-1")));
  if (id != invalid_id) OFiconv_close(id);
  OFCHECK(invalid_id != (id = OFiconv_open("ISO-8859-6", "ISO-8859-1")));
  if (id != invalid_id) OFiconv_close(id);
  OFCHECK(invalid_id != (id = OFiconv_open("ISO-8859-7", "ISO-8859-1")));
  if (id != invalid_id) OFiconv_close(id);
  OFCHECK(invalid_id != (id = OFiconv_open("ISO-8859-8", "ISO-8859-1")));
  if (id != invalid_id) OFiconv_close(id);
  OFCHECK(invalid_id != (id = OFiconv_open("ISO-8859-9", "ISO-8859-1")));
  if (id != invalid_id) OFiconv_close(id);
  OFCHECK(invalid_id != (id = OFiconv_open("JIS_X0201", "ISO-8859-1")));
  if (id != invalid_id) OFiconv_close(id);
  OFCHECK(invalid_id != (id = OFiconv_open("Shift_JIS", "ISO-8859-1")));
  if (id != invalid_id) OFiconv_close(id);
  OFCHECK(invalid_id != (id = OFiconv_open("TIS-620", "ISO-8859-1")));
  if (id != invalid_id) OFiconv_close(id);
  OFCHECK(invalid_id != (id = OFiconv_open("ISO-IR-166", "ISO-8859-1")));
  if (id != invalid_id) OFiconv_close(id);
  OFCHECK(invalid_id != (id = OFiconv_open("GB18030", "ISO-8859-1")));
  if (id != invalid_id) OFiconv_close(id);
  OFCHECK(invalid_id != (id = OFiconv_open("GBK", "ISO-8859-1")));
  if (id != invalid_id) OFiconv_close(id);
  OFCHECK(invalid_id != (id = OFiconv_open("ISO-IR-87", "ISO-8859-1")));
  if (id != invalid_id) OFiconv_close(id);
//  citrus libiconv does not support ISO-IR 159 (JIS_X0212)
//  OFCHECK(invalid_id != (id = OFiconv_open("JIS_X0212", "ISO-8859-1")));
//  if (id != invalid_id) OFiconv_close(id);
  OFCHECK(invalid_id != (id = OFiconv_open("EUC-KR", "ISO-8859-1")));
  if (id != invalid_id) OFiconv_close(id);
  OFCHECK(invalid_id != (id = OFiconv_open("GBK", "ISO-8859-1")));
  if (id != invalid_id) OFiconv_close(id);
  // the following call should fail because "DCMTK" is not a known character set name
  OFCHECK(invalid_id == (id = OFiconv_open("DCMTK", "ISO-8859-1")));
  if (id != invalid_id) OFiconv_close(id);
}

// Conversion from ISO_IR 100 (Latin 1) to ISO_IR 192 (Unicode)
OFTEST(oficonv_iso8859_1_to_utf8)
{
  convert_iso8859_to_utf8("ISO-8859-1", char_a0_to_ff, sizeof(char_a0_to_ff), iso8859_1_to_utf8_a0_to_ff, sizeof(iso8859_1_to_utf8_a0_to_ff));
}

// Conversion from ISO_IR 101 (Latin 2) to ISO_IR 192 (Unicode)
OFTEST(oficonv_iso8859_2_to_utf8)
{
  convert_iso8859_to_utf8("ISO-8859-2", char_a0_to_ff, sizeof(char_a0_to_ff), iso8859_2_to_utf8_a0_to_ff, sizeof(iso8859_2_to_utf8_a0_to_ff));
}

// Conversion from ISO_IR 109 (Latin 3) to ISO_IR 192 (Unicode)
OFTEST(oficonv_iso8859_3_to_utf8)
{
  convert_iso8859_to_utf8("ISO-8859-3", iso8859_3_char_a0_to_ff, sizeof(iso8859_3_char_a0_to_ff), iso8859_3_to_utf8_a0_to_ff, sizeof(iso8859_3_to_utf8_a0_to_ff));
}

// Conversion from ISO_IR 110 (Latin 4) to ISO_IR 192 (Unicode)
OFTEST(oficonv_iso8859_4_to_utf8)
{
  convert_iso8859_to_utf8("ISO-8859-4", char_a0_to_ff, sizeof(char_a0_to_ff), iso8859_4_to_utf8_a0_to_ff, sizeof(iso8859_4_to_utf8_a0_to_ff));
}

// Conversion from ISO_IR 144 (Cyrillic) to ISO_IR 192 (Unicode)
OFTEST(oficonv_iso8859_5_to_utf8)
{
  convert_iso8859_to_utf8("ISO-8859-5", char_a0_to_ff, sizeof(char_a0_to_ff), iso8859_5_to_utf8_a0_to_ff, sizeof(iso8859_5_to_utf8_a0_to_ff));
}

// Conversion from ISO_IR 127 (Arabic) to ISO_IR 192 (Unicode)
OFTEST(oficonv_iso8859_6_to_utf8)
{
  convert_iso8859_to_utf8("ISO-8859-6", iso8859_6_char_a0_to_ff, sizeof(iso8859_6_char_a0_to_ff), iso8859_6_to_utf8_a0_to_ff, sizeof(iso8859_6_to_utf8_a0_to_ff));
}

// Conversion from ISO_IR 126 (Greek) to ISO_IR 192 (Unicode)
OFTEST(oficonv_iso8859_7_to_utf8)
{
  convert_iso8859_to_utf8("ISO-8859-7", iso8859_7_char_a0_to_ff, sizeof(iso8859_7_char_a0_to_ff), iso8859_7_to_utf8_a0_to_ff, sizeof(iso8859_7_to_utf8_a0_to_ff));
}

// Conversion from ISO_IR 138 (Hebrew) to ISO_IR 192 (Unicode)
OFTEST(oficonv_iso8859_8_to_utf8)
{
  convert_iso8859_to_utf8("ISO-8859-8", iso8859_8_char_a0_to_ff, sizeof(iso8859_8_char_a0_to_ff), iso8859_8_to_utf8_a0_to_ff, sizeof(iso8859_8_to_utf8_a0_to_ff));
}

// Conversion from ISO_IR 148 (Latin 5) to ISO_IR 192 (Unicode)
OFTEST(oficonv_iso8859_9_to_utf8)
{
  convert_iso8859_to_utf8("ISO-8859-9", char_a0_to_ff, sizeof(char_a0_to_ff), iso8859_9_to_utf8_a0_to_ff, sizeof(iso8859_9_to_utf8_a0_to_ff));
}

// Conversion from ISO_IR 166 (Thai) to ISO_IR 192 (Unicode)
OFTEST(oficonv_iso8859_11_to_utf8)
{
  convert_iso8859_to_utf8("ISO-IR-166", iso8859_11_char_a0_to_ff, sizeof(iso8859_11_char_a0_to_ff), iso8859_11_to_utf8_a0_to_ff, sizeof(iso8859_11_to_utf8_a0_to_ff));
}

// Conversion from TIS-620 (Thai) to ISO_IR 192 (Unicode)
// For all pratical purposes, TIS-620 is identical to ISO-IR-166 (ISO 8859-11)
OFTEST(oficonv_tis_620_to_utf8)
{
  convert_iso8859_to_utf8("TIS-620", iso8859_11_char_a0_to_ff, sizeof(iso8859_11_char_a0_to_ff), iso8859_11_to_utf8_a0_to_ff, sizeof(iso8859_11_to_utf8_a0_to_ff));
}

// Conversion from Shift-JIS (Katakana) to ISO_IR 192 (Unicode)
// For all pratical purposes, Shift-JIS is identical to ISO-IR-13 (JIS_X0201)
OFTEST(oficonv_shift_jis_to_utf8)
{
  convert_jis_x0201_to_utf8("Shift_JIS", jis_x0201_characters, sizeof(jis_x0201_characters), jis_x0201_to_utf8, sizeof(jis_x0201_to_utf8));
}

OFTEST(oficonv_utf8_to_iso8859_1)
{
  convert_utf8_to_iso8859("ISO-8859-1", char_a0_to_ff, sizeof(char_a0_to_ff), iso8859_1_to_utf8_a0_to_ff, sizeof(iso8859_1_to_utf8_a0_to_ff));
}

OFTEST(oficonv_utf8_to_iso8859_2)
{
  convert_utf8_to_iso8859("ISO-8859-2", char_a0_to_ff, sizeof(char_a0_to_ff), iso8859_2_to_utf8_a0_to_ff, sizeof(iso8859_2_to_utf8_a0_to_ff));
}

OFTEST(oficonv_utf8_to_iso8859_3)
{
  convert_utf8_to_iso8859("ISO-8859-3", iso8859_3_char_a0_to_ff, sizeof(iso8859_3_char_a0_to_ff), iso8859_3_to_utf8_a0_to_ff, sizeof(iso8859_3_to_utf8_a0_to_ff));
}

OFTEST(oficonv_utf8_to_iso8859_4)
{
  convert_utf8_to_iso8859("ISO-8859-4", char_a0_to_ff, sizeof(char_a0_to_ff), iso8859_4_to_utf8_a0_to_ff, sizeof(iso8859_4_to_utf8_a0_to_ff));
}

OFTEST(oficonv_utf8_to_iso8859_5)
{
  convert_utf8_to_iso8859("ISO-8859-5", char_a0_to_ff, sizeof(char_a0_to_ff), iso8859_5_to_utf8_a0_to_ff, sizeof(iso8859_5_to_utf8_a0_to_ff));
}

OFTEST(oficonv_utf8_to_iso8859_6)
{
  convert_utf8_to_iso8859("ISO-8859-6", iso8859_6_char_a0_to_ff, sizeof(iso8859_6_char_a0_to_ff), iso8859_6_to_utf8_a0_to_ff, sizeof(iso8859_6_to_utf8_a0_to_ff));
}

OFTEST(oficonv_utf8_to_iso8859_7)
{
  convert_utf8_to_iso8859("ISO-8859-7", iso8859_7_char_a0_to_ff, sizeof(iso8859_7_char_a0_to_ff), iso8859_7_to_utf8_a0_to_ff, sizeof(iso8859_7_to_utf8_a0_to_ff));
}

OFTEST(oficonv_utf8_to_iso8859_8)
{
  convert_utf8_to_iso8859("ISO-8859-8", iso8859_8_char_a0_to_ff, sizeof(iso8859_8_char_a0_to_ff), iso8859_8_to_utf8_a0_to_ff, sizeof(iso8859_8_to_utf8_a0_to_ff));
}

OFTEST(oficonv_utf8_to_iso8859_9)
{
  convert_utf8_to_iso8859("ISO-8859-9", char_a0_to_ff, sizeof(char_a0_to_ff), iso8859_9_to_utf8_a0_to_ff, sizeof(iso8859_9_to_utf8_a0_to_ff));
}

OFTEST(oficonv_utf8_to_iso8859_11)
{
  convert_utf8_to_iso8859("ISO-IR-166", iso8859_11_char_a0_to_ff, sizeof(iso8859_11_char_a0_to_ff), iso8859_11_to_utf8_a0_to_ff, sizeof(iso8859_11_to_utf8_a0_to_ff));
}

OFTEST(oficonv_utf8_to_tis_620)
{
  convert_utf8_to_iso8859("TIS-620", iso8859_11_char_a0_to_ff, sizeof(iso8859_11_char_a0_to_ff), iso8859_11_to_utf8_a0_to_ff, sizeof(iso8859_11_to_utf8_a0_to_ff));
}

OFTEST(oficonv_utf8_to_shift_jis)
{
  convert_utf8_to_jis_x0201("Shift_JIS", jis_x0201_characters, sizeof(jis_x0201_characters), jis_x0201_to_utf8, sizeof(jis_x0201_to_utf8));
}

OFTEST(oficonv_iso8859_to_ascii)
{
  // the transliteration function in oficonv is rather stupid and will simply map all extended
  // characters to '?' when converting to ASCII. We can at least check that this works for all ISO 8859 charsets supported
  convert_iso8859_to_ascii("ISO-8859-1", char_a0_to_ff, sizeof(char_a0_to_ff));
  convert_iso8859_to_ascii("ISO-8859-2", char_a0_to_ff, sizeof(char_a0_to_ff));
  convert_iso8859_to_ascii("ISO-8859-3", iso8859_3_char_a0_to_ff, sizeof(iso8859_3_char_a0_to_ff));
  convert_iso8859_to_ascii("ISO-8859-4", char_a0_to_ff, sizeof(char_a0_to_ff));
  convert_iso8859_to_ascii("ISO-8859-5", char_a0_to_ff, sizeof(char_a0_to_ff));
  convert_iso8859_to_ascii("ISO-8859-6", iso8859_6_char_a0_to_ff, sizeof(iso8859_6_char_a0_to_ff));
  convert_iso8859_to_ascii("ISO-8859-7", iso8859_7_char_a0_to_ff, sizeof(iso8859_7_char_a0_to_ff));
  convert_iso8859_to_ascii("ISO-8859-8", iso8859_8_char_a0_to_ff, sizeof(iso8859_8_char_a0_to_ff));
  convert_iso8859_to_ascii("ISO-8859-9", char_a0_to_ff, sizeof(char_a0_to_ff));
  convert_iso8859_to_ascii("ISO-8859-11", iso8859_11_char_a0_to_ff, sizeof(iso8859_11_char_a0_to_ff));
  convert_jis_x0201_to_ascii("Shift_JIS", jis_x0201_characters, sizeof(jis_x0201_characters), jis_x0201_to_ascii, sizeof(jis_x0201_to_ascii));
}

OFTEST(oficonv_eur_kr_to_utf8)
{
  convert_euc_to_utf8("EUC-KR", 0xa1, ksx_1001_row_01_03_04_09_16ff, sizeof(ksx_1001_row_01_03_04_09_16ff), ksx_1001_row_01_converted_to_utf8, sizeof(ksx_1001_row_01_converted_to_utf8));
  convert_euc_to_utf8("EUC-KR", 0xa2, ksx_1001_row_02, sizeof(ksx_1001_row_02), ksx_1001_row_02_converted_to_utf8, sizeof(ksx_1001_row_02_converted_to_utf8));
  convert_euc_to_utf8("EUC-KR", 0xa3, ksx_1001_row_01_03_04_09_16ff, sizeof(ksx_1001_row_01_03_04_09_16ff), ksx_1001_row_03_converted_to_utf8, sizeof(ksx_1001_row_03_converted_to_utf8));
  convert_euc_to_utf8("EUC-KR", 0xa4, ksx_1001_row_01_03_04_09_16ff, sizeof(ksx_1001_row_01_03_04_09_16ff), ksx_1001_row_04_converted_to_utf8, sizeof(ksx_1001_row_04_converted_to_utf8));
  convert_euc_to_utf8("EUC-KR", 0xa5, ksx_1001_row_05, sizeof(ksx_1001_row_05), ksx_1001_row_05_converted_to_utf8, sizeof(ksx_1001_row_05_converted_to_utf8));
  convert_euc_to_utf8("EUC-KR", 0xa6, ksx_1001_row_06, sizeof(ksx_1001_row_06), ksx_1001_row_06_converted_to_utf8, sizeof(ksx_1001_row_06_converted_to_utf8));
  convert_euc_to_utf8("EUC-KR", 0xa7, ksx_1001_row_07, sizeof(ksx_1001_row_07), ksx_1001_row_07_converted_to_utf8, sizeof(ksx_1001_row_07_converted_to_utf8));
  convert_euc_to_utf8("EUC-KR", 0xa8, ksx_1001_row_08, sizeof(ksx_1001_row_08), ksx_1001_row_08_converted_to_utf8, sizeof(ksx_1001_row_08_converted_to_utf8));
  convert_euc_to_utf8("EUC-KR", 0xa9, ksx_1001_row_01_03_04_09_16ff, sizeof(ksx_1001_row_01_03_04_09_16ff), ksx_1001_row_09_converted_to_utf8, sizeof(ksx_1001_row_09_converted_to_utf8));
  convert_euc_to_utf8("EUC-KR", 0xaa, ksx_1001_row_10, sizeof(ksx_1001_row_10), ksx_1001_row_10_converted_to_utf8, sizeof(ksx_1001_row_10_converted_to_utf8));
  convert_euc_to_utf8("EUC-KR", 0xab, ksx_1001_row_11, sizeof(ksx_1001_row_11), ksx_1001_row_11_converted_to_utf8, sizeof(ksx_1001_row_11_converted_to_utf8));
  convert_euc_to_utf8("EUC-KR", 0xac, ksx_1001_row_12, sizeof(ksx_1001_row_12), ksx_1001_row_12_converted_to_utf8, sizeof(ksx_1001_row_12_converted_to_utf8));
  convert_euc_to_utf8("EUC-KR", 0xb0, ksx_1001_row_01_03_04_09_16ff, sizeof(ksx_1001_row_01_03_04_09_16ff), ksx_1001_row_16_converted_to_utf8, sizeof(ksx_1001_row_16_converted_to_utf8));
  convert_euc_to_utf8("EUC-KR", 0xb1, ksx_1001_row_01_03_04_09_16ff, sizeof(ksx_1001_row_01_03_04_09_16ff), ksx_1001_row_17_converted_to_utf8, sizeof(ksx_1001_row_17_converted_to_utf8));
  convert_euc_to_utf8("EUC-KR", 0xb2, ksx_1001_row_01_03_04_09_16ff, sizeof(ksx_1001_row_01_03_04_09_16ff), ksx_1001_row_18_converted_to_utf8, sizeof(ksx_1001_row_18_converted_to_utf8));
  convert_euc_to_utf8("EUC-KR", 0xb3, ksx_1001_row_01_03_04_09_16ff, sizeof(ksx_1001_row_01_03_04_09_16ff), ksx_1001_row_19_converted_to_utf8, sizeof(ksx_1001_row_19_converted_to_utf8));
  convert_euc_to_utf8("EUC-KR", 0xb4, ksx_1001_row_01_03_04_09_16ff, sizeof(ksx_1001_row_01_03_04_09_16ff), ksx_1001_row_20_converted_to_utf8, sizeof(ksx_1001_row_20_converted_to_utf8));
  convert_euc_to_utf8("EUC-KR", 0xb5, ksx_1001_row_01_03_04_09_16ff, sizeof(ksx_1001_row_01_03_04_09_16ff), ksx_1001_row_21_converted_to_utf8, sizeof(ksx_1001_row_21_converted_to_utf8));
  convert_euc_to_utf8("EUC-KR", 0xb6, ksx_1001_row_01_03_04_09_16ff, sizeof(ksx_1001_row_01_03_04_09_16ff), ksx_1001_row_22_converted_to_utf8, sizeof(ksx_1001_row_22_converted_to_utf8));
  convert_euc_to_utf8("EUC-KR", 0xb7, ksx_1001_row_01_03_04_09_16ff, sizeof(ksx_1001_row_01_03_04_09_16ff), ksx_1001_row_23_converted_to_utf8, sizeof(ksx_1001_row_23_converted_to_utf8));
  convert_euc_to_utf8("EUC-KR", 0xb8, ksx_1001_row_01_03_04_09_16ff, sizeof(ksx_1001_row_01_03_04_09_16ff), ksx_1001_row_24_converted_to_utf8, sizeof(ksx_1001_row_24_converted_to_utf8));
  convert_euc_to_utf8("EUC-KR", 0xb9, ksx_1001_row_01_03_04_09_16ff, sizeof(ksx_1001_row_01_03_04_09_16ff), ksx_1001_row_25_converted_to_utf8, sizeof(ksx_1001_row_25_converted_to_utf8));
  convert_euc_to_utf8("EUC-KR", 0xba, ksx_1001_row_01_03_04_09_16ff, sizeof(ksx_1001_row_01_03_04_09_16ff), ksx_1001_row_26_converted_to_utf8, sizeof(ksx_1001_row_26_converted_to_utf8));
  convert_euc_to_utf8("EUC-KR", 0xbb, ksx_1001_row_01_03_04_09_16ff, sizeof(ksx_1001_row_01_03_04_09_16ff), ksx_1001_row_27_converted_to_utf8, sizeof(ksx_1001_row_27_converted_to_utf8));
  convert_euc_to_utf8("EUC-KR", 0xbc, ksx_1001_row_01_03_04_09_16ff, sizeof(ksx_1001_row_01_03_04_09_16ff), ksx_1001_row_28_converted_to_utf8, sizeof(ksx_1001_row_28_converted_to_utf8));
  convert_euc_to_utf8("EUC-KR", 0xbd, ksx_1001_row_01_03_04_09_16ff, sizeof(ksx_1001_row_01_03_04_09_16ff), ksx_1001_row_29_converted_to_utf8, sizeof(ksx_1001_row_29_converted_to_utf8));
  convert_euc_to_utf8("EUC-KR", 0xbe, ksx_1001_row_01_03_04_09_16ff, sizeof(ksx_1001_row_01_03_04_09_16ff), ksx_1001_row_30_converted_to_utf8, sizeof(ksx_1001_row_30_converted_to_utf8));
  convert_euc_to_utf8("EUC-KR", 0xbf, ksx_1001_row_01_03_04_09_16ff, sizeof(ksx_1001_row_01_03_04_09_16ff), ksx_1001_row_31_converted_to_utf8, sizeof(ksx_1001_row_31_converted_to_utf8));
  convert_euc_to_utf8("EUC-KR", 0xc0, ksx_1001_row_01_03_04_09_16ff, sizeof(ksx_1001_row_01_03_04_09_16ff), ksx_1001_row_32_converted_to_utf8, sizeof(ksx_1001_row_32_converted_to_utf8));
  convert_euc_to_utf8("EUC-KR", 0xc1, ksx_1001_row_01_03_04_09_16ff, sizeof(ksx_1001_row_01_03_04_09_16ff), ksx_1001_row_33_converted_to_utf8, sizeof(ksx_1001_row_33_converted_to_utf8));
  convert_euc_to_utf8("EUC-KR", 0xc2, ksx_1001_row_01_03_04_09_16ff, sizeof(ksx_1001_row_01_03_04_09_16ff), ksx_1001_row_34_converted_to_utf8, sizeof(ksx_1001_row_34_converted_to_utf8));
  convert_euc_to_utf8("EUC-KR", 0xc3, ksx_1001_row_01_03_04_09_16ff, sizeof(ksx_1001_row_01_03_04_09_16ff), ksx_1001_row_35_converted_to_utf8, sizeof(ksx_1001_row_35_converted_to_utf8));
  convert_euc_to_utf8("EUC-KR", 0xc4, ksx_1001_row_01_03_04_09_16ff, sizeof(ksx_1001_row_01_03_04_09_16ff), ksx_1001_row_36_converted_to_utf8, sizeof(ksx_1001_row_36_converted_to_utf8));
  convert_euc_to_utf8("EUC-KR", 0xc5, ksx_1001_row_01_03_04_09_16ff, sizeof(ksx_1001_row_01_03_04_09_16ff), ksx_1001_row_37_converted_to_utf8, sizeof(ksx_1001_row_37_converted_to_utf8));
  convert_euc_to_utf8("EUC-KR", 0xc6, ksx_1001_row_01_03_04_09_16ff, sizeof(ksx_1001_row_01_03_04_09_16ff), ksx_1001_row_38_converted_to_utf8, sizeof(ksx_1001_row_38_converted_to_utf8));
  convert_euc_to_utf8("EUC-KR", 0xc7, ksx_1001_row_01_03_04_09_16ff, sizeof(ksx_1001_row_01_03_04_09_16ff), ksx_1001_row_39_converted_to_utf8, sizeof(ksx_1001_row_39_converted_to_utf8));
  convert_euc_to_utf8("EUC-KR", 0xc8, ksx_1001_row_01_03_04_09_16ff, sizeof(ksx_1001_row_01_03_04_09_16ff), ksx_1001_row_40_converted_to_utf8, sizeof(ksx_1001_row_40_converted_to_utf8));
}

OFTEST(oficonv_utf8_to_eur_kr)
{
  convert_utf8_to_euc("EUC-KR", 0xa1, ksx_1001_row_01_03_04_09_16ff, sizeof(ksx_1001_row_01_03_04_09_16ff), ksx_1001_row_01_converted_to_utf8, sizeof(ksx_1001_row_01_converted_to_utf8));
  convert_utf8_to_euc("EUC-KR", 0xa2, ksx_1001_row_02, sizeof(ksx_1001_row_02), ksx_1001_row_02_converted_to_utf8, sizeof(ksx_1001_row_02_converted_to_utf8));
  convert_utf8_to_euc("EUC-KR", 0xa3, ksx_1001_row_01_03_04_09_16ff, sizeof(ksx_1001_row_01_03_04_09_16ff), ksx_1001_row_03_converted_to_utf8, sizeof(ksx_1001_row_03_converted_to_utf8));
  convert_utf8_to_euc("EUC-KR", 0xa4, ksx_1001_row_01_03_04_09_16ff, sizeof(ksx_1001_row_01_03_04_09_16ff), ksx_1001_row_04_converted_to_utf8, sizeof(ksx_1001_row_04_converted_to_utf8));
  convert_utf8_to_euc("EUC-KR", 0xa5, ksx_1001_row_05, sizeof(ksx_1001_row_05), ksx_1001_row_05_converted_to_utf8, sizeof(ksx_1001_row_05_converted_to_utf8));
  convert_utf8_to_euc("EUC-KR", 0xa6, ksx_1001_row_06, sizeof(ksx_1001_row_06), ksx_1001_row_06_converted_to_utf8, sizeof(ksx_1001_row_06_converted_to_utf8));
  convert_utf8_to_euc("EUC-KR", 0xa7, ksx_1001_row_07, sizeof(ksx_1001_row_07), ksx_1001_row_07_converted_to_utf8, sizeof(ksx_1001_row_07_converted_to_utf8));
  convert_utf8_to_euc("EUC-KR", 0xa8, ksx_1001_row_08, sizeof(ksx_1001_row_08), ksx_1001_row_08_converted_to_utf8, sizeof(ksx_1001_row_08_converted_to_utf8));
  convert_utf8_to_euc("EUC-KR", 0xa9, ksx_1001_row_01_03_04_09_16ff, sizeof(ksx_1001_row_01_03_04_09_16ff), ksx_1001_row_09_converted_to_utf8, sizeof(ksx_1001_row_09_converted_to_utf8));
  convert_utf8_to_euc("EUC-KR", 0xaa, ksx_1001_row_10, sizeof(ksx_1001_row_10), ksx_1001_row_10_converted_to_utf8, sizeof(ksx_1001_row_10_converted_to_utf8));
  convert_utf8_to_euc("EUC-KR", 0xab, ksx_1001_row_11, sizeof(ksx_1001_row_11), ksx_1001_row_11_converted_to_utf8, sizeof(ksx_1001_row_11_converted_to_utf8));
  convert_utf8_to_euc("EUC-KR", 0xac, ksx_1001_row_12, sizeof(ksx_1001_row_12), ksx_1001_row_12_converted_to_utf8, sizeof(ksx_1001_row_12_converted_to_utf8));
  convert_utf8_to_euc("EUC-KR", 0xb0, ksx_1001_row_01_03_04_09_16ff, sizeof(ksx_1001_row_01_03_04_09_16ff), ksx_1001_row_16_converted_to_utf8, sizeof(ksx_1001_row_16_converted_to_utf8));
  convert_utf8_to_euc("EUC-KR", 0xb1, ksx_1001_row_01_03_04_09_16ff, sizeof(ksx_1001_row_01_03_04_09_16ff), ksx_1001_row_17_converted_to_utf8, sizeof(ksx_1001_row_17_converted_to_utf8));
  convert_utf8_to_euc("EUC-KR", 0xb2, ksx_1001_row_01_03_04_09_16ff, sizeof(ksx_1001_row_01_03_04_09_16ff), ksx_1001_row_18_converted_to_utf8, sizeof(ksx_1001_row_18_converted_to_utf8));
  convert_utf8_to_euc("EUC-KR", 0xb3, ksx_1001_row_01_03_04_09_16ff, sizeof(ksx_1001_row_01_03_04_09_16ff), ksx_1001_row_19_converted_to_utf8, sizeof(ksx_1001_row_19_converted_to_utf8));
  convert_utf8_to_euc("EUC-KR", 0xb4, ksx_1001_row_01_03_04_09_16ff, sizeof(ksx_1001_row_01_03_04_09_16ff), ksx_1001_row_20_converted_to_utf8, sizeof(ksx_1001_row_20_converted_to_utf8));
  convert_utf8_to_euc("EUC-KR", 0xb5, ksx_1001_row_01_03_04_09_16ff, sizeof(ksx_1001_row_01_03_04_09_16ff), ksx_1001_row_21_converted_to_utf8, sizeof(ksx_1001_row_21_converted_to_utf8));
  convert_utf8_to_euc("EUC-KR", 0xb6, ksx_1001_row_01_03_04_09_16ff, sizeof(ksx_1001_row_01_03_04_09_16ff), ksx_1001_row_22_converted_to_utf8, sizeof(ksx_1001_row_22_converted_to_utf8));
  convert_utf8_to_euc("EUC-KR", 0xb7, ksx_1001_row_01_03_04_09_16ff, sizeof(ksx_1001_row_01_03_04_09_16ff), ksx_1001_row_23_converted_to_utf8, sizeof(ksx_1001_row_23_converted_to_utf8));
  convert_utf8_to_euc("EUC-KR", 0xb8, ksx_1001_row_01_03_04_09_16ff, sizeof(ksx_1001_row_01_03_04_09_16ff), ksx_1001_row_24_converted_to_utf8, sizeof(ksx_1001_row_24_converted_to_utf8));
  convert_utf8_to_euc("EUC-KR", 0xb9, ksx_1001_row_01_03_04_09_16ff, sizeof(ksx_1001_row_01_03_04_09_16ff), ksx_1001_row_25_converted_to_utf8, sizeof(ksx_1001_row_25_converted_to_utf8));
  convert_utf8_to_euc("EUC-KR", 0xba, ksx_1001_row_01_03_04_09_16ff, sizeof(ksx_1001_row_01_03_04_09_16ff), ksx_1001_row_26_converted_to_utf8, sizeof(ksx_1001_row_26_converted_to_utf8));
  convert_utf8_to_euc("EUC-KR", 0xbb, ksx_1001_row_01_03_04_09_16ff, sizeof(ksx_1001_row_01_03_04_09_16ff), ksx_1001_row_27_converted_to_utf8, sizeof(ksx_1001_row_27_converted_to_utf8));
  convert_utf8_to_euc("EUC-KR", 0xbc, ksx_1001_row_01_03_04_09_16ff, sizeof(ksx_1001_row_01_03_04_09_16ff), ksx_1001_row_28_converted_to_utf8, sizeof(ksx_1001_row_28_converted_to_utf8));
  convert_utf8_to_euc("EUC-KR", 0xbd, ksx_1001_row_01_03_04_09_16ff, sizeof(ksx_1001_row_01_03_04_09_16ff), ksx_1001_row_29_converted_to_utf8, sizeof(ksx_1001_row_29_converted_to_utf8));
  convert_utf8_to_euc("EUC-KR", 0xbe, ksx_1001_row_01_03_04_09_16ff, sizeof(ksx_1001_row_01_03_04_09_16ff), ksx_1001_row_30_converted_to_utf8, sizeof(ksx_1001_row_30_converted_to_utf8));
  convert_utf8_to_euc("EUC-KR", 0xbf, ksx_1001_row_01_03_04_09_16ff, sizeof(ksx_1001_row_01_03_04_09_16ff), ksx_1001_row_31_converted_to_utf8, sizeof(ksx_1001_row_31_converted_to_utf8));
  convert_utf8_to_euc("EUC-KR", 0xc0, ksx_1001_row_01_03_04_09_16ff, sizeof(ksx_1001_row_01_03_04_09_16ff), ksx_1001_row_32_converted_to_utf8, sizeof(ksx_1001_row_32_converted_to_utf8));
  convert_utf8_to_euc("EUC-KR", 0xc1, ksx_1001_row_01_03_04_09_16ff, sizeof(ksx_1001_row_01_03_04_09_16ff), ksx_1001_row_33_converted_to_utf8, sizeof(ksx_1001_row_33_converted_to_utf8));
  convert_utf8_to_euc("EUC-KR", 0xc2, ksx_1001_row_01_03_04_09_16ff, sizeof(ksx_1001_row_01_03_04_09_16ff), ksx_1001_row_34_converted_to_utf8, sizeof(ksx_1001_row_34_converted_to_utf8));
  convert_utf8_to_euc("EUC-KR", 0xc3, ksx_1001_row_01_03_04_09_16ff, sizeof(ksx_1001_row_01_03_04_09_16ff), ksx_1001_row_35_converted_to_utf8, sizeof(ksx_1001_row_35_converted_to_utf8));
  convert_utf8_to_euc("EUC-KR", 0xc4, ksx_1001_row_01_03_04_09_16ff, sizeof(ksx_1001_row_01_03_04_09_16ff), ksx_1001_row_36_converted_to_utf8, sizeof(ksx_1001_row_36_converted_to_utf8));
  convert_utf8_to_euc("EUC-KR", 0xc5, ksx_1001_row_01_03_04_09_16ff, sizeof(ksx_1001_row_01_03_04_09_16ff), ksx_1001_row_37_converted_to_utf8, sizeof(ksx_1001_row_37_converted_to_utf8));
  convert_utf8_to_euc("EUC-KR", 0xc6, ksx_1001_row_01_03_04_09_16ff, sizeof(ksx_1001_row_01_03_04_09_16ff), ksx_1001_row_38_converted_to_utf8, sizeof(ksx_1001_row_38_converted_to_utf8));
  convert_utf8_to_euc("EUC-KR", 0xc7, ksx_1001_row_01_03_04_09_16ff, sizeof(ksx_1001_row_01_03_04_09_16ff), ksx_1001_row_39_converted_to_utf8, sizeof(ksx_1001_row_39_converted_to_utf8));
  convert_utf8_to_euc("EUC-KR", 0xc8, ksx_1001_row_01_03_04_09_16ff, sizeof(ksx_1001_row_01_03_04_09_16ff), ksx_1001_row_40_converted_to_utf8, sizeof(ksx_1001_row_40_converted_to_utf8));
}
