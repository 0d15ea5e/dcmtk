
NAME

    dsrdump


SYNOPSIS

    dsrdump [options] dsrfile-in...


SUMMARY

The dsrdump utility dumps the contents of a DICOM Structured Reporting (SR)
document (file format or raw data set) to stdout in textual form.  The output
of the document content follows the format proposed in David Clunie's book
"DICOM Structured Reporting" (PixelMed Publishing, 2000).

If dsrdump reads a raw data set (DICOM data without a file format meta-header)
it will attempt to guess the transfer syntax by examining the first few bytes
of the file.  It is not always possible to correctly guess the transfer syntax
and it is better to convert a data set to a file format whenever possible
(using the dcmconv utility).  It is also possible to use the -f and -t[ieb]
options to force dsrdump to read a dataset with a particular transfer syntax.


USAGE

dsrdump: Dump DICOM SR file and data set
usage: dsrdump [options] dsrfile-in...

parameters:
  dsrfile-in                    DICOM SR input filename to be dumped

general options:
  -h     --help                 print this help text and exit
         --version              print version information and exit
  -d     --debug                debug mode, print debug information
  -dd    --verbose-debug        verbose debug mode, print more details
input options:
  input file format:
    +f   --read-file            read file format or data set (default)
    -f   --read-dataset         read data set without file meta information
  input transfer syntax (only with --read-dataset):
    -t=  --read-xfer-auto       use TS recognition (default)
    -te  --read-xfer-little     read with explicit VR little endian TS
    -tb  --read-xfer-big        read with explicit VR big endian TS
    -ti  --read-xfer-implicit   read with implicit VR little endian TS
parsing options:
  additional information:
    -Ip  --processing-details   show currently processed content item
  error handling:
    -Ec  --ignore-constraints   ignore relationship content constraints
    -Ei  --skip-invalid-items   skip invalid content items (incl. sub-tree)
output options:
  printing:
    +Pf  --print-filename       print header with filename for each document
    -Ph  --no-document-header   do not print general document information
    +Pn  --number-nested-items  print position string in front of each line
    -Pn  --indent-nested-items  indent nested items by spaces (default)
    +Pl  --print-long-values    print long item values completely
    -Pl  --shorten-long-values  print long item values shortened (default)
    +Pu  --print-instance-uid   print SOP instance UID of referenced objects
    +Pc  --print-all-codes      print all codes (incl. concept name codes)


DICOM CONFORMANCE

The dsrdump utility supports the following SOP Classes (according to
DICOM 2003):

    BasicTextSR                 "1.2.840.10008.5.1.4.1.1.88.11"
    EnhancedSR                  "1.2.840.10008.5.1.4.1.1.88.22"
    ComprehensiveSR             "1.2.840.10008.5.1.4.1.1.88.33"
    MammographyCADSR            "1.2.840.10008.5.1.4.1.1.88.50"
    KeyObjectSelectionDocument  "1.2.840.10008.5.1.4.1.1.88.59"
    ChestCADSR                  "1.2.840.10008.5.1.4.1.1.88.65"


COMMAND LINE

All command line tools use the following notation for parameters: square
brackets enclose optional values (0-1), three trailing dots indicate that
multiple values are allowed (1-n), a combination of both means 0 to n values.

Command line options are distinguished from parameters by a leading '+' or '-'
sign, respectively.  Usually, order and position of command line options are
arbitrary (i.e. they can appear anywhere).  However, if options are mutually
exclusive the rightmost appearance is used.  This behaviour conforms to the
standard evaluation rules of common Unix shells.

In addition, one or more command files can be specified using an '@' sign as
a prefix to the filename (e.g. "@command.txt").  Such a command argument is
replaced by the content of the corresponding text file (multiple whitespaces
are treated as a single separator) prior to any further evaluation.  Please
note that a command file cannot contain another command file.
This simple but effective approach allows to summarize common combinations of
options/parameters and avoids longish and confusing command lines (an example
is provided in file dcmdata/apps/dumppat.txt).


ENVIRONMENT

The dsrdump utility will attempt to load DICOM data dictionaries specified in
the DCMDICTPATH environment variable.  By default, i. e. if the DCMDICTPATH
environment variable is not set, the file /usr/local/dicom/lib/dicom.dic (in
fact the PREFIX as defined during configure is used) will be loaded unless the
dictionary is built into the application (default for Windows).

The default behaviour should be preferred and the DCMDICTPATH environment
variable only used when alternative data dictionaries are required.  The
DCMDICTPATH environment variable has the same format as the Unix shell PATH
variable in that a colon (":") separates entries.  The data dictionary code
will attempt to load each file specified in the DCMDICTPATH environment
variable.  It is an error if no data dictionary can be loaded.
