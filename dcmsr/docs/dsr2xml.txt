
NAME

    dsr2xml


SYNOPSIS

    dsr2xml [options] dsrfile-in [xmlfile-out]


SUMMARY

The dsr2xml utility converts the contents of a DICOM Structured Reporting (SR)
document (file format or raw data set) to XML (Extensible Markup Language).
The XML Schema does not yet follow any standard format.  However, the dsr2xml
application might be enhanced in this aspect in the future (e.g. by supporting
HL7/CDA - Clinical Document Architecture).

If dsr2xml reads a raw data set (DICOM data without a file format meta-header)
it will attempt to guess the transfer syntax by examining the first few bytes
of the file.  It is not always possible to correctly guess the transfer syntax
and it is better to convert a data set to a file format whenever possible
(using the dcmconv utility).  It is also possible to use the -f and -t[ieb]
options to force dsr2xml to read a dataset with a particular transfer syntax.


USAGE

dsr2xml: Convert DICOM SR file and data set to XML
usage: dsr2xml [options] dsrfile-in [xmlfile-out]

parameters:
  dsrfile-in                     DICOM SR input filename to be converted
  xmlfile-out                    XML output filename (default: stdout)

general options:
  -h     --help                  print this help text and exit
         --version               print version information and exit
  -d     --debug                 debug mode, print debug information
  -dd    --verbose-debug         verbose debug mode, print more details
input options:
  input file format:
    +f   --read-file             read file format or data set (default)
    -f   --read-dataset          read data set without file meta information
  input transfer syntax (only with --read-dataset):
    -t=  --read-xfer-auto        use TS recognition (default)
    -te  --read-xfer-little      read with explicit VR little endian TS
    -tb  --read-xfer-big         read with explicit VR big endian TS
    -ti  --read-xfer-implicit    read with implicit VR little endian TS
output options:
  encoding:
    +Ec  --attr-code             encode code value, coding scheme designator
                                 and coding scheme version as XML attribute
    +Er  --attr-relationship     encode relationship type as XML attribute
    +Ev  --attr-value-type       encode value type as XML attribute
  XML structure:
    +Xs  --add-schema-reference  add reference to XML Schema "dsr2xml.xsd"
    +Xn  --use-xml-namespace     add XML namespace declaration to root element
  writing:
    +We  --write-empty-tags      write all tags even if their value is empty
    +Wt  --write-template-id     write template identification information


DICOM CONFORMANCE

The dsr2xml utility supports the following SOP Classes (according to
DICOM 2003):

    BasicTextSR                 "1.2.840.10008.5.1.4.1.1.88.11"
    EnhancedSR                  "1.2.840.10008.5.1.4.1.1.88.22"
    ComprehensiveSR             "1.2.840.10008.5.1.4.1.1.88.33"
    ProcedureLog                "1.2.840.10008.5.1.4.1.1.88.40"
    MammographyCadSR            "1.2.840.10008.5.1.4.1.1.88.50"
    KeyObjectSelectionDocument  "1.2.840.10008.5.1.4.1.1.88.59"
    ChestCADSR                  "1.2.840.10008.5.1.4.1.1.88.65"


COMMAND LINE

All command line tools use the following notation for parameters: square
brackets enclose optional values (0-1), three trailing dots indicate that
multiple values are allowed (1-n), a combination of both means 0 to n values.

Command line options are distinguished from parameters by a leading '+' or '-'
sign, respectively.  Usually, order and position of command line options are
arbitrary (i.e. they can appear anywhere).  However, if options are mutually
exclusive the rightmost appearance is used.  This behaviour conforms to the
standard evaluation rules of common Unix shells.

In addition, one or more command files can be specified using an '@' sign as
a prefix to the filename (e.g. "@command.txt").  Such a command argument is
replaced by the content of the corresponding text file (multiple whitespaces
are treated as a single separator) prior to any further evaluation.  Please
note that a command file cannot contain another command file.
This simple but effective approach allows to summarize common combinations of
options/parameters and avoids longish and confusing command lines (an example
is provided in file dcmdata/apps/dumppat.txt).


ENVIRONMENT

The dsr2xml utility will attempt to load DICOM data dictionaries specified in
the DCMDICTPATH environment variable.  By default, i. e. if the DCMDICTPATH
environment variable is not set, the file /usr/local/dicom/lib/dicom.dic (in
fact the PREFIX as defined during configure is used) will be loaded unless the
dictionary is built into the application (default for Windows).

The default behaviour should be preferred and the DCMDICTPATH environment
variable only used when alternative data dictionaries are required.  The
DCMDICTPATH environment variable has the same format as the Unix shell PATH
variable in that a colon (":") separates entries.  The data dictionary code
will attempt to load each file specified in the DCMDICTPATH environment
variable.  It is an error if no data dictionary can be loaded.
