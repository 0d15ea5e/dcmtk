#
# Wrapper implementation of TRY_RUN(), with some support for
# cross-compiling
#
# Usage and syntax is equivalent to CMake's TRY_RUN().
#

INCLUDE(CMakeParseArguments)
INCLUDE(${DCMTK_CMAKE_INCLUDE}CMake/dcmtkUseWine.cmake)

FUNCTION(DCMTK_TRY_RUN_CROSS RUN_RESULT_VAR COMPILE_RESULT_VAR bindir srcfile)
    CMAKE_PARSE_ARGUMENTS(DCMTK_TRY_RUN
            ""
            "COMPILE_OUTPUT_VARIABLE;RUN_OUTPUT_VARIABLE;OUTPUT_VARIABLE"
            "CMAKE_FLAGS;COMPILE_DEFINITIONS;ARGS"
            ${ARGN}
    )
    GET_FILENAME_COMPONENT(OUTPUT_EXECUTABLE ${srcfile} NAME)
    SET(OUTPUT_EXECUTABLE ${bindir}/${OUTPUT_EXECUTABLE}${CMAKE_EXECUTABLE_SUFFIX})
    SET(TRY_COMPILE_ARGS ${COMPILE_RESULT_VAR} ${bindir} ${srcfile})
    IF(DCMTK_TRY_RUN_CMAKE_FLAGS)
        LIST(APPEND TRY_COMPILE_ARGS CMAKE_FLAGS ${DCMTK_TRY_RUN_CMAKE_FLAGS})
    ENDIF()
    IF(DCMTK_TRY_RUN_COMPILE_DEFINITIONS)
        LIST(APPEND TRY_COMPILE_ARGS COMPILE_DEFINITIONS ${DCMTK_TRY_RUN_COMPILE_DEFINITIONS})
    ENDIF()
    IF(DCMTK_TRY_RUN_OUTPUT_VARIABLE)
        LIST(APPEND TRY_COMPILE_ARGS OUTPUT_VARIABLE ${DCMTK_TRY_RUN_OUTPUT_VARIABLE})
    ENDIF()
    TRY_COMPILE(${TRY_COMPILE_ARGS} COPY_FILE ${OUTPUT_EXECUTABLE})
    SET(${COMPILE_RESULT_VAR} ${${COMPILE_RESULT_VAR}} PARENT_SCOPE)
    IF(DCMTK_TRY_RUN_OUTPUT_VARIABLE)
        SET(${DCMTK_TRY_RUN_OUTPUT_VARIABLE} ${${DCMTK_TRY_RUN_OUTPUT_VARIABLE}} PARENT_SCOPE)
    ENDIF()
    IF(${COMPILE_RESULT_VAR})
        IF(WIN32)
            WINE_COMMAND(CMD ${OUTPUT_EXECUTABLE} ${DCMTK_TRY_RUN_ARGS})
            IF(CMD)
                EXECUTE_PROCESS(
                    COMMAND ${CMD}
                    RESULT_VARIABLE ${RUN_RESULT_VAR}
                    OUTPUT_VARIABLE ${DCMTK_TRY_RUN_RUN_OUTPUT_VARIABLE}
                    ERROR_VARIABLE ${DCMTK_TRY_RUN_RUN_OUTPUT_VARIABLE}
                )
                SET(${RUN_RESULT_VAR} ${${RUN_RESULT_VAR}} PARENT_SCOPE)
                SET(${DCMTK_TRY_RUN_RUN_OUTPUT_VARIABLE} ${${DCMTK_TRY_RUN_RUN_OUTPUT_VARIABLE}} PARENT_SCOPE)
            ENDIF()
        ELSE()
            MESSAGE(WARNING "Emulation for your target platform is not available, please fill in the required configure test results manually.")
            TRY_RUN(${RUN_RESULT_VAR} ${COMPILE_RESULT_VAR} ${bindir} ${srcfile} ${ARGN})
        ENDIF()
    ENDIF()
ENDFUNCTION(DCMTK_TRY_RUN_CROSS)

MACRO(DCMTK_TRY_RUN)
    IF(CMAKE_CROSSCOMPILING)
        DCMTK_TRY_RUN_CROSS(${ARGN})
    ELSE(CMAKE_CROSSCOMPILING)
        TRY_RUN(${ARGN})
    ENDIF(CMAKE_CROSSCOMPILING)
ENDMACRO(DCMTK_TRY_RUN)
