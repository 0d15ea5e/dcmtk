# Find iconv library
#
# Released under BSD license
#
#  LIBICONV_INCLUDE_DIRS - where to find iconv.h, etc
#  LIBICONV_LIBRARIES    - Lists of libraries when using iconv
#  LIBICONV_FOUND        - True if iconv found

INCLUDE(dcmtkTryCompile)

IF(LIBICONV_INCLUDE_DIR AND LIBICONV_LIBRARIES)
  # Was already found before
  SET(LIBICONV_FIND_QUIETLY TRUE)
ENDIF(LIBICONV_INCLUDE_DIR AND LIBICONV_LIBRARIES)

# Look for the header file
FIND_PATH(LIBICONV_INCLUDE_DIR NAMES iconv.h)
MARK_AS_ADVANCED(LIBICONV_INCLUDE_DIR)

# Look for the library
SET(LIBICONV_LIBS iconv)
FIND_LIBRARY(LIBICONV_LIBRARY NAMES ${LIBICONV_LIBS} HINTS ${LIBICONV_LIBDIR})
MARK_AS_ADVANCED(LIBICONV_LIBRARY)

IF(LIBICONV_INCLUDE_DIR AND LIBICONV_LIBRARY)
  SET(CMAKE_REQUIRED_INCLUDES ${LIBICONV_INCLUDE_DIR})
  SET(CMAKE_REQUIRED_LIBRARIES ${LIBICONV_LIBRARY})
  DCMTK_TRY_COMPILE(LIBICONV_FOUND "libiconv can be used" "
      #include <iconv.h>
      int main() {
          iconv_t cd = iconv_open(\"\", \"\");
          iconv(cd, 0, 0, 0, 0);
          iconv_close(cd);
      }
  ")
  SET(CMAKE_REQUIRED_INCLUDES)
  SET(CMAKE_REQUIRED_LIBRARIES)
ENDIF(LIBICONV_INCLUDE_DIR AND LIBICONV_LIBRARY)

# Copy the result to output variables
IF(LIBICONV_FOUND)
  SET(LIBICONV_LIBRARIES ${LIBICONV_LIBRARY})
  SET(LIBICONV_INCLUDE_DIRS ${LIBICONV_INCLUDE_DIR})
ELSE(LIBICONV_FOUND)
  SET(LIBICONV_LIBRARY)
  SET(LIBICONV_LIBRARIES)
  SET(LIBICONV_INCLUDE_DIR)
  SET(LIBICONV_INCLUDE_DIRS)
ENDIF(LIBICONV_FOUND)

# Report results
IF(NOT LIBICONV_FOUND)
  SET(LIBICONV_DIR_MESSAGE
    "Iconv was not found. Make sure LIBICONV_LIBDIR and LIBICONV_INCLUDE_DIR are set.")
  IF(NOT LIBICONV_FIND_QUIETLY)
    MESSAGE(STATUS ${LIBICONV_DIR_MESSAGE})
  ELSE(NOT LIBICONV_FIND_QUIETLY)
    IF(LIBICONV_FIND_REQUIRED)
      MESSAGE(FATAL_ERROR ${LIBICONV_DIR_MESSAGE})
    ENDIF(LIBICONV_FIND_REQUIRED)
  ENDIF(NOT LIBICONV_FIND_QUIETLY)
ENDIF(NOT LIBICONV_FOUND)
