
NAME

    dcmdjpeg


SYNOPSIS

    dcmdjpeg [options] dcmfile-in dcmfile-out


SUMMARY

The dcmdjpeg utility reads a JPEG-compressed DICOM image (dicomfile-in),
decompresses the JPEG data (i. e. conversion to a native DICOM transfer syntax)
and writes the converted image to an output file (dicomfile-out).


USAGE

dcmdjpeg: Decode JPEG-compressed DICOM file
usage: dcmdjpeg [options] dcmfile-in dcmfile-out

parameters:
  dcmfile-in                     DICOM input filename to be converted
  dcmfile-out                    DICOM output filename

general options:
  -h      --help                 print this help text and exit
          --version              print version information and exit
  -v      --verbose              verbose mode, print processing details
  -d      --debug                debug mode, print debug information
processing options:
  color space conversion options:
    +cp   --conv-photometric     convert if YCbCr photom. interpr. (default)

    # If the compressed image uses YBR_FULL or YBR_FULL_422 photometric
    # interpretation, convert to RGB during decompression.

    +cl   --conv-lossy           convert YCbCr to RGB if lossy JPEG

    # If the compressed image is encoded in lossy JPEG, assume YCbCr
    # color model and convert to RGB.

    +ca   --conv-always          always convert YCbCr to RGB

    # If the compressed image is a color image, assume YCbCr color model
    # and convert to RGB.

    +cn   --conv-never           never convert color space

    # Never convert color space during decompression.

  planar configuration options:
    +pa   --planar-auto          automatically determine planar configuration
                                 from SOP class and color space (default)

    # If the compressed image is a color image, store in color-by-plane
    # planar configuration if required by the SOP class and photometric
    # interpretation. Hardcopy Color images are always stored color-by-
    # plane, and the revised Ultrasound image objects are stored color-by-
    # plane if the color model is YBR_FULL.  Everything else is stored
    # color-by-pixel.

    +px   --color-by-pixel       always store color-by-pixel

    # If the compressed image is a color image, store in color-by-pixel
    # planar configuration.

    +pl   --color-by-plane       always store color-by-plane

    # If the compressed image is a color image, store in color-by-plane
    # planar configuration.

  SOP Instance UID options:
    +ud   --uid-default          keep same SOP Instance UID (default)

    #  Never assigns a new SOP instance UID.

    +ua   --uid-always           always assign new UID

    # Always assigns a new SOP instance UID

output options:
  output file format:
    +F    --write-file           write file format (default)
    -F    --write-dataset        write data set without file meta information
  output transfer syntax:
    +te   --write-xfer-little    write with explicit VR little endian (default)
    +tb   --write-xfer-big       write with explicit VR big endian TS
    +ti   --write-xfer-implicit  write with implicit VR little endian TS
  post-1993 value representations:
    +u    --enable-new-vr        enable support for new VRs (UN/UT) (default)
    -u    --disable-new-vr       disable support for new VRs, convert to OB
  group length encoding:
    +g=   --group-length-recalc  recalculate group lengths if present (default)
    +g    --group-length-create  always write with group length elements
    -g    --group-length-remove  always write without group length elements
  length encoding in sequences and items:
    +e    --length-explicit      write with explicit lengths (default)
    -e    --length-undefined     write with undefined lengths
  data set trailing padding (not with --write-dataset):
    -p=   --padding-retain       do not change padding
                                 (default if not --write-dataset)
    -p    --padding-off          no padding (implicit if --write-dataset)
    +p    --padding-create       [f]ile-pad [i]tem-pad: integer
                                 align file on multiple of f bytes
                                 and items on multiple of i bytes


ENVIRONMENT

The dcmdjpeg utility will attempt to load DICOM data dictionaries specified in
the DCMDICTPATH environment variable.  By default, if the DCMDICTPATH
environment variable is not set, the file /usr/local/dicom/lib/dicom.dic will
be loaded.  The default behaviour should be preferred and the DCMDICTPATH
environment variable only used when alternative data dictionaries are required.
The DCMDICTPATH environment variable has the same format as the shell PATH
variable in that a colon (":") separates entries.  The data dictionary code
will attempt to load each file specified in the DCMDICTPATH environment
variable.  It is an error if no data dictionary can be loaded.
