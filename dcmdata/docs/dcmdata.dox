/*!

\addtogroup dcmdata dcmdata

This module contains classes to manage DICOM data structures and files.

The main interface classes are:
\li \b DcmFileFormat
\li \b DcmDataset
\li \b DcmItem
\li \b DcmElement

\section Tools

This module contains the following command line tools:
\li \b dcm2xml:  \ref dcm2xml
\li \b dcmconv:  \ref dcmconv
\li \b dcmcrle:  \ref dcmcrle
\li \b dcmdrle:  \ref dcmdrle
\li \b dcmdump:  \ref dcmdump
\li \b dcmftest: \ref dcmftest
\li \b dcmgpdir: \ref dcmgpdir
\li \b dcmodify: \ref dcmodify
\li \b dump2dcm: \ref dump2dcm
\li \b xml2dcm:  \ref xml2dcm

\section Examples

The following example shows how to load a DICOM file and output the patient's name:

\code
DcmFileFormat fileformat;
OFCondition status = fileformat.loadFile("test.dcm");
if (status.good())
{
  OFString patientsName;
  if (fileformat.getDataset().findAndGetOFString(DCM_PatientsName, patientsName).good())
  {
    cout << "Patient's Name: " << patientsName << endl;
  } else
    cerr << "Error: cannot access Patient's Name!" << endl;
} else
  cerr << "Error: cannot read DICOM file (" << status.text() << ")" << endl;
\endcode

The following example shows how to create a DICOM dataset and save it to a file:

\code
char uid[100];
DcmFileFormat fileformat;
DcmDataset *dataset = fileformat.getDataset();
dataset->putAndInsertString(DCM_SOPClassUID, UID_SecondaryCaptureImageStorage);
dataset->putAndInsertString(DCM_SOPInstanceUID, dcmGenerateUniqueIdentifier(uid, SITE_INSTANCE_UID_ROOT));
dataset->putAndInsertString(DCM_PatientsName, "Doe^John");
/* ... */
dataset->putAndInsertUint8Array(DCM_PixelData, pixelData, pixelLength);
OFCondition status = fileformat.saveFile("test.dcm", EXS_LittleEndianExplicit);
if (status.bad())
  cerr << "Error: cannot write DICOM file (" << status.text() << ")" << endl;
\endcode

The following example shows how to create a general purpose DICOMDIR from multiple files:

\code
DicomDirInterface dicomdir;
OFCondition status = dicomdir.createNewDicomDir();
if (status.good())
{
  while ( /* there are files */ )
    dicomdir.addDicomFile( /* current filename */ );
  status = dicomdir.writeDicomDir();
  if (status.bad())
    cerr << "Error: cannot write DICOMDIR (" << status.text() << ")" << endl;
} else
  cerr << "Error: cannot create DICOMDIR (" << status.text() << ")" << endl;
\endcode

*/
