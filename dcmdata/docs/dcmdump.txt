
NAME

    dcmdump


SYNOPSIS

    dcmdump [options] dcmfile-in...


SUMMARY

The dcmdump utility dumps the contents of a dicom file (file format or raw data
set) to stdout in textual form.  Attributes with very large value fields (e.g.
pixel data) can be described as "(not loaded)". String value fields will be
delimited with square breackets ([]). Known UIDs will be displayed by their
names prefixed by an equals sign (e.g. =MRImageStorage).  Empty value fields
are described as "(no value available)".

If dcmdump reads a raw data set (dicom data without a file format meta-header)
it will attempt to guess the transfer syntax by examining the first few bytes
of the file.  It is not always possible to correctly guess the transfer syntax
and it is better to convert a data set to a file format whenever possible
(using the dcmconv utility).  It is also possible to use the -f and -t[ieb]
options to force dcmdump to read a dataset with a particular transfer syntax.


USAGE

dcmdump: Dump DICOM file and data set
usage: dcmdump [options] dcmfile-in...

parameters:
  dcmfile-in                   DICOM input filename to be dumped

general options:
  -h     --help                print this help text and exit
         --version             print version information and exit
  -d     --debug               debug mode, print debug information
input options:
  input file format:
    +f   --read-file           read file format or data set (default)
    -f   --read-dataset        read data set without file meta information
  input transfer syntax (only with --read-dataset):
    -t=  --read-xfer-auto      use TS recognition (default)
    -te  --read-xfer-little    read with explicit VR little endian TS
    -tb  --read-xfer-big       read with explicit VR big endian TS
    -ti  --read-xfer-implicit  read with implicit VR little endian TS
output options:
  printing:
    +M   --load-all            load very long tag values (default)
    -M   --load-short          do not load very long values (e.g. pixel data)
    +L   --print-all           print long tag values completely
    -L   --print-short         print long tag values shortened (default)
    +F   --print-filename      print header with filename for each input file
  error handling:
    -E   --stop-on-error       do not print if file is damaged (default)
    +E   --ignore-errors       attempt to print even if file is damaged
  searching:
    +P   --search              [t]ag: "xxxx,xxxx" or a data dictionary name
                               print the value of tag t
                               this option can be specified multiple times
                               (default: the complete file is printed)
    +s   --search-all          print all instances of searched tags (default)
    -s   --search-first        only print first instance of searched tags
    +p   --prepend             prepend sequence hierarchy to printed tag,
                               denoted by: (xxxx,xxxx).(xxxx,xxxx).*
                               (only with --search-all or --search-first)
    -p   --no-prepend          do not prepend hierarchy to tag (default)
  writing:
    +W   --write-pixel         [d]irectory : string
                               write pixel data to a .raw file stored in d
                               (little endian, filename created automatically)


ENVIRONMENT

The dcmdump utility will attempt to load DICOM data dictionaries specified in
the DCMDICTPATH environment variable.  By default, if the DCMDICTPATH
environment variable is not set, the file /usr/local/dicom/lib/dicom.dic will
be loaded.  The default behaviour should be preferred and the DCMDICTPATH
environment variable only used when alternative data dictionaries are required.
The DCMDICTPATH environment variable has the same format as the shell PATH
variable in that a colon (":") separates entries.  The data dictionary code
will attempt to load each file specified in the DCMDICTPATH environment
variable.  It is an error if no data dictionary can be loaded.
