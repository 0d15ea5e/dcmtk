NAME

    dump2dcm

SYNOPSIS

    dump2dcm [options] dumpfile-in dcmfile-out

SUMMARY

The dump2dcm utility converts an ASCII dumpfile to a dicom file.  
The dumpfile has the same format as the output of dcmdump.  Thus
it is possible to capture the output of dcmdump into a file,
modify some attributes and create a new dicom file.  However,
dump2dcm is not really suitable for generating dicom files 
containing pixel data.  

USAGE

dump2dcm [options] dumpfile-in dcmfile-out
options are:

  input options: 

      +ln     maximum line length n (default 4096)
  
  output options:

    DICOM fileformat (Sup. 1) support:
      -F      write file without metaheader
      +F      write file with metaheader (default)

    output transfer syntax:
      These options specify the transfer syntax of the dataset. In
      case of a DICOM file with metaheader, the metaheader has a
      standard defined transfer syntax and only the transfer syntax 
      of the additional dataset can be defined using this options.
      +ti     write with little-endian implicit transfer syntax
      +te     write with little-endian explicit transfer syntax
      +tb     write with big-endian explicit transfer syntax

    group length encoding: 
      +g      write with group lengths.
              Group length tags are created for every group in
              the DICOM dataset.
      +g=     recalculate group lengths (default).
              If group length tags defined in the dump file, there 
              value is recalculated. No additional group length tags 
              are created.
      -g      write without group lengths
              All group length tags are deleted from the dataset.

    length encoding in sequences and items:
      +e      write with explicit lengths (default)
      -e      write with undefined lengths

    padding (only applicable for DICOM files with metaheader)
      Due to "Supplement 1: Common Media Storage Functions 
      for Data Interchange", a dataset or an item in a sequence 
      can contain a DataSetTrailingPadding tag, if it is stored
      on media (with metaheader). 
      -p      no padding (default for datasets)
              Removes all DataSetTrailingPadding tags.
      +p n m  pad file x*n bytes and items y*m bytes
              Pad the whole file to a multiple of n bytes on the
              media. Every item can end with this padding attribute 
              on a multiple of m bytes. One of the two parameters n, m
              must be unequal to zero.

    unknown VR
      -u      disable generation of unknown VR (UN)
      +u      enable generation of unkniwn VR (UN) (default)

  other options:
      -h      print this usage string
      +V      verbose mode, print actions
      +dn     set debug level to n (n=1..9)

DUMPFILE DESCRIPTION

The input file can be an output of dcmdump. One element (Tag, VR, value) must 
be written into one line separated by arbitrary spaces or tab characters.
A # begins a comment that ends at the line end. Empty lines are allowed.

The parts of a line have the following syntax:
Tag:   (gggg,eeee)
       with gggg and eeee are 4 character hexadecimal values representing
       group- and element-tag. Spaces and Tabs can be anywhere in a Tag
       specification
VR:    Value Representation must be written as 2 characters as in Part 6
       of the DICOM 3.0 standard. No Spaces or Tabs are allowed between the
       two characters. If the VR can be determined from the Tag, this part of
       a line is optional.
Value: There are several rules for writing values:
       1. US, SS, SL, UL, FD, FL are written as 
          decimal strings that can be read by scanf.
       2. OB, OW values are written as byte or word hexadecimal values
          separated by \
       3. UI is written as =Name in data dictionary or as 
          unique identifer string (see  5.) , e.g. [1.2.840.....]
       4. Strings without () <> [] spaces, tabs and # can be 
          written directly 
       5. Other strings with must be surrounded by [ ]. No 
          bracket structure is passed. The value ends at the last ] in
          the line. Anything after the ] is interpreted as comment.
       6. ( < are interpreted special and may not be used when writing
          an input file by hand as beginning characters of a string.
       Multiple Value are separated by \
       The lines need not be sorted into ascending tag order. 
       References in DICOM Directories are not supported.
       Semantic errors are not detected.

Examples:
 (0008,0020) DA  [19921012]          #     8,  1  StudyDate
 (0008,0016) UI  =MRImageStorage     #    26,  1  SOPClassUID
 (0002,0012) UI  [1.2.276.0.7230010.100.1.1] 
 (0020,0032) DS  [0.0\0.0]           #     8,  2  ImagePositionPatient
 (0028,0010) US  256     
 (0002,0001) OB  01\00  


ENVIRONMENT

The dump2dcm utility will attempt to load DICOM data dictionaries
specified in the DCMDICTPATH environment variable.  By default, if
the DCMDICTPATH environment variable is not set, the file
/usr/local/dicom/lib/dicom.dic will be loaded.  The default behaviour
should be preferred and the DCMDICTPATH environment variable only used
when alternative data dictionaries are required.  The DCMDICTPATH 
environment variable has the same format as the shell PATH variable in
that a colon (":") separates entries.  The data dictionary code will
attempt to load each file specified in the DCMDICTPATH environment 
variable.  It is an error if no data dictionary can be loaded.

AUTHOR

Andreas Barth, Kuratorium OFFIS e.V., Oldenburg, Germany

