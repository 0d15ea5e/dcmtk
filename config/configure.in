dnl Process this file with autoconf to produce a configure script.
AC_INIT(Makefile.in)
AC_CONFIG_HEADER(include/config.h)

dnl Configuration Utilities

if test "x$prefix" = xNONE ; then
AC_DEFINE_UNQUOTED(DCMTK_PREFIX, "${ac_default_prefix}")
else
AC_DEFINE_UNQUOTED(DCMTK_PREFIX, "${prefix}")
fi
AC_DEFINE_UNQUOTED(DCM_DICT_DEFAULT_PATH, DCMTK_PREFIX "/lib/dicom.dic")

dnl Include general file
sinclude(general.m4)dnl

AC_CONFIG_AUX_DIR(`pwd`)

dnl Checks for programs.
AC_PROG_INSTALL
AC_PROG_CC
AC_PROG_CPP
AC_CHECK_PROGS(CXX, $CCC c++ cc++ g++ gcc CC cxx, gcc)

pedantic=""
if test -f /bin/uname ; then
	os=`uname -s`
	rev=`uname -r`
	if test \( "$os" = SunOS \) ; then
		case "$rev" in
			# only use the -pedantic compiler option on 
			# Solaris 2 machines.
			5.*) pedantic="-pedantic" ;;
		esac
	fi
fi
if test "${CXXFLAGS}set" = set ; then
	case "$CXX" in
		c++|g++|gcc) CXXFLAGS="-g -Wall $pedantic" ;;
		cc++) CXXFLAGS="-g -Wall" ;;
		CC) CXXFLAGS='-g' ;;
	esac
fi

AC_PROG_CXXCPP
dnl The next test is equivalent to AC_PROG_RANLIB
dnl Do not use AC_PROG_RANLIB because this produces
dnl an error on LINUX-systems in the configure script 
AC_CHECK_PROGS(RANLIB, ranlib, :)

dnl Check for "ar" and "libtool". On certain systems, e.g. NeXTStep, we must
dnl prefer "libtool" over "ar" if both are present. However, we don't use
dnl GNU libtool at the moment which is something completely different
dnl (not an "ar" replacement).
AC_CHECK_PROGS(AR, ar, :)
AC_CHECK_PROGS(LIBTOOL, libtool, :)
if test "${LIBTOOL}set" = libtoolset ; then
  AC_CHECK_GNU_LIBTOOL
  if test $ac_cv_check_gnu_libtool = yes ; then
    :
  else
    AR=$LIBTOOL
  fi
fi

case "$AR" in
libtool) ARFLAGS=-o ;;
ar) ARFLAGS=cruv ;;
esac

if test "${LIBEXT}set" = set ; then
	LIBEXT="a"
fi

AC_SUBST(ARFLAGS)
AC_SUBST(LIBEXT)

dnl Perform remaining tests with C++ compiler
AC_LANG_CPLUSPLUS

dnl Check special systems
AC_AIX
AC_ISC_POSIX
AC_SYS_LONG_FILE_NAMES

dnl Check X11 paths
AC_PATH_XTRA

dnl Checks for libraries.
AC_CHECK_GXXLIB
AC_CHECK_LIB(iostream, main)
dnl Some C++ compilers have problems with recursive main calls
dnl (e.g. Sun C++ 4.2). In this case we must test another function
dnl to link.
AC_CHECK_LIB(nsl, main)
if test $ac_cv_lib_nsl_main = no ; then
AC_CHECK_LIB(nsl, gethostbyname)
fi
AC_CHECK_LIB(socket, main)
if test $ac_cv_lib_socket_main = no ; then
AC_CHECK_LIB(socket, socket)
fi

dnl Checks for header files.
AC_HEADER_STDC
AC_HEADER_SYS_WAIT
AC_HEADER_DIRENT
AC_CHECK_TCP_H
AC_CHECK_HEADERS(alloca.h)
AC_CHECK_HEADERS(arpa/inet.h)
AC_CHECK_HEADERS(assert.h)
AC_CHECK_HEADERS(ctype.h)
AC_CHECK_HEADERS(fcntl.h)
AC_CHECK_HEADERS(io.h)
AC_CHECK_HEADERS(libc.h)
AC_CHECK_HEADERS(limits.h)
AC_CHECK_HEADERS(malloc.h)
AC_CHECK_HEADERS(netdb.h)
AC_CHECK_HEADERS(pthread.h)
AC_CHECK_HEADERS(semaphore.h)
AC_CHECK_HEADERS(sstream.h)
AC_CHECK_HEADERS(stat.h)
AC_CHECK_HEADERS(stdarg.h)
AC_CHECK_HEADERS(stddef.h)
AC_CHECK_HEADERS(stdlib.h)
AC_CHECK_HEADERS(string.h)
AC_CHECK_HEADERS(strings.h)
AC_CHECK_HEADERS(strstrea.h)
AC_CHECK_HEADERS(strstream.h)
AC_CHECK_HEADERS(synch.h)
AC_CHECK_HEADERS(sys/errno.h)
AC_CHECK_HEADERS(sys/file.h)
AC_CHECK_HEADERS(sys/ipc.h)
AC_CHECK_HEADERS(sys/param.h)
AC_CHECK_HEADERS(sys/resource.h)
AC_CHECK_HEADERS(sys/select.h)
AC_CHECK_HEADERS(sys/sem.h)
AC_CHECK_HEADERS(sys/shm.h)
AC_CHECK_HEADERS(sys/socket.h)
AC_CHECK_HEADERS(sys/stat.h)
AC_CHECK_HEADERS(sys/time.h)
AC_CHECK_HEADERS(sys/types.h)
AC_CHECK_HEADERS(sys/utime.h)
AC_CHECK_HEADERS(sys/utsname.h)
AC_CHECK_HEADERS(thread.h)
AC_CHECK_HEADERS(time.h)
AC_CHECK_HEADERS(unistd.h)
AC_CHECK_HEADERS(unix.h)
AC_CHECK_HEADERS(utime.h)

if test $ac_cv_header_synch_h = yes ; then
  dnl
  dnl check Solaris MT libraries
  dnl
  AC_CHECK_LIB(thread, sema_init, [
  ac_tr_lib=HAVE_LIBTHREAD
  AC_DEFINE_UNQUOTED($ac_tr_lib)
  MTLIBS="-lthread $MTLIBS"
  ])
else
  dnl
  dnl check Posix MT libraries
  dnl OSF/1 re-#defines most of the pthread function names. 
  dnl This is why we use pthread_key_create for the test.
  dnl 
  if test $ac_cv_header_pthread_h = yes ; then
    AC_CHECK_LIB(pthread, pthread_key_create, [
    ac_tr_lib=HAVE_LIBPTHREAD
    AC_DEFINE_UNQUOTED($ac_tr_lib)
    MTLIBS="-lpthread $MTLIBS"
    ])

    AC_CHECK_LIB(rt, sem_init, [
    ac_tr_lib=HAVE_LIBRT
    AC_DEFINE_UNQUOTED($ac_tr_lib)
    MTLIBS="-lrt $MTLIBS"
    ], , $MTLIBS )
  fi
fi

dnl
dnl if POSIX threads are there, check for read/write locks
dnl
if test $ac_cv_header_pthread_h = yes ; then
  AC_CHECK_LIB(pthread, pthread_rwlock_init, [
  ac_tr_lib=HAVE_PTHREAD_RWLOCK
  AC_DEFINE_UNQUOTED($ac_tr_lib)
  ])
fi

dnl
dnl if Posix or Solaris threads are present, define _REENTRANT
dnl
if test $ac_cv_header_synch_h = yes -o $ac_cv_header_pthread_h = yes ; then
  CXXFLAGS="-D_REENTRANT $CXXFLAGS"
  CFLAGS="-D_REENTRANT $CFLAGS"
fi

dnl Checks for typedefs, structures, and compiler characteristics.
AC_TYPE_SIZE_T

dnl Check if char is unsigned
AC_C_CHAR_UNSIGNED

AC_CHECK_SIZEOF(char)
AC_CHECK_SIZEOF(short)
AC_CHECK_SIZEOF(int)
AC_CHECK_SIZEOF(long)
AC_CHECK_SIZEOF(float)
AC_CHECK_SIZEOF(double)
AC_CHECK_SIZEOF(void *)
AC_TYPE_PID_T
AC_STRUCT_TM

dnl Checks for library functions.
AC_FUNC_MEMCMP
AC_FUNC_VPRINTF
AC_TYPE_SIGNAL
AC_FUNC_WAIT3
AC_CHECK_FUNCS(gethostname gethostid socket sysinfo)
AC_CHECK_FUNCS(strchr strstr strtoul itoa)
AC_CHECK_FUNCS(memcpy memset memmove memcmp bcopy bcmp)
AC_CHECK_FUNCS(getpid mktemp tempnam tmpnam getenv)
AC_CHECK_FUNCS(stat)
AC_CHECK_FUNCS(malloc_debug)
AC_CHECK_FUNCS(strerror strdup bzero index rindex access)
AC_CHECK_FUNCS(uname cuserid getlogin)
AC_CHECK_FUNCS(usleep)
AC_CHECK_FUNCS(semctl semget semop)
AC_CHECK_FUNCS(shmat shmdt shmctl shmget)
AC_CHECK_FUNCS(getwd getcwd)
AC_CHECK_FUNCS(flock lockf)
AC_CHECK_FUNCS(listen connect setsockopt getsockopt select gethostbyname)
AC_CHECK_FUNCS(bind accept getsockname)
AC_CHECK_FUNCS(waitpid)
AC_CHECK_FUNCS(getuid geteuid setuid)
AC_CHECK_FUNCS(sleep fork)
AC_CHECK_FUNCS(_findfirst)

dnl The following AC_CHECK_* macros _must_ have corresponding entries in 
dnl the acconfig.h file.  This is because the macros are specific to the
dnl DCMTK project and are not supported by GNU autoheader.

dnl Checks for prototypes

AC_CHECK_PROTOTYPE(_stricmp, string.h)
AC_CHECK_PROTOTYPE(accept, sys/types.h sys/socket.h)
AC_CHECK_PROTOTYPE(bind, sys/types.h sys/socket.h)
AC_CHECK_PROTOTYPE(bzero, string.h strings.h libc.h unistd.h stdlib.h)
AC_CHECK_PROTOTYPE(connect, sys/types.h sys/socket.h)
AC_CHECK_PROTOTYPE(flock, sys/file.h)
AC_CHECK_PROTOTYPE(getcwd, libc.h unistd.h stdlib.h)
AC_CHECK_PROTOTYPE(gethostbyname, libc.h unistd.h stdlib.h netdb.h)
AC_CHECK_PROTOTYPE(gethostid, libc.h unistd.h stdlib.h netdb.h)
AC_CHECK_PROTOTYPE(gethostname, unistd.h libc.h stdlib.h netdb.h)
AC_CHECK_PROTOTYPE(getsockname, sys/types.h sys/socket.h)
AC_CHECK_PROTOTYPE(getsockopt, sys/types.h sys/socket.h)
AC_CHECK_PROTOTYPE(getwd, libc.h unistd.h stdlib.h)
AC_CHECK_PROTOTYPE(listen, sys/types.h sys/socket.h)
AC_CHECK_PROTOTYPE(mktemp, libc.h unistd.h stdlib.h)
AC_CHECK_PROTOTYPE(select, sys/select.h sys/types.h sys/socket.h sys/time.h)
if test $ac_cv_prototype_select = yes ; then
AC_CHECK_INTP_SELECT(sys/types.h sys/socket.h sys/time.h)
fi
AC_CHECK_PROTOTYPE(semctl, sys/types.h sys/ipc.h sys/sem.h)
AC_CHECK_PROTOTYPE(semget, sys/types.h sys/ipc.h sys/sem.h)
AC_CHECK_PROTOTYPE(semop, sys/types.h sys/ipc.h sys/sem.h)
AC_CHECK_PROTOTYPE(setsockopt, sys/types.h sys/socket.h)
AC_CHECK_PROTOTYPE(shmat, sys/types.h sys/ipc.h sys/shm.h)
AC_CHECK_PROTOTYPE(shmctl, sys/types.h sys/ipc.h sys/shm.h)
AC_CHECK_PROTOTYPE(shmdt, sys/types.h sys/ipc.h sys/shm.h)
AC_CHECK_PROTOTYPE(shmget, sys/types.h sys/ipc.h sys/shm.h)
AC_CHECK_PROTOTYPE(socket, sys/types.h sys/socket.h)
AC_CHECK_PROTOTYPE(strcasecmp, string.h)
AC_CHECK_PROTOTYPE(usleep, libc.h unistd.h stdlib.h)
AC_CHECK_PROTOTYPE(wait3, libc.h sys/wait.h sys/time.h sys/resource.h)
AC_CHECK_PROTOTYPE(waitpid, sys/wait.h sys/time.h sys/resource.h)

AC_CHECK_DECLARATION(union semun, sys/types.h sys/ipc.h sys/sem.h)
AC_CHECK_DECLARATION(struct sembuf, sys/types.h sys/ipc.h sys/sem.h)
AC_CHECK_DECLARATION(struct utimbuf, sys/types.h utime.h)                          
AC_CHECK_DECLARATION(socklen_t, sys/types.h sys/socket.h)                          

AC_CHECK_CLASS_TEMPLATE
AC_CHECK_STATIC_TEMPLATE_METHOD
AC_CHECK_FUNCTION_TEMPLATE
AC_CHECK_EXPLICIT_TEMPLATE_SPECIALIZATION

if test "$no_x" = "yes" ; then
X_STD_LIBS=
else
X_STD_LIBS=-lX11
fi

dnl Special Definitions for output
AC_SUBST(CXXFLAGS)
AC_SUBST(X_STD_LIBS)
AC_SUBST(MTLIBS)

AC_OUTPUT(Makefile.def Makefile.x Makefile)

