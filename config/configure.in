dnl Process this file with autoconf to produce a configure script.
AC_INIT(Makefile.in)
AC_CONFIG_HEADER(include/config.h)

dnl Configuration Utilities

if test "x$prefix" = xNONE ; then
AC_DEFINE_UNQUOTED(DCM_DICT_DEFAULT_PATH, "${ac_default_prefix}/lib/dicom.dic")
else
AC_DEFINE_UNQUOTED(DCM_DICT_DEFAULT_PATH, "${prefix}/lib/dicom.dic")
fi

dnl Include general file
sinclude(general.m4)dnl

AC_CONFIG_AUX_DIR(.)

dnl Checks for programs.
AC_PROG_INSTALL
AC_PROG_CC
AC_PROG_CPP
AC_CHECK_PROGS(CXX, $CCC c++ cc++ g++ gcc CC cxx, gcc)

pedantic=""
if test -f /bin/uname ; then
	os=`uname -s`
	rev=`uname -r`
	if test \( "$os" = SunOS \) ; then
		case "$rev" in
			# only use the -pedantic compiler option on 
			# Solaris 2 machines.
			2.3|2.4|2.5|2.6) pedantic="-pedantic" ;;
		esac
	fi
fi
if test "${CXXFLAGS}set" = set ; then
	case "$CXX" in
		c++|g++|gcc) CXXFLAGS="-g -Wall $pedantic" ;;
		cc++) CXXFLAGS="-g -Wall" ;;
		CC) CXXFLAGS='-g' ;;
	esac
fi
AC_SUBST(CXXFLAGS)

AC_PROG_CXXCPP
dnl The next test is equivalent to AC_PROG_RANLIB
dnl Do not use AC_PROG_RANLIB because this produces
dnl an error on LINUX-systems in the configure script 
AC_CHECK_PROGS(RANLIB, ranlib, :)
AC_CHECK_PROGS(AR, libtool ar)

case "$AR" in
libtool) ARFLAGS=-o ;;
ar) ARFLAGS=cruv ;;
esac

AC_SUBST(ARFLAGS)

dnl Check special systems
AC_AIX
AC_ISC_POSIX
AC_SYS_LONG_FILE_NAMES

dnl Check X11 paths
AC_PATH_XTRA

dnl Checks for libraries.
AC_LANG_CPLUSPLUS
AC_CHECK_GXXLIB
AC_CHECK_LIB(iostream, main)
AC_CHECK_LIB(nsl, main)
AC_CHECK_LIB(socket, main)

dnl Checks for header files.
AC_HEADER_STDC
AC_HEADER_SYS_WAIT
AC_HEADER_DIRENT
AC_CHECK_HEADERS(unistd.h)
AC_CHECK_HEADERS(libc.h)
AC_CHECK_HEADERS(unix.h)
AC_CHECK_HEADERS(stdlib.h)
AC_CHECK_HEADERS(sys/types.h)
AC_CHECK_HEADERS(sys/stat.h)
AC_CHECK_HEADERS(stat.h)
AC_CHECK_HEADERS(fcntl.h)
AC_CHECK_HEADERS(stdarg.h)
AC_CHECK_HEADERS(sys/file.h)
AC_CHECK_HEADERS(sys/socket.h)
AC_CHECK_HEADERS(sys/time.h)
AC_CHECK_HEADERS(netinet/in.h)
AC_CHECK_HEADERS(netdb.h)
AC_CHECK_HEADERS(stddef.h)
AC_CHECK_HEADERS(sys/utsname.h)
AC_CHECK_HEADERS(limits.h)
AC_CHECK_HEADERS(sys/select.h)
AC_CHECK_HEADERS(malloc.h)
AC_CHECK_HEADERS(sys/ipc.h)
AC_CHECK_HEADERS(sys/sem.h)
AC_CHECK_HEADERS(sys/shm.h)
AC_CHECK_HEADERS(sys/param.h)
AC_CHECK_HEADERS(sys/resource.h)
AC_CHECK_HEADERS(sys/errno.h)
AC_CHECK_HEADERS(time.h)

dnl Checks for typedefs, structures, and compiler characteristics.
AC_TYPE_SIZE_T
AC_CHECK_SIZEOF(char)
AC_CHECK_SIZEOF(short)
AC_CHECK_SIZEOF(int)
AC_CHECK_SIZEOF(long)
AC_CHECK_SIZEOF(float)
AC_CHECK_SIZEOF(double)
AC_TYPE_PID_T
AC_STRUCT_TM

dnl Checks for library functions.
AC_FUNC_MEMCMP
AC_FUNC_VPRINTF
AC_TYPE_SIGNAL
AC_FUNC_WAIT3
AC_CHECK_FUNCS(gethostname gethostid socket sysinfo)
AC_CHECK_FUNCS(strchr strstr strtoul itoa)
AC_CHECK_FUNCS(memcpy)
AC_CHECK_FUNCS(getpid mktemp getenv)
AC_CHECK_FUNCS(stat)
AC_CHECK_FUNCS(malloc_debug)
AC_CHECK_FUNCS(strerror strdup tempnam bzero index rindex access)
AC_CHECK_FUNCS(uname cuserid getlogin)
AC_CHECK_FUNCS(usleep)
AC_CHECK_FUNCS(semctl semget semop)
AC_CHECK_FUNCS(shmat shmdt shmctl shmget)
AC_CHECK_FUNCS(getwd getcwd)
AC_CHECK_FUNCS(flock lockf)
AC_CHECK_FUNCS(listen connect setsockopt getsockopt select gethostbyname)
AC_CHECK_FUNCS(bind accept getsockname)
AC_CHECK_FUNCS(waitpid)
AC_CHECK_FUNCS(getuid geteuid setuid)
AC_CHECK_FUNCS(sleep fork)

dnl Checks for prototypes

if test $ac_cv_header_stdc = yes ; then
AC_CHECK_PROTOTYPE(bzero, string.h)
else
AC_CHECK_PROTOTYPE(bzero)
fi
AC_CHECK_PROTOTYPE(accept, sys/types.h sys/socket.h)
AC_CHECK_PROTOTYPE(bind, sys/types.h sys/socket.h)
AC_CHECK_PROTOTYPE(gethostbyname, netdb.h)
AC_CHECK_PROTOTYPE(flock, sys/file.h)
AC_CHECK_PROTOTYPE(listen, sys/types.h sys/socket.h)
AC_CHECK_PROTOTYPE(socket, sys/types.h sys/socket.h)
AC_CHECK_PROTOTYPE(connect, sys/types.h sys/socket.h)
AC_CHECK_PROTOTYPE(select, sys/types.h sys/socket.h)
AC_CHECK_PROTOTYPE(setsockopt, sys/types.h sys/socket.h)
AC_CHECK_PROTOTYPE(getsockopt, sys/types.h sys/socket.h)
AC_CHECK_PROTOTYPE(getsockname, sys/types.h sys/socket.h)
AC_CHECK_PROTOTYPE(wait3, sys/wait.h sys/time.h sys/resource.h)
AC_CHECK_PROTOTYPE(waitpid, sys/wait.h sys/time.h sys/resource.h)
if test $ac_cv_header_unistd_h = yes ; then
AC_CHECK_PROTOTYPE(gethostname, unistd.h)
else
AC_CHECK_PROTOTYPE(gethostname)
fi
AC_CHECK_PROTOTYPE(semctl, sys/types.h sys/ipc.h sys/sem.h)
AC_CHECK_PROTOTYPE(semget, sys/types.h sys/ipc.h sys/sem.h)
AC_CHECK_PROTOTYPE(semop, sys/types.h sys/ipc.h sys/sem.h)
AC_CHECK_PROTOTYPE(shmat, sys/types.h sys/ipc.h sys/shm.h)
AC_CHECK_PROTOTYPE(shmdt, sys/types.h sys/ipc.h sys/shm.h)
AC_CHECK_PROTOTYPE(shmctl, sys/types.h sys/ipc.h sys/shm.h)
AC_CHECK_PROTOTYPE(shmget, sys/types.h sys/ipc.h sys/shm.h)
if test $ac_cv_header_libc_h = yes ; then
if test $ac_cv_header_unistd_h = yes ; then
AC_CHECK_PROTOTYPE(usleep, libc.h unistd.h)
AC_CHECK_PROTOTYPE(gethostid, libc.h unistd.h)
else
AC_CHECK_PROTOTYPE(usleep, libc.h)
AC_CHECK_PROTOTYPE(gethostid, libc.h)
fi
AC_CHECK_PROTOTYPE(mktemp, stdlib.h libc.h)
else
if test $ac_cv_header_unistd_h = yes ; then
AC_CHECK_PROTOTYPE(usleep, unistd.h)
AC_CHECK_PROTOTYPE(gethostid, unistd.h)
else
AC_CHECK_PROTOTYPE(usleep)
AC_CHECK_PROTOTYPE(gethostid)
fi
AC_CHECK_PROTOTYPE(mktemp, stdlib.h)
fi

AC_CHECK_DECLARATION(union semun, sys/types.h sys/ipc.h sys/sem.h)
AC_CHECK_DECLARATION(struct sembuf, sys/types.h sys/ipc.h sys/sem.h)

if test "$no_x" = "yes" ; then
X_STD_LIBS=
else
X_STD_LIBS=-lX11
fi

dnl Special Definitions for output
AC_SUBST(X_STD_LIBS)

AC_OUTPUT(Makefile.def Makefile.x Makefile)

