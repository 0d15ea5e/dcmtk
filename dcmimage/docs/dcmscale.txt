
NAME

    dcmscale


SYNOPSIS

    dcmscale [options] dcmfile-in dcmfile-out


SUMMARY

The dcmscale utility reads a DICOM image, scales it according to the command
line settings and writes back the DICOM image.
This utility only supports uncompressed and RLE compressed DICOM images.  The
command line tool dcmjscal (located in dcmjpeg/apps) also supports a number of
JPEG compression schemes.


USAGE

dcmscale: Scale DICOM images
usage: dcmscale [options] dcmfile-in dcmfile-out

parameters:
  dcmfile-in   DICOM input filename to be scaled
  dcmfile-out  DICOM output filename to be written

general options:
  -h      --help                 print this help text and exit
          --version              print version information and exit
  -d      --debug                debug mode, print debug information
  -v      --verbose              verbose mode, print processing details
input options:
  input file format:
    +f    --read-file            read file format or data set (default)
    -f    --read-dataset         read data set without file meta information
  input transfer syntax (only with --read-dataset):
    -t=   --read-xfer-auto       use TS recognition (default)
    -te   --read-xfer-little     read with explicit VR little endian TS
    -tb   --read-xfer-big        read with explicit VR big endian TS
    -ti   --read-xfer-implicit   read with implicit VR little endian TS
image processing and encoding options:
  scaling:
    +a    --recognize-aspect     recognize pixel aspect ratio (default)
    -a    --ignore-aspect        ignore pixel aspect ratio when scaling
    +i    --interpolate          [n]umber of algorithm : integer
                                 use interpolation when scaling (1..2, def: 1)
    -i    --no-interpolation     no interpolation when scaling
    -S    --no-scaling           no scaling, ignore pixel aspect ratio (default)
    +Sxf  --scale-x-factor       [f]actor : float
                                 scale x axis by factor, auto-compute y axis
    +Syf  --scale-y-factor       [f]actor : float
                                 scale y axis by factor, auto-compute x axis
    +Sxv  --scale-x-size         [n]umber : integer
                                 scale x axis to n pixels, auto-compute y axis
    +Syv  --scale-y-size         [n]umber : integer
                                 scale y axis to n pixels, auto-compute x axis
  SOP Instance UID options:
    +ua   --uid-always           always assign new SOP Instance UID (default)
    +un   --uid-never            never assign new SOP Instance UID
output options:
  output file format:
    +F    --write-file           write file format (default)
    -F    --write-dataset        write data set without file meta information
  output transfer syntax:
    +t=   --write-xfer-same      write with same TS as input (default)
    +te   --write-xfer-little    write with explicit VR little endian TS
    +tb   --write-xfer-big       write with explicit VR big endian TS
    +ti   --write-xfer-implicit  write with implicit VR little endian TS
  post-1993 value representations:
    +u    --enable-new-vr        enable support for new VRs (UN/UT) (default)
    -u    --disable-new-vr       disable support for new VRs, convert to OB
  group length encoding:
    +g=   --group-length-recalc  recalculate group lengths if present (default)
    +g    --group-length-create  always write with group length elements
    -g    --group-length-remove  always write without group length elements
  length encoding in sequences and items:
    +e    --length-explicit      write with explicit lengths (default)
    -e    --length-undefined     write with undefined lengths
  data set trailing padding (not with --write-dataset):
    -p=   --padding-retain       do not change padding
                                 (default if not --write-dataset)
    -p    --padding-off          no padding (implicit if --write-dataset)
    +p    --padding-create       [f]ile-pad [i]tem-pad: integer
                                 align file on multiple of f bytes
                                 and items on multiple of i bytes


ENVIRONMENT

The dcmscale utility will attempt to load DICOM data dictionaries specified in
the DCMDICTPATH environment variable.  By default, if the DCMDICTPATH
environment variable is not set, the file /usr/local/dicom/lib/dicom.dic will
be loaded.  The default behaviour should be preferred and the DCMDICTPATH
environment variable only used when alternative data dictionaries are required.
The DCMDICTPATH environment variable has the same format as the shell PATH
variable in that a colon (":") separates entries.  The data dictionary code
will attempt to load each file specified in the DCMDICTPATH environment
variable.  It is an error if no data dictionary can be loaded.
